AC_INIT(src/lookup_model.hh)
AC_CONFIG_AUX_DIR(config)
AC_CANONICAL_SYSTEM

AM_INIT_AUTOMAKE(lookup,0.0)
AM_CONFIG_HEADER(config.h)
AM_MAINTAINER_MODE

AC_PROG_CC
AC_PROG_CXX
AC_PROG_CXXCPP
AC_LANG_CPLUSPLUS

AC_PROG_LN_S
AC_PROG_RANLIB
AC_CHECK_TOOL(AR, ar)

AC_C_BIGENDIAN

dnl ----------------------------
dnl --enable-optimize
dnl ----------------------------
AC_ARG_ENABLE(optimize,
        [  --enable-optimize       enable compiler optimizations],
)

dnl ----------------------------
dnl --enable-profile
dnl ----------------------------
AC_ARG_ENABLE(profile,
        [  --enable-profile        turn on profiling],
)

dnl ----------------------------
dnl XORP pointers
dnl ----------------------------
XORPINC=`pwd`/../xorp
AC_ARG_WITH(xorp-src,
	[  --with-xorp-src=DIR   specify xorp source directory ],
	[ XORPINC="$withval" ]
)
CPPFLAGS="${CPPFLAGS} -I${XORPINC}"

AC_ARG_WITH(libxorp-libdir,
	[  --with-libxorp-libdir=DIR   specify libxorp directory ],
	[ LIBXORPDIR="$withval" ]
)
LDFLAGS=-L${LIBXORPDIR}


dnl
dnl Include the macros for testing compiler-supported command-line options
dnl
builtin(include, config/compiler_flags.m4)
if test "${GCC}" = "yes" ; then
        dnl
        dnl TODO: add -ansi -pedantic
        dnl XXX: Flag -Wtraditional is not recommended for C, because:
        dnl     - On FreeBSD-4.5 macros like IN_CLASSA(i) from netinet/in.h
        dnl       create a warning for gcc 2.95.3
        dnl     - On Linux RedHat 7.2, #elif creates a warning for gcc 2.96
        dnl
        CPARANOIDFLAGS="-W -Wall -Wwrite-strings -Wbad-function-cast -Wmissing-prototypes -Wcast-qual -Wmissing-declarations -Werror -Wpointer-arith -Wcast-align -Wstrict-prototypes -Wnested-externs -Wnon-const-format"
        CXXPARANOIDFLAGS="-W -Wall -Wwrite-strings -Wmissing-prototypes -Wcast-qual -Werror -Wpointer-arith -Wcast-align -Wstrict-prototypes -Woverloaded-virtual -Wnon-const-format -Wtraditional"
        XR_TRY_ADD_CFLAGS($CPARANOIDFLAGS)
        XR_TRY_ADD_CXXFLAGS($CXXPARANOIDFLAGS)
        XR_TRY_ADD_CXXFLAGS("-ftemplate-depth-20")

        dnl
        dnl If debugging is disabled, filter-out the "-g" flag
        dnl
        if test "${enable_debug}" = "no" ; then
                CFLAGS=`echo $CFLAGS |  sed 's/-g//g'`
                CXXFLAGS=`echo $CXXFLAGS |  sed 's/-g//g'`
        fi

        dnl default compiler flags have optimization turned on which
        dnl can cause helpful debugging info to be optimized out.
        if test "${enable_optimize}" != "yes" ; then
                dnl Could just append -O0, but two -O args are icky
                dnl We make assumption change is O2 because extended regexps
                dnl are not portable...
                changequote(<<, >>)dnl preserve braces in sed expressions
                CFLAGS=`echo $CFLAGS | sed 's/-O4//g'`
                CXXFLAGS=`echo $CXXFLAGS | sed 's/-O4//g'`
                changequote([, ])dnl
        fi
        if test "${enable_profile}" = "yes" ; then
                CFLAGS="${CFLAGS} -pg"
		CXXFLAGS="${CXXFLAGS} -pg"
        fi
        if test "${enable_debug_fnames}" = "yes" ; then
                AC_DEFINE(DEBUG_PRINT_FUNCTION_NAME, 1,
                        [Define to 1 to enable printing function name in debug me
ssages])
        fi
fi

AC_TRY_COMPILE(
[
#include <inttypes.h> 
],
[
    uint32_t lo, hi;
    uint64_t x;
    __asm__ volatile(".byte 0x0f,0x31" : "=a" (lo), "=d" (hi));
    x = ((uint64_t)hi) << 32 | lo;
],
AC_DEFINE(HAVE_PENTIUM_COUNTERS, ,[Pentium performance counters available]),
)

AH_BOTTOM(
#ifndef WORDS_BIGENDIAN
#define WORDS_SMALLENDIAN
#endif
)

AC_OUTPUT(
	Makefile
	src/Makefile
,
	echo timestamp > stamp-h
)