The sources for these web pages live in the ./html_src directory.  The
pages are generated by the Makefile in this directory using
scripts/XorpGenerator.py.  Edits should be made to the sources and
then propagated using GNU make.

Testing and Installing pages
============================

All of the generated content appears within this single directory.

Other components such as downloads and bugzilla live in their
directories on the web server and the web server configuration makes
them appear under the www.xorp.org url space.  The directories are:

WWWHOME=/usr/local/www/data/

XORP_BUGZILLA=${WWWHOME}/xorp-bugzilla	  # bug reporting system

XORP_RELEASES=${WWWHOME}/xorp-releases    # hand crafted release material

XORP_HTML=${WWWHOME}/xorp		  # script generated html pages

XORP_TEST=${WWWHOME}/xorp-test		  # directory for testing script
					  # generated html pages

This README is part of the web site core - it accompanies the script
generated html pages.  The pages live in www directory on the CVS
server.  Both the source content and the generated pages are checked
in.  The source content is homed in ./html_src and this is what should
be edited.

You probably want to try out changes first on a side system.  The host
test.xorp.org serves this purpose.  test.xorp.org is a virtual host on
the web server that looks in /usr/local/www/data/xorp-test for
content.  If you check out a copy of xorp there using:

  $ cd /usr/local/www/data
  $ cvs -d ext:xorpc.icir.org:/usr/local/www/data/cvs co -d xorp-test www

You can then make you changes to html_src and rebuild the pages with
gmake (and validate them with 'gmake check').  Later in this document
is more info on tools for validating www pages and cascading style
sheets.

Once you are happy with your changes you can simply move the old
'xorp' directory out of the way and move 'xorp-test' to 'xorp'.

NB Because bugzilla and release material are housed elsewhere nothing
needs to be done there.

Page Layout overview
====================

Before editing the generated content, it's helpful to know how it's
going to be layed out.  The generator script generates pages with a
navigation bar and uses the following layout:

    +---------------------+
    |        Header       |
    +--------+------------+
    |        |            |
    | Navbar | Content    |
    |        |            |
    +--------+------------+
    |   Footer (unused)   |
    +---------------------+

XorpGenerator.py has the navbar contents presented as a list within
the script.  You can edit the list contents to add and remove navbar
items.

NB At the time of writing the footer is unused -- I couldn't get it
render in the correct place reliably and timed out trying.

Validation Tools
================

These are just some tools that I've found convenient when working with
the XORP web pages.  I'm not a HTML, CSS, or design wizard (and
neither are you probably ;-).  Before updating the main web site, it's
probably worth running all of the suggestions below or equivalents.

o For html:
        http://validator.w3.org
        nsgmls -s <filename>

o For css:
	http://jigsaw.w3.org/css-validator

o Link Checking:

I've used linklint which will go through pages and generate a browseable
summary of good and bad links.  An example usage would be:

	linklint -doc linkdoc -http -host test.xorp.org

and this would check all the links for the files below
http://test.xorp.org and generate reports in the linkdoc directory.
Quite a few files are output and the easiest starting point is also
the most obvious - index.html.

