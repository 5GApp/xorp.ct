#define yy_create_buffer yy_policy_parser_create_buffer
#define yy_delete_buffer yy_policy_parser_delete_buffer
#define yy_scan_buffer yy_policy_parser_scan_buffer
#define yy_scan_string yy_policy_parser_scan_string
#define yy_scan_bytes yy_policy_parser_scan_bytes
#define yy_flex_debug yy_policy_parser_flex_debug
#define yy_init_buffer yy_policy_parser_init_buffer
#define yy_flush_buffer yy_policy_parser_flush_buffer
#define yy_load_buffer_state yy_policy_parser_load_buffer_state
#define yy_switch_to_buffer yy_policy_parser_switch_to_buffer
#define yyin yy_policy_parserin
#define yyleng yy_policy_parserleng
#define yylex yy_policy_parserlex
#define yyout yy_policy_parserout
#define yyrestart yy_policy_parserrestart
#define yytext yy_policy_parsertext

#line 19 "lex.yy_policy_parser.cc"
/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header$
 * $FreeBSD: src/usr.bin/lex/flex.skl,v 1.8 2004/01/06 19:03:44 nectar Exp $
 */

#if defined(__FreeBSD__)
#include <sys/cdefs.h>
#else
#define __unused
#endif

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include <unistd.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t )) __unused;
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)


#define yywrap() 1
#define YY_SKIP_YYWRAP
typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 51
#define YY_END_OF_BUFFER 52
static yyconst short int yy_accept[1353] =
    {   0,
        0,    0,    0,    0,   52,   50,   48,   49,   50,    6,
       16,   17,   36,   33,   35,    2,    2,    2,   15,   47,
       22,   37,   23,   46,   46,   46,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
        8,    7,   48,   19,    3,    0,    2,    0,    0,    2,
        2,    2,   13,   20,   18,   21,   46,   46,   46,   46,
       46,   46,   46,   46,   46,   46,   46,   46,   46,   46,
       30,   46,   46,   46,   46,   46,    8,    0,    0,    0,
        0,    2,    0,    0,   13,    2,    2,    0,    0,   13,
       13,   13,   13,   46,   46,   43,   46,   34,   29,   39,

       46,   46,   46,   46,   46,   32,   46,   46,   46,   46,
       46,   46,   31,    1,    0,    0,    0,    0,    0,    2,
        0,    0,    0,   13,   13,   13,   13,    0,    0,   14,
       14,    0,   13,    0,   13,   13,   13,   13,   46,   46,
       46,   46,   46,   38,   46,   46,   46,   46,   46,   46,
       46,    4,    0,    0,    0,    0,    2,    0,    0,   13,
       13,    0,   13,   13,   13,   13,    0,    0,   14,   14,
       14,    0,    0,    0,   13,   13,   13,   13,   13,   13,
       13,   44,   46,   24,    5,   46,   46,   46,   46,   46,
       46,   46,    0,    0,    0,    0,    0,    0,    0,    0,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,    0,    0,   12,   14,    0,    0,    0,    0,    0,
       13,    0,   13,    0,   13,   13,   13,   13,   41,   25,
       40,   46,   46,   46,   42,   46,   10,   10,   10,    0,
        0,    0,   13,   13,    0,   13,   13,   13,   13,   13,
       13,    0,   13,   13,   13,   13,    0,    0,   12,   12,
       12,   12,   12,    0,    0,    0,    0,    0,    0,    0,
       13,   13,   13,   13,   13,   13,   13,   46,   46,   46,
       26,    0,    0,   10,   10,   10,   10,    0,    0,    0,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,    0,    0,
        0,   12,   12,   12,   12,    0,   12,    0,   12,   12,
       12,   12,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   13,    0,   13,    0,   13,   13,   13,   13,
       27,   46,   45,    0,   11,   11,   11,   10,    0,    0,
       13,   13,    0,   13,   13,   13,   13,   13,   13,    0,
       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,    0,    0,   12,   12,    0,   12,   12,   12,   12,
        0,    0,    0,   12,   12,   12,   12,   12,   12,   12,
       13,   13,   13,    0,    0,    0,    0,    0,    0,    0,

        0,   13,   13,   13,   13,   13,   13,   13,   28,    0,
        0,    0,    0,    0,    0,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        0,    0,    0,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,    0,    0,    0,    0,    0,   12,
        0,   12,    0,   12,   12,   12,   12,   13,   13,   13,
       13,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   13,    0,   13,    0,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,    0,   13,   13,    0,   13,

       13,   13,   13,   13,   13,    0,   13,   13,   13,   13,
       13,   13,    0,   13,   13,   13,   13,   13,   13,    0,
       13,   13,   13,   13,    0,    0,   12,   12,    0,   12,
       12,   12,   12,   12,   12,    0,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,   12,   12,   12,
       12,   12,   12,   12,   13,   13,   13,   13,    0,    0,
        0,    0,    0,    0,    0,    0,   13,   13,   13,   13,
       13,   13,   13,    0,    0,    0,    0,    0,    0,    0,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    0,    0,    0,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   12,    0,   12,    0,   12,   12,   12,
       12,   13,   13,   13,   13,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   13,    0,   13,    0,   13,
       13,   13,   13,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   13,    0,   13,    0,   13,   13,   13,   13,
       13,   13,    0,   13,   13,   13,   13,   13,   13,    0,

       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,   13,   13,    0,   13,   13,   13,   13,    0,    0,
       12,   12,    0,   12,   12,   12,   12,   12,   12,    0,
       12,   12,   12,   12,   12,   12,    0,   12,   12,   12,
       12,   12,   12,   12,    0,    0,    0,    0,    0,    0,
        0,    0,   12,   12,   12,   12,   12,   12,   12,   13,
       13,   13,   13,    0,    0,    0,    0,    0,    0,    0,
        0,   13,   13,   13,   13,   13,   13,   13,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,    0,    0,    0,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   12,    0,   12,    0,   12,   12,   12,
       12,   13,   13,   13,   13,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   13,    0,   13,    0,   13,
       13,   13,   13,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   13,   13,    0,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,    0,    0,   12,
       12,    0,   12,   12,   12,   12,   12,   12,    0,   12,
       12,   12,   12,   12,   12,    0,   12,   12,   12,   12,
       12,   12,    0,   12,   12,   12,   12,   12,   12,   12,
       12,    0,    0,    0,    0,    0,    0,    0,    0,   12,
       12,   12,   12,   12,   12,   12,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,    0,    0,   13,   13,
       13,   13,    9,    9,    9,    0,    0,    0,    0,    0,
        0,    0,   13,   13,   13,   13,   13,   13,   13,    0,
        0,    0,   12,   12,   12,   12,   12,   12,   12,   12,

       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   12,    0,
       12,    0,   12,   12,   12,   12,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       13,   13,    9,    9,    9,    9,    0,    0,    0,    0,
       13,   13,   13,   13,   13,   13,   13,    0,    0,    0,
        0,   12,    0,   12,    0,   12,   12,   12,   12,   12,
       12,    0,   12,   12,   12,   12,   12,   12,    0,   12,

       12,   12,   12,   12,   12,    0,   12,   12,   12,   12,
       12,   12,    0,   12,   12,   12,   12,   12,   12,   12,
       12,    0,    0,    0,    0,    0,    0,    0,    0,   12,
       12,   12,   12,   12,   12,   12,   13,   13,   13,   13,
        0,    0,    0,    0,    0,   13,    9,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   12,    0,   12,    0,   12,

       12,   12,   12,   13,   13,   13,   13,    0,    0,    0,
        0,    0,   13,   13,   13,   13,    0,    0,    0,    0,
        0,    0,   12,   12,    0,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,    0,   12,   12,
       12,   12,   13,   13,   13,   13,    0,   13,   13,   13,
       13,    0,    0,    0,    0,    0,    0,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   12,   12,
       13,   13,   13,   13,   13,    0,    0,    0,    0,   12,

       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,   12,   13,    0,    0,    0,
        0,    0,   12,   12,   12,   12,    0,    0,    0,    0,
        0,   12,   12,   12,   12,    0,   12,   12,   12,   12,
        0,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,    0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    1,    1,    1,    1,    6,    7,
        8,    9,   10,    1,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   20,   20,   21,   22,   23,   24,
       25,   26,    1,    1,   27,   27,   27,   27,   28,   27,
       29,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   31,   32,   33,   30,   30,   30,   34,   30,   30,
        1,    1,    1,    1,   35,    1,   36,   27,   37,   38,

       39,   40,   41,   42,   43,   44,   30,   45,   30,   46,
       47,   48,   30,   49,   50,   51,   52,   30,   30,   53,
       30,   30,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst int yy_meta[54] =
    {   0,
        1,    1,    1,    1,    2,    2,    1,    1,    1,    1,
        3,    4,    5,    6,    6,    6,    6,    6,    6,    6,
        6,    7,    1,    1,    1,    1,    8,    8,    3,    3,
        3,    3,    3,    3,    3,    8,    8,    8,    8,    8,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3
    } ;

static yyconst short int yy_base[1795] =
    {   0,
        0,    0,   49,   51, 5680, 7389, 5677, 7389, 5653, 7389,
     7389, 7389, 7389, 7389,    0,   46,   73,   61, 5655, 7389,
     5651, 5650, 5649,   84,  124, 5643, 5642,  110, 5618, 5615,
     5622, 5616, 5607,  110, 5598, 5583, 5592, 5588, 5580, 5581,
        0, 7389, 5625, 7389,    0,  153,  163, 5604, 5601,  190,
       49,  198,  208, 7389, 7389, 7389,    0,  235, 5593, 5588,
     5583, 5572, 5557, 5545, 5557, 5547, 5555, 5544, 5554, 5535,
      105, 5538, 5540, 5536, 5521, 5514,    0,    0, 5543,  264,
     5533,  274, 5516, 5501,  303,    0, 5510, 5509, 5505,  332,
      359,  178,  369,  377, 5491,    0, 5479,    0,    0,    0,

     5480, 5464, 5475, 5471, 5468,    0, 5463, 5454, 5444, 5455,
     5444, 5453,    0,    0,   93, 5479, 5478,  406, 5475,   59,
     5464, 5463, 5462,  414,  441,  223,  451, 5462, 5444,    0,
      172,  461,  471,  498,  527,  535,   76, 5446, 5421, 5408,
      209, 5390, 5401,    0, 5400, 5392, 5391, 5387, 5386, 5395,
     5380,    0, 5409,  545, 5394, 5393,  154, 5382, 5381,  555,
      584,  611,  640,  648,  133, 5390, 5379, 5378, 7389,    0,
      250, 5385,  658, 5384,  221,  285,  668,  695,  318,  705,
      287,    0, 5344,    0,    0, 5345, 5333, 5328, 5319, 5330,
     5315, 5326,  244, 5352, 5351,  715, 5348, 5337, 5336, 5335,

      723,  750,  347,  760,  316,  345,  770,  797,  392,  807,
      390, 5325, 5310,  815, 7389,  289, 5319, 5318,  844, 5317,
      425,  852,  862,  889,  918,  926,  138, 5316,    0,    0,
        0, 5288, 5275, 5276,    0, 5273,  313,  936,  343, 5309,
     5298, 5288,  946,  975, 1002, 1031, 1039,  379, 5283,  427,
     1049, 1076, 1105, 1113,  423, 5282, 5271, 5270, 1121, 1150,
     1177,  486, 5269, 5278, 1187, 5277, 5274, 5273, 1197, 5272,
      484,  508, 1207, 1234,  570, 1244,  510, 5234, 5234, 5221,
        0, 5253, 1252,  433,  482,  595,  515, 5242, 5241, 5240,
     1262, 1289,  626, 1299,  568,  597, 1309, 1336,  683, 1346,

      624,  681,  734, 1356, 1383,  785, 1393,  736, 5239, 5238,
     5235, 1403, 1430,  830, 5234,  563, 1440, 1467, 5233, 1494,
     1504,  265,  619, 5242, 5226, 1513, 5216,  738, 5206, 5181,
     1521, 5180,  783, 1529, 1539, 1566, 1595, 1603,  593, 5179,
        0, 5141,    0,  823,    0,  871, 7389,  605, 5167, 5166,
     1613, 1642, 1669, 1698, 1706,  671, 5175,  828, 1716, 1743,
     1772, 1780,  773, 5172,  899, 1790, 1817, 1846, 1854,  871,
     5171, 5160, 5159, 1862, 1891, 1918, 5149, 1945, 1955,  452,
     5149, 1966, 5139,  706,  901, 1976, 2003,  961, 5126,  902,
      881, 2013,  883, 5135, 5128, 2023, 5113, 5112, 5111, 2033,

     5110,  959,  986, 2043, 2070, 1017, 2080,  988,    0, 5109,
     2090, 5108, 5097, 5094, 5093, 2100, 2127, 1064, 2137, 1015,
     1062, 2147, 2174, 1091, 2184, 1089, 1131, 1133, 2194, 2221,
     1165, 2231, 1163, 1218, 1220, 2241, 2268, 1277, 2278, 1275,
     5092, 5091, 5090, 2288, 2315, 1324, 5076, 1151, 1188, 2325,
     2352, 1371, 5075, 1322,  904, 5084, 5083, 2362, 5082, 5071,
      954, 2370, 2397, 5070, 2424, 2434, 1369,  992,  994, 1414,
     1012, 1084, 5077, 5076, 2443, 5075, 1136, 5074, 5064, 2451,
     5061, 1416, 2459, 2469, 2496, 2525, 2533, 1052, 5060, 1222,
     5053, 5038, 2543, 5037, 5026, 5025, 2551, 2580, 2607, 2636,

     2644, 1265, 5034, 1451, 2654, 2681, 2710, 2718, 1312, 5033,
     1453, 2728, 2755, 2784, 2792, 1359, 5032, 1477, 2802, 2829,
     2858, 2866, 1412, 5029, 5018, 5017, 2874, 2903, 2930, 5016,
     2957, 2967, 1394, 5015, 2978, 3005, 5001, 3032, 3042, 1479,
     5010, 3053, 5009, 5008, 5007, 3063, 5006, 1480, 1512, 3073,
     3100, 1554, 4995, 1552, 1424, 1457, 3110, 1459, 5002, 5001,
     3120, 5000, 4999, 4989, 3130, 4986, 1576, 1578, 3140, 3167,
     1628, 3177, 1626, 4985, 3187, 4978, 4963, 4952, 4951, 3195,
     3224, 3251, 1657, 3261, 1655, 1679, 3271, 3298, 1731, 3308,
     1681, 1729, 1753, 3318, 3345, 1805, 3355, 1755, 1803, 1827,

     3365, 3392, 1877, 3402, 1829, 1875, 1902, 3412, 3439, 1933,
     3449, 1904, 4950, 4949, 4948, 3459, 3486, 1991, 4947, 1931,
     1967, 3496, 3523, 2058, 4944, 1989, 2024, 2056, 3533, 3560,
     2115, 4943, 2081, 1482, 4952, 4951, 3570, 4950, 1581, 4936,
     4935, 3578, 4934, 4923, 1621, 3586, 3613, 4922, 3640, 3650,
     2113, 1550, 1653, 2158, 1686, 1758, 4931, 4930, 3659, 4927,
     1832, 4926, 4925, 3667, 4924, 2160, 3675, 3685, 3712, 3741,
     3749, 1719, 4914, 1870, 4911, 4910, 3759, 4903, 4878, 3767,
     3794, 2209, 1801, 4877, 3804,    0, 3833, 3841, 1900, 4886,
     2207, 3851,    0, 3880, 3888, 1902, 4885, 2252, 3898,    0,

     3927, 3935, 1920, 4884, 2254, 3945,    0, 3974, 3982, 1955,
     4883, 2299, 3992,    0, 4021, 4029, 1979, 4882, 4869, 4868,
     4037, 4066, 4093, 4867, 4120, 4130, 2279, 4866, 4141, 4168,
     4865, 4195, 4205, 2301, 4851, 4216, 4243, 4850, 4270, 4280,
     2326,    0, 2251,    0, 4859, 4858, 4291, 4857, 4856, 4855,
     4301, 4852, 2337, 2338, 4311, 4338, 2385, 4841, 2371, 2054,
     2111, 4348, 2164, 4850, 4849, 4358, 4839, 4832, 4831, 4368,
     4830, 2383, 2407, 4378, 4405, 2484, 4415, 2409, 4829, 4425,
     4828, 4827, 4816, 2303, 4435, 4813, 4812, 4462, 4472, 2442,
     2168, 2482, 2506, 2205, 2508, 2561, 2563, 2342, 2591, 2593,

     2617, 2344, 2619, 2665, 2667, 2414, 2691, 2693, 2739, 2480,
     2741, 4811, 4810, 4809, 4483, 4510, 2770, 4792, 2768, 2813,
     4520, 4547, 2844, 4784, 2814, 2815, 2842, 4557, 4584, 2889,
     4766, 2887, 2904, 2915, 4594, 4621, 2945, 4759, 2916,    0,
        0, 2993, 7389, 2511, 4760, 4759, 4631, 4758, 2566, 4757,
     4737, 4639, 4729, 4709, 2595, 4647, 4674, 4702, 4701, 4711,
     2943, 2624, 2671, 3015, 2673, 2696, 4697, 4688, 4720, 4687,
     2743, 4686, 4685, 4728, 4684, 2991, 4736, 4746,    0, 4775,
     4783, 2757, 4670, 2817, 4669, 4668, 4793, 4667, 4661, 4801,
     4648, 2979, 3017, 2839, 2884, 3018, 2920, 3084, 2922, 3086,

     2940, 3151, 2975, 3153, 3025, 3206, 3050, 4630, 4622, 4809,
     4838, 4865, 4607, 4892, 4902, 3054, 4598, 4913, 4940, 4585,
     4967, 4977, 3121, 4565, 4988, 5015, 4564, 5042, 5052, 3178,
     4561, 5063, 5090, 4560, 5117, 5127, 3208, 7389,    0, 3083,
        0, 4558, 4534, 5138, 4521, 4506, 4497, 5148, 4484, 3235,
     3236, 5158, 5185, 3286, 4463, 3237, 3157, 3159, 5195, 3212,
     4436, 4426, 5205, 4416, 4392, 4325, 5215, 4281, 3284, 3329,
     3214, 3331,    0, 3234,    0, 4266, 3333, 4262, 4230, 5225,
     4206, 4172, 3282, 3376, 3378, 3382, 3384, 3386, 3423, 4145,
     4121, 5231, 5260, 5287, 3427, 4097, 3425, 3450, 5297, 5324,

     3474, 4079, 3472, 3497, 3508, 5334, 5361, 3548, 4070, 3509,
     3534, 3546, 5371, 5398, 3601, 4057, 3587, 3599, 3623, 5408,
     5435, 3700, 4041, 3624,    0,    0, 3727, 7389, 3511, 4015,
     4011, 5445, 3964, 3623, 3959, 3928, 5453, 3912, 3860, 3628,
     5461, 5488, 3824, 5515, 5525, 3658, 3470, 3516, 3778, 3635,
     3694, 3827, 3790, 5534, 3768, 3720, 3760, 3742, 5542, 3708,
     3725, 3780,    0,    0, 3819, 7389, 3699, 5550, 3676, 3651,
     3784, 3788, 3815, 3817, 3862, 3864, 3868, 3590, 5560, 5587,
     3913,    0, 3588, 5597,    0, 3569, 5624, 5634, 3871, 3561,
     5645,    0, 3537, 5672, 5682, 3911, 3535, 5693,    0, 3500,

     5720, 5730, 3956, 3463, 5741,    0, 3416, 5768, 5778, 3957,
     3393, 5789,    0, 3378, 5816, 5826, 3958, 7389,    0, 3865,
        0, 3356, 3340, 5837, 3338, 3309, 3262, 5847, 3244, 3965,
     4003, 5857, 5884, 4052, 3228, 4004, 3909, 3962, 5894, 4005,
     3217, 3209, 5904, 3162, 3095, 4009, 7389, 4045, 3093, 3074,
     5914, 3043, 3012, 4075, 5922, 3009, 2980, 5949, 5959, 4012,
        0, 4050, 4103,    0, 4104, 4105, 4106,    0, 4142, 4153,
     4154,    0, 4178, 4179, 4180,    0, 4181, 4217, 4228,    0,
     4229,    0,    0, 4081, 7389, 4108, 2968, 2944, 5968, 2942,
     4156, 2924, 2917, 5976, 2888, 2876, 4183, 5984,    0, 2849,

     6011, 6021, 4253, 4138, 4161, 4256, 4213, 4231, 2843, 2841,
     6030, 2822, 4236, 4254, 6038, 4260, 2816, 2785, 6048, 2769,
     4292, 4312,    0, 7389, 4323,    0, 2757,    0, 2740,    0,
     2738,    0, 2701,    0, 2694,    0, 7389,    0, 4321,    0,
     2702, 2695, 6058, 2676, 2637, 2630, 6068, 2628, 4324, 4359,
        0, 4389, 4288, 4331, 6078, 4390, 2626, 4395, 4397, 4446,
     4400, 4454, 2621, 2602, 6088, 2600, 2564,    0,    0,    0,
        0,    0,    0,    0,    0,    0, 4498, 7389, 4492, 2572,
     2565, 6096, 2544, 4529, 2526, 2519, 6104, 2517, 2500,    0,
     4448, 4452, 4568, 4480, 4537, 2460, 6112, 2435, 2420,    0,

     7389, 7389, 7389, 7389, 7389, 7389, 7389,    0, 4532,    0,
     2418, 2416, 6122, 2411, 2382,    0, 4542, 4576, 2363, 2346,
     6132, 2339,    0,    0, 4609, 7389, 4603, 2310, 2308, 6140,
     2302, 7389,    0, 4651,    0, 2263, 7389,    0, 4657,    0,
     2261,    0,    0, 4689, 7389,    0,    0, 4761, 7389, 7389,
     7389, 7389, 6159, 2238, 6167, 6170, 6173, 2191, 6178, 6181,
     6182, 6185, 2144, 2120, 6190, 6193, 6195, 6198, 6201, 2063,
     6206, 6209, 6210, 6213, 6216, 1996, 6221, 6224, 6227, 1962,
     6232, 6233, 6236, 6241, 6244, 6247, 1938, 6252, 6255, 6258,
     6259, 6262, 6265, 6268, 6271, 6276, 6279, 6282, 6285, 6288,

     6293, 6294, 6297, 6302, 6307, 6310, 6313, 6316, 1936, 6319,
     1919, 6324, 6327, 1898, 6330, 6333, 6337, 1853, 1846, 6340,
     6343, 6346, 6349, 6352, 6357, 6360, 6363, 6366, 6371, 6374,
     6377, 6380, 6383, 6386, 6389, 6395, 6400, 6403, 6404, 6407,
     6412, 6417, 6422, 6425, 6428, 6431, 6436, 6439, 1844, 6444,
     6447, 1837, 6448, 6453, 6456, 1779, 6459, 6462, 1772, 6465,
     6468, 1770, 6471, 6474, 6475, 6478, 6481, 6484, 6487, 6490,
     6495, 6498, 6501, 6504, 6507, 6510, 6515, 6518, 6521, 6524,
     6527, 6530, 6533, 6538, 6541, 6542, 6547, 6552, 6557, 6562,
     6565, 6568, 6571, 6576, 6579, 6584, 6587, 1763, 6592, 6595,

     1705, 6598, 6601, 1698, 6602, 6607, 6610, 1696, 6613, 6616,
     1694, 6619, 6622, 1689, 6625, 6628, 6629, 6634, 6637, 6640,
     6643, 6646, 6649, 6652, 6655, 6658, 6661, 6664, 6667, 1602,
     1595, 1593, 6672, 6675, 6678, 6681, 6684, 6687, 6692, 6695,
     6698, 6701, 6704, 6707, 6710, 6715, 6718, 1586, 6719, 6722,
     6727, 6732, 6737, 6742, 6747, 6752, 6757, 6762, 6767, 6772,
     6777, 6780, 6783, 6786, 6791, 6794, 6799, 6802, 6807, 6810,
     1559, 1536, 1511, 6815, 6818, 1494, 6821, 6824, 1487, 6825,
     6830, 6833, 1468, 6836, 6839, 1447, 6842, 6845, 6846, 1376,
     6851, 6854, 6857, 6860, 6863, 6868, 6873, 6878, 6883, 6888,

     6893, 6898, 6901, 6904, 6907, 6910, 6913, 6916, 1353, 1329,
     1306, 6921, 6924, 6927, 6930, 6933, 6936, 6941, 6944, 6947,
     6950, 6953, 6956, 6959, 6964, 1251, 1235, 1233, 1168, 6969,
     6972, 6975, 6980, 6985, 6990, 6995, 7000, 7005, 7008, 7011,
     7016, 7019, 7024, 7027, 7032, 7035, 7040, 7043, 1150, 1148,
     1141, 7048, 7051, 1112, 7054, 7057, 1038, 7058, 7063, 7066,
     1020, 7069, 7072, 1003, 7075, 7078, 7081,  925,  916, 7086,
     7089, 7092, 7095, 7098, 7101, 7104, 7107, 7110, 7113, 7116,
     7119, 7122, 7125, 7128, 7131,  909,  891,  882, 7136, 7139,
     7142, 7145, 7148, 7151, 7156, 7159, 7162, 7165, 7168,  859,

     7173, 7176,  851, 7177, 7180, 7183, 7188, 7191, 7196, 7199,
     7204, 7207, 7212, 7215, 7220, 7223,  814,  767,  751, 7228,
     7231,  749, 7234, 7237,  665, 7238, 7241, 7246, 7249,  647,
     7252, 7255, 7258, 7261, 7264, 7267, 7270, 7273, 7276, 7279,
     7282, 7285, 7288, 7291,  552,  534,  527, 7296, 7299, 7302,
     7305, 7308, 7311, 7316, 7319, 7322,  525, 7325, 7326, 7329,
     7332, 7335, 7338, 7341, 7344,   53,   66, 7349,  104, 7352,
     7353, 7358, 7361, 7364, 7365,  183,  192,  224, 7370, 7373,
     7374,  226, 7379,  255,  300, 7382,  302,  321,  376,  395,
      413,  442,  518,  523

    } ;

static yyconst short int yy_def[1795] =
    {   0,
     1352,    1, 1353, 1353, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1354, 1352,   16,   17, 1352, 1352,
     1352, 1352, 1352, 1352,   24,   25,   25,   24,   24,   24,
       24,   25,   25,   25,   25,   25,   25,   25,   25,   25,
     1355, 1352, 1352, 1352, 1354, 1352, 1352, 1356, 1357,   47,
       50,   50, 1352, 1352, 1352, 1352,   25,   24,   25,   25,
       58,   58,   25,   25,   25,   58,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25, 1355, 1358, 1359, 1352,
     1360, 1352, 1361, 1362, 1352,   82,   82, 1352, 1363, 1352,
       90,   91,   91,   58,   25,   25,   94,   94,   25,   25,

       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25, 1358, 1364, 1360, 1365, 1352, 1352, 1366,
     1352, 1367, 1368, 1352,  124,  125,  125, 1352, 1369, 1370,
     1370, 1352, 1352, 1352,  133,  133,  136,  135,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25, 1371, 1352, 1372, 1352, 1366, 1373, 1374, 1352,
     1352, 1352,  161,  161,  164,  163, 1375, 1352, 1352, 1376,
     1352, 1377, 1352, 1378, 1379, 1379, 1352,  177,  178,  178,
     1379,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25, 1380, 1372, 1381, 1352, 1352, 1352, 1382, 1383,

     1352,  201,  202,  202, 1384, 1384, 1352,  207,  208,  208,
     1384, 1385, 1386, 1352, 1352, 1387, 1378, 1388, 1352, 1352,
     1352, 1352, 1352, 1352,  223,  223,  226,  225,   25,   25,
       25,   25,   25,   25,   25,   25, 1389, 1352, 1390, 1352,
     1391, 1392, 1352, 1352, 1352,  244,  244,  247,  246, 1352,
     1352, 1352,  251,  251,  254,  253, 1393, 1394, 1352, 1352,
      260,  261, 1395, 1396, 1352, 1397, 1352, 1398, 1352, 1399,
     1400, 1400, 1352,  273,  274,  274, 1400,   25,   25,   25,
       25, 1352, 1352, 1390, 1401, 1401, 1352, 1352, 1402, 1403,
     1352,  291,  292,  292, 1404, 1404, 1352,  297,  298,  298,

     1404, 1405, 1405, 1352,  304,  305,  305, 1405, 1352, 1406,
     1407, 1352,  312,  313, 1408, 1409, 1352, 1352, 1410,  317,
     1410, 1410, 1411, 1412, 1413, 1352, 1352, 1414, 1415, 1416,
     1352, 1352, 1352, 1352, 1352, 1352,  335,  335,  338,  337,
     1417, 1417, 1417, 1418, 1419, 1352, 1352, 1352, 1420, 1421,
     1352, 1352, 1352,  352,  352,  355,  354, 1352, 1352, 1352,
      359,  359,  362,  361, 1352, 1352, 1352,  366,  366,  369,
      368, 1422, 1423, 1352, 1352, 1352, 1424,  375, 1424, 1424,
     1425, 1352, 1426, 1427, 1427, 1352,  386,  387, 1428, 1427,
     1429, 1352, 1430, 1352, 1431, 1352, 1432, 1352, 1433, 1352,

     1434, 1435, 1435, 1352,  404,  405,  405, 1435, 1436, 1437,
     1352, 1438, 1352, 1439, 1440, 1352,  416,  417,  417, 1441,
     1441, 1352,  422,  423,  423, 1441, 1442, 1442, 1352,  429,
      430,  430, 1442, 1443, 1443, 1352,  436,  437,  437, 1443,
     1352, 1444, 1445, 1352,  444,  445, 1446, 1447, 1447, 1352,
      450,  451, 1448, 1447, 1449, 1450, 1451, 1352, 1352, 1352,
     1452, 1352, 1352, 1453,  462, 1453, 1453, 1454, 1455, 1455,
     1352, 1456, 1457, 1458, 1352, 1352, 1459, 1460, 1461, 1352,
     1352, 1352, 1352, 1352, 1352,  484,  484,  487,  486, 1462,
     1463, 1464, 1352, 1352, 1465, 1466, 1352, 1352, 1352,  498,

      498,  501,  500, 1352, 1352, 1352,  505,  505,  508,  507,
     1352, 1352, 1352,  512,  512,  515,  514, 1352, 1352, 1352,
      519,  519,  522,  521, 1467, 1468, 1352, 1352, 1352, 1469,
      528, 1469, 1469, 1352, 1352, 1352, 1470,  535, 1470, 1470,
     1471, 1352, 1472, 1352, 1473, 1352, 1474, 1475, 1475, 1352,
      550,  551, 1476, 1475, 1352, 1477, 1352, 1478, 1352, 1479,
     1352, 1480, 1352, 1481, 1352, 1482, 1483, 1483, 1352,  569,
      570,  570, 1483, 1484, 1352, 1485, 1352, 1352, 1486, 1352,
     1352,  581,  582,  582, 1487, 1487, 1352,  587,  588,  588,
     1487, 1488, 1488, 1352,  594,  595,  595, 1488, 1489, 1489,

     1352,  601,  602,  602, 1489, 1490, 1490, 1352,  608,  609,
      609, 1490, 1352, 1491, 1492, 1352,  616,  617, 1493, 1494,
     1494, 1352,  622,  623, 1495, 1494, 1496, 1496, 1352,  629,
      630, 1497, 1496, 1498, 1499, 1500, 1352, 1352, 1501, 1502,
     1503, 1352, 1352, 1352, 1504, 1352, 1352, 1505,  646, 1505,
     1505, 1506, 1507, 1507, 1352, 1508, 1509, 1510, 1352, 1352,
     1511, 1512, 1513, 1352, 1352, 1352, 1352, 1352, 1352,  668,
      668,  671,  670, 1514, 1515, 1516, 1352, 1352, 1517, 1352,
      680,  681, 1518, 1519, 1352, 1520,  685,  685,  688,  687,
     1352, 1352, 1521,  692,  692,  695,  694, 1352, 1352, 1522,

      699,  699,  702,  701, 1352, 1352, 1523,  706,  706,  709,
      708, 1352, 1352, 1524,  713,  713,  716,  715, 1525, 1526,
     1352, 1352, 1352, 1527,  722, 1527, 1527, 1352, 1352, 1352,
     1528,  729, 1528, 1528, 1352, 1352, 1352, 1529,  736, 1529,
     1529, 1530, 1531, 1532, 1352, 1533, 1352, 1534, 1352, 1535,
     1352, 1536, 1537, 1537, 1352,  755,  756, 1538, 1537, 1352,
     1539, 1352, 1540, 1352, 1541, 1352, 1542, 1352, 1543, 1352,
     1544, 1545, 1545, 1352,  774,  775,  775, 1545, 1546, 1352,
     1547, 1352, 1352, 1548, 1352, 1549, 1550,  785, 1550, 1550,
     1551, 1552, 1552, 1553, 1552, 1554, 1554, 1555, 1554, 1556,

     1556, 1557, 1556, 1558, 1558, 1559, 1558, 1560, 1560, 1561,
     1560, 1352, 1562, 1563, 1352,  815,  816, 1564, 1565, 1565,
     1352,  821,  822, 1566, 1565, 1567, 1567, 1352,  828,  829,
     1568, 1567, 1569, 1569, 1352,  835,  836, 1570, 1569, 1571,
     1572, 1352, 1352, 1573, 1574, 1575, 1352, 1352, 1576, 1577,
     1578, 1352, 1352, 1352, 1579, 1352, 1352, 1580,  856, 1580,
     1580, 1581, 1582, 1582, 1352, 1583, 1584, 1585, 1352, 1352,
     1586, 1587, 1588, 1352, 1352, 1352, 1352, 1352, 1589,  878,
      878,  881,  880, 1590, 1591, 1592, 1352, 1352, 1593, 1352,
     1594, 1595, 1595, 1596, 1352, 1595, 1597, 1352, 1598, 1352,

     1599, 1352, 1600, 1352, 1601, 1352, 1602, 1603, 1604, 1352,
     1352, 1352, 1605,  911, 1605, 1605, 1352, 1352, 1352, 1606,
      918, 1606, 1606, 1352, 1352, 1352, 1607,  925, 1607, 1607,
     1352, 1352, 1352, 1608,  932, 1608, 1608, 1352, 1609, 1610,
     1611, 1352, 1612, 1352, 1613, 1352, 1614, 1352, 1615, 1616,
     1616, 1352,  952,  953, 1617, 1616, 1352, 1618, 1352, 1619,
     1352, 1620, 1352, 1621, 1352, 1622, 1352, 1623, 1624, 1624,
     1625, 1624, 1626, 1627, 1628, 1352, 1629, 1630, 1631, 1352,
     1352, 1352, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1352,
     1639, 1352, 1352,  993,  994, 1640, 1641, 1641, 1352,  999,

     1000, 1642, 1641, 1643, 1643, 1352, 1006, 1007, 1644, 1643,
     1645, 1645, 1352, 1013, 1014, 1646, 1645, 1647, 1647, 1352,
     1020, 1021, 1648, 1647, 1649, 1650, 1352, 1352, 1651, 1652,
     1653, 1352, 1352, 1654, 1655, 1656, 1352, 1352, 1352, 1657,
     1352, 1352, 1658, 1041, 1658, 1658, 1659, 1660, 1660, 1352,
     1661, 1662, 1663, 1352, 1352, 1664, 1665, 1666, 1352, 1352,
     1352, 1667, 1668, 1669, 1352, 1352, 1670, 1352, 1671, 1352,
     1672, 1352, 1352, 1352, 1352, 1352, 1352, 1673, 1352, 1079,
     1080, 1674, 1675, 1352, 1676, 1677, 1084, 1677, 1677, 1352,
     1352, 1678, 1679, 1091, 1679, 1679, 1352, 1352, 1680, 1681,

     1098, 1681, 1681, 1352, 1352, 1682, 1683, 1105, 1683, 1683,
     1352, 1352, 1684, 1685, 1112, 1685, 1685, 1352, 1686, 1687,
     1688, 1352, 1689, 1352, 1690, 1352, 1691, 1352, 1692, 1693,
     1693, 1352, 1132, 1133, 1694, 1693, 1352, 1695, 1352, 1696,
     1352, 1697, 1352, 1698, 1352, 1699, 1352, 1700, 1701, 1702,
     1352, 1352, 1352, 1703, 1352, 1704, 1705, 1155, 1705, 1705,
     1706, 1707, 1707, 1708, 1707, 1709, 1709, 1710, 1709, 1711,
     1711, 1712, 1711, 1713, 1713, 1714, 1713, 1715, 1715, 1716,
     1715, 1717, 1718, 1352, 1352, 1719, 1720, 1721, 1352, 1352,
     1722, 1723, 1724, 1352, 1352, 1352, 1725, 1352, 1726, 1727,

     1198, 1727, 1727, 1728, 1729, 1729, 1352, 1730, 1731, 1732,
     1352, 1352, 1352, 1733, 1352, 1734, 1352, 1735, 1352, 1736,
     1737, 1737, 1738, 1352, 1737, 1739, 1352, 1740, 1352, 1741,
     1352, 1742, 1352, 1743, 1352, 1744, 1352, 1745, 1746, 1747,
     1352, 1748, 1352, 1749, 1352, 1750, 1352, 1751, 1752, 1752,
     1753, 1752, 1352, 1754, 1352, 1755, 1352, 1734, 1756, 1756,
     1352, 1757, 1736, 1758, 1352, 1352, 1352, 1759, 1760, 1761,
     1762, 1763, 1764, 1765, 1747, 1766, 1352, 1352, 1767, 1749,
     1768, 1352, 1352, 1769, 1751, 1770, 1352, 1352, 1352, 1771,
     1755, 1772, 1772, 1352, 1352, 1773, 1352, 1774, 1352, 1775,

     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1776, 1777, 1778,
     1352, 1779, 1352, 1780, 1352, 1781, 1352, 1782, 1774, 1783,
     1352, 1352, 1778, 1784, 1352, 1352, 1785, 1780, 1786, 1352,
     1352, 1352, 1787, 1788, 1789, 1352, 1352, 1790, 1791, 1792,
     1352, 1789, 1793, 1352, 1352, 1792, 1794, 1352, 1352, 1352,
     1352,    0, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,

     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,

     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,

     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,

     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352

    } ;

static yyconst short int yy_nxt[7443] =
    {   0,
        6,    7,    8,    9,   10,   10,   11,   12,   13,   14,
       15,    6,    6,   16,   16,   17,   18,   18,   18,   18,
       18,   19,   20,   21,   22,   23,   24,   24,   25,   25,
       26,   27,   25,   25,    6,   28,   29,   24,   30,   31,
       25,   32,   25,   25,   33,   34,   35,   36,   37,   38,
       39,   25,   40,   42,   42,   42,   42,   46, 1307,   47,
       47,   47,   47,   47,   47,   47,   47,   48,   87,   87,
      128, 1310,   49,   49,   52,   52,   52,   52,   52,   52,
       48,   49,   49,   49,   49,   49,   50,   50,   50,   50,
       50,   51,   52,   52,   57,  176,  176,   58,   58,   58,

       58,   58,   58,   58,   58,   48,  153,  153,  154, 1314,
       58,   58,   57,   57,   57,   57,   57,   57,   57,   58,
       58,   58,   58,   58,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57, 1352,   61,   62,   69,  107,
       57,   57,  206,  206,  108,   63,   70,  272,  272,   57,
       57,   57,   57,   57,   78,  128,   79,   79,   80,   81,
       81,   81,   81,   81,   46, 1352,   82,   82,   82,   82,
       82,   82,   82,   82,   48,  170,  170,  171, 1323,   83,
       83,  138,  138,  138,  138,  138,  138, 1324,   83,   83,

       83,   83,   83,   86,   86,   86,   86,   86,   86,   86,
       86,   87,   87,   87,   87,   87,   87,   87,   87,   88,
       89,   90,   90,   91,   92,   92,   92,   92,   92, 1326,
       48, 1335,  132,   89,   93,   93,  166,  166,  166,  166,
      166,  166,  134,   93,   93,   93,   93,   93,   94,   94,
       94,   94,   94,   94,   94,   94,  183,  237,  237,  238,
     1337,   94,   94,  215,  215,  215,  215,  215,  215,  215,
       94,   94,   94,   94,   94,  115,  316,  117,  117,  117,
      117,  117,  118,  119,  119,   46,  318,  120,  120,  120,
      120,  120,  120,  120,  120,   48,   88,   89,  132,   89,

      121,  121,  264,  264,  265, 1340,  134, 1342,  134,  121,
      121,  121,  121,  121,   88,   89,  124,  124,  125,  126,
      126,  126,  126,  126,  282,  283, 1343,  132,   89,  127,
      127,  228,  228,  228,  228,  228,  228,  162,  127,  127,
      127,  127,  127,  132,   89,  133,  133,  133,  133,  133,
      133,  133,  133,  134,  282,  283,   88,   89,  135,  135,
      249,  249,  249,  249,  249,  249,  162,  135,  135,  135,
      135,  135,  136,  136,  136,  136,  136,  137,  138,  138,
       88, 1345,  135,  135,  135,  135,  135,  135,  135,  135,
      139,  139,  139,  139,  139,  139,  139,  139,  296,  296,

     1346,  132,   89,  139,  139,  256,  256,  256,  256,  256,
      256,  162,  139,  139,  139,  139,  139,  115, 1347,  156,
      156,  156,  156,  156,  156,  132,   89,  161,  161,  161,
      161,  161,  161,  161,  161,  162,   88,   89,   88,   89,
      163,  163,  303,  303,  282,  283,  134, 1349,  162,  163,
      163,  163,  163,  163,  164,  164,  164,  164,  164,  165,
      166,  166,   88,  316,  163,  163,  163,  163,  163,  163,
      163,  163,  129,  376,  172,  172,  173,  174,  174,  174,
      174,  174,  132,   89,  175,  175,  175,  175,  175,  175,
      175,  175,  134,  282,  283,  222,   89,  176,  176,  322,

      322,  322,  322,  322,  322,  224,  176,  176,  176,  176,
      176,  177,  177,  178,  179,  179,  179,  179,  179,   88,
       89,  222,   89, 1350,  180,  180,  282,  283, 1351,  224,
     1298,  224, 1278,  180,  180,  180,  180,  180,   88, 1276,
      176,  176,  176,  176,  176,  176,  176,  176,  181,  181,
      181,  181,  181,  181,  181,  181,  193, 1275,  195,  195,
      195,  195,  195,  196,  197,  197,   88,   89,  201,  201,
      202,  203,  203,  203,  203,  203,  381,  381,  382,  132,
       89,  204,  204,  340,  340,  340,  340,  340,  340,  245,
      204,  204,  204,  204,  204,  132,   89,  205,  205,  205,

      205,  205,  205,  205,  205,  162,  282,  283,   88,   89,
      206,  206,  403,  403, 1352, 1352,  282,  283,  245,  206,
      206,  206,  206,  206,  207,  207,  208,  209,  209,  209,
      209,  209,  391,  391,  392,  132,   89,  210,  210,  357,
      357,  357,  357,  357,  357,  245,  210,  210,  210,  210,
      210,   88, 1256,  206,  206,  206,  206,  206,  206,  206,
      206,  211,  211,  211,  211,  211,  211,  211,  211,  216,
     1248,  218,  218,  218,  218,  218,  219,  220,  220,  222,
       89,  223,  223,  223,  223,  223,  223,  223,  223,  224,
      421,  421,  222,   89,  225,  225,  364,  364,  364,  364,

      364,  364,  252,  225,  225,  225,  225,  225,  226,  226,
      226,  226,  226,  227,  228,  228,   88,  316,  225,  225,
      225,  225,  225,  225,  225,  225,  193,  318,  240,  240,
      240,  240,  240,  240,  132,   89,  244,  244,  244,  244,
      244,  244,  244,  244,  245,   88,   89,  222,   89,  246,
      246,  395,  395,  396, 1244,  252, 1240,  252,  246,  246,
      246,  246,  246,  247,  247,  247,  247,  247,  248,  249,
      249,   88, 1237,  246,  246,  246,  246,  246,  246,  246,
      246,  222,   89,  251,  251,  251,  251,  251,  251,  251,
      251,  252,  428,  428,   88,   89,  253,  253,  371,  371,

      371,  371,  371,  371,  224,  253,  253,  253,  253,  253,
      254,  254,  254,  254,  254,  255,  256,  256,   88, 1185,
      253,  253,  253,  253,  253,  253,  253,  253,  260,  260,
      261,  262,  262,  262,  262,  262,  410,  410,  411,   88,
       89,  263,  263,  380,  380,  380,  380,  380,  380,  245,
      263,  263,  263,  263,  263,  216, 1220,  267,  267,  267,
      267,  267,  267,  129, 1216,  268,  268,  269,  270,  270,
      270,  270,  270,  222,   89,  271,  271,  271,  271,  271,
      271,  271,  271,  224,  347,  347,  347, 1185,  272,  272,
      435,  435,   88,   89,   88,   89, 1183,  272,  272,  272,

      272,  272,  273,  273,  274,  275,  275,  275,  275,  275,
       88,   89, 1352,  316, 1182,  276,  276,  541,  541,  542,
      252, 1147,  318,  318,  276,  276,  276,  276,  276,   88,
     1066,  272,  272,  272,  272,  272,  272,  272,  272,  277,
      277,  277,  277,  277,  277,  277,  277,  282,  283,  285,
      285,  285,  285,  285,  286,  287,  287,   88,   89,  291,
      291,  292,  293,  293,  293,  293,  293,  545,  545,  546,
      334,   89,  294,  294,  467,  467,  467,  467,  467,  467,
      336,  294,  294,  294,  294,  294,  132,   89,  295,  295,
      295,  295,  295,  295,  295,  295,  245,   88,   89,  334,

       89,  296,  296,   88,   89,   88,   89,  336, 1144,  336,
      296,  296,  296,  296,  296,  297,  297,  298,  299,  299,
      299,  299,  299,   88,   89, 1140,  132,   89,  300,  300,
      489,  489,  489,  489,  489,  489,  353,  300,  300,  300,
      300,  300,   88, 1129,  296,  296,  296,  296,  296,  296,
      296,  296,  301,  301,  301,  301,  301,  301,  301,  301,
      222,   89,  302,  302,  302,  302,  302,  302,  302,  302,
      252,  568,  568,   88,   89,  303,  303,  503,  503,  503,
      503,  503,  503,  353,  303,  303,  303,  303,  303,  304,
      304,  305,  306,  306,  306,  306,  306,  556,  556,  557,

      132,   89,  307,  307,  510,  510,  510,  510,  510,  510,
      353,  307,  307,  307,  307,  307,   88, 1125,  303,  303,
      303,  303,  303,  303,  303,  303,  308,  308,  308,  308,
      308,  308,  308,  308,  312,  312,  313,  314,  314,  314,
      314,  314,  222,   89,   88,   89, 1121,  315,  315,  560,
      560,  561,  360, 1118,  360, 1028,  315,  315,  315,  315,
      315,  316,  316,  317,  317,  317,  317,  317,  317,  317,
      317,  318,  376, 1069,  222,   89,  319,  319,  517,  517,
      517,  517,  517,  517,  360,  319,  319,  319,  319,  319,
      320,  320,  320,  320,  320,  321,  322,  322,  323, 1352,

      325,  325,  325,  325,  325,  326,  327,  327,  328,  376,
      330,  330,  330,  330,  330,  331,  332,  332,  334,   89,
      335,  335,  335,  335,  335,  335,  335,  335,  336,  334,
       89,   88,   89,  337,  337,  574,  574,  575, 1066,  367,
     1064,  367,  337,  337,  337,  337,  337,  338,  338,  338,
      338,  338,  339,  340,  340,   88, 1063,  337,  337,  337,
      337,  337,  337,  337,  337,  345,  345,  345,  346,  347,
      347,  347,  347,  132,   89,  352,  352,  352,  352,  352,
      352,  352,  352,  353,  586,  586,  334,   89,  354,  354,
      524,  524,  524,  524,  524,  524,  367,  354,  354,  354,

      354,  354,  355,  355,  355,  355,  355,  356,  357,  357,
       88, 1028,  354,  354,  354,  354,  354,  354,  354,  354,
      222,   89,  359,  359,  359,  359,  359,  359,  359,  359,
      360,  593,  593,  316, 1026,  361,  361,  533,  533,  533,
      533,  533,  533,  376,  361,  361,  361,  361,  361,  362,
      362,  362,  362,  362,  363,  364,  364,   88, 1025,  361,
      361,  361,  361,  361,  361,  361,  361,  334,   89,  366,
      366,  366,  366,  366,  366,  366,  366,  367,  600,  600,
      461,  975,  368,  368,  540,  540,  540,  540,  540,  540,
      463,  368,  368,  368,  368,  368,  369,  369,  369,  369,

      369,  370,  371,  371,   88,  316,  368,  368,  368,  368,
      368,  368,  368,  368,  316,  529,  375,  375,  375,  375,
      375,  375,  375,  375,  376,   88,   89,   88,   89,  377,
      377,  607,  607, 1352, 1352,   88,   89,  336,  377,  377,
      377,  377,  377,  378,  378,  378,  378,  378,  379,  380,
      380,  316,  964,  384,  384,  384,  384,  384,  384,  384,
      384,  318,   88,   89,   88,   89,  385,  385,   88,   89,
       88,   89,  353,  960,  360,  385,  385,  385,  385,  385,
      386,  386,  387,  388,  388,  388,  388,  388,   88,   89,
      461,  461,  949,  389,  389,  742,  742,  743,  367,  945,

      536,  463,  389,  389,  389,  389,  389,  390,  390,  390,
      390,  390,  390,  390,  390,  316,  941,  390,  390,  390,
      390,  390,  390, 1352,  323,  318,  394,  394,  394,  394,
      394,  394,  328,  463,  398,  398,  398,  398,  398,  398,
      129,  938,  399,  399,  400,  401,  401,  401,  401,  401,
      334,   89,  402,  402,  402,  402,  402,  402,  402,  402,
      336,   88,   89,  461,  843,  403,  403,  651,  651,  651,
      651,  651,  651,  463,  403,  403,  403,  403,  403,  404,
      404,  405,  406,  406,  406,  406,  406,  483,   89,   88,
       89,  891,  407,  407,  746,  746,  747,  485,  843,  485,

      841,  407,  407,  407,  407,  407,   88,  840,  403,  403,
      403,  403,  403,  403,  403,  403,  408,  408,  408,  408,
      408,  408,  408,  408,   88,   89,  416,  416,  417,  418,
      418,  418,  418,  418,  750,  750,  751,  483,   89,  419,
      419,  673,  673,  673,  673,  673,  673,  485,  419,  419,
      419,  419,  419,  132,   89,  420,  420,  420,  420,  420,
      420,  420,  420,  353,   88,   89,  132,   89,  421,  421,
      690,  690,  690,  690,  690,  690,  499,  421,  421,  421,
      421,  421,  422,  422,  423,  424,  424,  424,  424,  424,
       88,   89,  132,   89,  781,  425,  425,   88,   89,  767,

      499,  763,  499,  752,  425,  425,  425,  425,  425,   88,
      748,  421,  421,  421,  421,  421,  421,  421,  421,  426,
      426,  426,  426,  426,  426,  426,  426,  222,   89,  427,
      427,  427,  427,  427,  427,  427,  427,  360,  773,  773,
      222,   89,  428,  428,  697,  697,  697,  697,  697,  697,
      506,  428,  428,  428,  428,  428,  429,  429,  430,  431,
      431,  431,  431,  431,   88,   89,  222,   89,  744,  432,
      432,  761,  761,  762,  506,  576,  506,  562,  432,  432,
      432,  432,  432,   88,  558,  428,  428,  428,  428,  428,
      428,  428,  428,  433,  433,  433,  433,  433,  433,  433,

      433,  334,   89,  434,  434,  434,  434,  434,  434,  434,
      434,  367,   88,   89,  334,   89,  435,  435,  704,  704,
      704,  704,  704,  704,  513,  435,  435,  435,  435,  435,
      436,  436,  437,  438,  438,  438,  438,  438,   88,   89,
      334,   89,  547,  439,  439,  765,  765,  766,  513,  543,
      513,  347,  439,  439,  439,  439,  439,   88,  412,  435,
      435,  435,  435,  435,  435,  435,  435,  440,  440,  440,
      440,  440,  440,  440,  440,  444,  444,  445,  446,  446,
      446,  446,  446,  779,  779,  780,  483,   89,  447,  447,
      711,  711,  711,  711,  711,  711,  520,  447,  447,  447,

      447,  447,  316,  397,  448,  448,  448,  448,  448,  448,
      448,  448,  376,   88,   89,  483,   89,  449,  449,  793,
      793,  797,  797,  520,  393,  520,  449,  449,  449,  449,
      449,  450,  450,  451,  452,  452,  452,  452,  452,  801,
      801,  383,  316,  266,  453,  453,  718,  718,  718,  718,
      718,  718,  529,  453,  453,  453,  453,  453,  454,  454,
      454,  454,  454,  454,  454,  454,  316,  239,  454,  454,
      454,  454,  454,  454,  805,  805,  376,  455, 1352,  457,
      457,  457,  457,  457,  458,  459,  459,  461,  529,  462,
      462,  462,  462,  462,  462,  462,  462,  463,  809,  809,

      316,  215,  464,  464,  727,  727,  727,  727,  727,  727,
      529,  464,  464,  464,  464,  464,  465,  465,  465,  465,
      465,  466,  467,  467,   88,   89,  469,  469,  469,  469,
      469,  470,  471,  471,  472,  461,  474,  474,  474,  474,
      474,  475,  476,  476,  477,  536,  479,  479,  479,  479,
      479,  480,  481,  481,  483,   89,  484,  484,  484,  484,
      484,  484,  484,  484,  485,   88,   89, 1352,  169,  486,
      486,  734,  734,  734,  734,  734,  734,  536,  486,  486,
      486,  486,  486,  487,  487,  487,  487,  487,  488,  489,
      489,   88,  461,  486,  486,  486,  486,  486,  486,  486,

      486,  490,  536,  492,  492,  492,  492,  492,  493,  494,
      494,  132,   89,  498,  498,  498,  498,  498,  498,  498,
      498,  499,   88,   89,  645,  155,  500,  500,  741,  741,
      741,  741,  741,  741,  647,  500,  500,  500,  500,  500,
      501,  501,  501,  501,  501,  502,  503,  503,   88,  130,
      500,  500,  500,  500,  500,  500,  500,  500,  222,   89,
      505,  505,  505,  505,  505,  505,  505,  505,  506,   88,
       89,   88,   89,  507,  507,   88,   89, 1352, 1352,   88,
       89,  485,  507,  507,  507,  507,  507,  508,  508,  508,
      508,  508,  509,  510,  510,   88,  114,  507,  507,  507,

      507,  507,  507,  507,  507,  334,   89,  512,  512,  512,
      512,  512,  512,  512,  512,  513,   88,   89,   88,   89,
      514,  514,  790,  790,  790,  790,  790,  790,  499,  514,
      514,  514,  514,  514,  515,  515,  515,  515,  515,  516,
      517,  517,   88,   45,  514,  514,  514,  514,  514,  514,
      514,  514,  483,   89,  519,  519,  519,  519,  519,  519,
      519,  519,  520,   88,   89,   88,   89,  521,  521,  842,
      843,  843, 1327,  506, 1318,  513,  521,  521,  521,  521,
      521,  522,  522,  522,  522,  522,  523,  524,  524,   88,
      316,  521,  521,  521,  521,  521,  521,  521,  521,  316,

      723,  528,  528,  528,  528,  528,  528,  528,  528,  529,
       88,   89,  461, 1327,  530,  530,  889,  889,  890, 1327,
      520, 1327,  730,  530,  530,  530,  530,  530,  531,  531,
      531,  531,  531,  532,  533,  533,  461,  645,  535,  535,
      535,  535,  535,  535,  535,  535,  536,  737,  645, 1352,
     1318,  537,  537,   88,   89,   88,   89, 1318,  647,  647,
      537,  537,  537,  537,  537,  538,  538,  538,  538,  538,
      539,  540,  540,  455, 1318,  544,  544,  544,  544,  544,
      544,  461,  645,  548,  548,  548,  548,  548,  548,  548,
      548,  463,  647, 1284,  667,   89,  549,  549,  861,  861,

      861,  861,  861,  861,  669,  549,  549,  549,  549,  549,
      550,  550,  551,  552,  552,  552,  552,  552,   88,   89,
      667,   89, 1327,  553,  553,   88,   89, 1327,  669, 1279,
      669, 1262,  553,  553,  553,  553,  553,  554,  554,  554,
      554,  554,  554,  554,  554,  461, 1318,  554,  554,  554,
      554,  554,  554,  784,  472,  463,  559,  559,  559,  559,
      559,  559,  477,  786,  563,  563,  563,  563,  563,  563,
      129, 1318,  564,  564,  565,  566,  566,  566,  566,  566,
      483,   89,  567,  567,  567,  567,  567,  567,  567,  567,
      485,   88,   89,  132,   89,  568,  568,  883,  883,  883,

      883,  883,  883,  686,  568,  568,  568,  568,  568,  569,
      569,  570,  571,  571,  571,  571,  571,   88,   89,  132,
       89, 1199,  572,  572,  939,  939,  940,  686, 1284,  686,
     1284,  572,  572,  572,  572,  572,   88, 1284,  568,  568,
      568,  568,  568,  568,  568,  568,  573,  573,  573,  573,
      573,  573,  573,  573,  490, 1279,  577,  577,  577,  577,
      577,  577,   88,   89,  581,  581,  582,  583,  583,  583,
      583,  583,  222,   89,   88,   89, 1279,  584,  584,  943,
      943,  944,  693, 1279,  693, 1156,  584,  584,  584,  584,
      584,  132,   89,  585,  585,  585,  585,  585,  585,  585,

      585,  499,  222,   89,  334,   89,  586,  586,  947,  947,
      948, 1262,  693, 1262,  700,  586,  586,  586,  586,  586,
      587,  587,  588,  589,  589,  589,  589,  589,   88,   89,
      334,   89, 1262,  590,  590,   88,   89, 1208,  700, 1284,
      700, 1284,  590,  590,  590,  590,  590,   88, 1191,  586,
      586,  586,  586,  586,  586,  586,  586,  591,  591,  591,
      591,  591,  591,  591,  591,  222,   89,  592,  592,  592,
      592,  592,  592,  592,  592,  506,  483,   89,   88,   89,
      593,  593,   88,   89,   88,   89,  707, 1279,  707,  593,
      593,  593,  593,  593,  594,  594,  595,  596,  596,  596,

      596,  596,  483,   89,  667,   89, 1279,  597,  597,  958,
      958,  959,  707, 1186,  714, 1113,  597,  597,  597,  597,
      597,   88, 1106,  593,  593,  593,  593,  593,  593,  593,
      593,  598,  598,  598,  598,  598,  598,  598,  598,  334,
       89,  599,  599,  599,  599,  599,  599,  599,  599,  513,
       88,   89,  667,   89,  600,  600,  962,  962,  963, 1099,
      714, 1092,  714,  600,  600,  600,  600,  600,  601,  601,
      602,  603,  603,  603,  603,  603,  970,  970, 1085,  316,
     1262,  604,  604,  916,  916,  916,  916,  916,  916,  723,
      604,  604,  604,  604,  604,   88, 1262,  600,  600,  600,

      600,  600,  600,  600,  600,  605,  605,  605,  605,  605,
      605,  605,  605,  483,   89,  606,  606,  606,  606,  606,
      606,  606,  606,  520, 1352,  316,  461, 1148,  607,  607,
      973,  973,  974, 1208,  723,  723,  730,  607,  607,  607,
      607,  607,  608,  608,  609,  610,  610,  610,  610,  610,
       88,   89, 1208, 1352, 1208,  611,  611,  923,  923,  923,
      923,  923,  923,  730,  611,  611,  611,  611,  611,   88,
     1199,  607,  607,  607,  607,  607,  607,  607,  607,  612,
      612,  612,  612,  612,  612,  612,  612,  616,  616,  617,
      618,  618,  618,  618,  618,   88,   89, 1042,  461, 1191,

      619,  619,  930,  930,  930,  930,  930,  930,  730,  619,
      619,  619,  619,  619,  316,  645,  620,  620,  620,  620,
      620,  620,  620,  620,  529,  737, 1352,  645, 1191,  621,
      621,   88,   89,   88,   89, 1191,  737,  737,  621,  621,
      621,  621,  621,  622,  622,  623,  624,  624,  624,  624,
      624,   88,   89, 1186,  855, 1186,  625,  625,  937,  937,
      937,  937,  937,  937,  857,  625,  625,  625,  625,  625,
      626,  626,  626,  626,  626,  626,  626,  626,  316, 1186,
      626,  626,  626,  626,  626,  626,   88,   89,  529,  461,
      784,  627,  627,  627,  627,  627,  627,  627,  627,  536,

      786, 1156,   88,   89,  628,  628,  938,  938,  938,  938,
      938,  938,  669,  628,  628,  628,  628,  628,  629,  629,
      630,  631,  631,  631,  631,  631,   88,   89, 1352,  784,
     1224,  632,  632,  992, 1352, 1352,   88,   89,  786,  786,
      632,  632,  632,  632,  632,  633,  633,  633,  633,  633,
      633,  633,  633,  461, 1148,  633,  633,  633,  633,  633,
      633,   88,   89,  536,  634,  316,  636,  636,  636,  636,
      636,  637,  638,  638,  639,  912,  641,  641,  641,  641,
      641,  642,  643,  643,  645, 1148,  646,  646,  646,  646,
      646,  646,  646,  646,  647,   88,   89,   88,   89,  648,

      648, 1027, 1028, 1028, 1148,  686, 1056,  693,  648,  648,
      648,  648,  648,  649,  649,  649,  649,  649,  650,  651,
      651,   88,   89,  653,  653,  653,  653,  653,  654,  655,
      655,  656,  461,  658,  658,  658,  658,  658,  659,  660,
      660,  661,  919,  663,  663,  663,  663,  663,  664,  665,
      665,  667,   89,  668,  668,  668,  668,  668,  668,  668,
      668,  669,   88,   89,   88,   89,  670,  670,   88,   89,
       88,   89,  700, 1208,  707,  670,  670,  670,  670,  670,
      671,  671,  671,  671,  671,  672,  673,  673,   88,  645,
      670,  670,  670,  670,  670,  670,  670,  670,  674,  926,

      676,  676,  676,  676,  676,  677,  678,  678,  680,  680,
      681,  682,  682,  682,  682,  682,  683,   88,   89,  855,
     1208,  684,  684,   88,   89,   88,   89,  714, 1051,  933,
      684,  684,  684,  684,  684,  132,   89,  685,  685,  685,
      685,  685,  685,  685,  685,  686,  855, 1352,  855, 1199,
      687,  687, 1065, 1066, 1066, 1191,  857,  857,  857,  687,
      687,  687,  687,  687,  688,  688,  688,  688,  688,  689,
      690,  690,   88, 1191,  687,  687,  687,  687,  687,  687,
      687,  687,  222,   89,  692,  692,  692,  692,  692,  692,
      692,  692,  693,   88,   89,  877,   89,  694,  694, 1046,

     1046, 1046, 1046, 1046, 1046,  879,  694,  694,  694,  694,
      694,  695,  695,  695,  695,  695,  696,  697,  697,   88,
     1034,  694,  694,  694,  694,  694,  694,  694,  694,  334,
       89,  699,  699,  699,  699,  699,  699,  699,  699,  700,
       88,   89,  877,   89,  701,  701, 1067, 1067, 1068, 1186,
      879, 1186,  879,  701,  701,  701,  701,  701,  702,  702,
      702,  702,  702,  703,  704,  704,   88, 1029,  701,  701,
      701,  701,  701,  701,  701,  701,  483,   89,  706,  706,
      706,  706,  706,  706,  706,  706,  707,   88,   89,   88,
       89,  708,  708,   88,   89,   88,   89,   88,   89, 1113,

      708,  708,  708,  708,  708,  709,  709,  709,  709,  709,
      710,  711,  711,   88,  933,  708,  708,  708,  708,  708,
      708,  708,  708,  667,   89,  713,  713,  713,  713,  713,
      713,  713,  713,  714,   88,   89,  316, 1106,  715,  715,
     1089, 1089, 1089, 1089, 1089, 1089,  912,  715,  715,  715,
      715,  715,  716,  716,  716,  716,  716,  717,  718,  718,
       88, 1352,  715,  715,  715,  715,  715,  715,  715,  715,
      316,  912,  722,  722,  722,  722,  722,  722,  722,  722,
      723,   88,   89,  316,  926,  724,  724, 1096, 1096, 1096,
     1096, 1096, 1096,  912,  724,  724,  724,  724,  724,  725,

      725,  725,  725,  725,  726,  727,  727,  461,  461,  729,
      729,  729,  729,  729,  729,  729,  729,  730,  919, 1352,
      461, 1099,  731,  731, 1119, 1119, 1120,   88,   89,  919,
      919,  731,  731,  731,  731,  731,  732,  732,  732,  732,
      732,  733,  734,  734,  645,  645,  736,  736,  736,  736,
      736,  736,  736,  736,  737,  926,  919, 1352, 1092,  738,
      738, 1103, 1103, 1103, 1103, 1103, 1103,  926,  738,  738,
      738,  738,  738,  739,  739,  739,  739,  739,  740,  741,
      741,  634,  912,  745,  745,  745,  745,  745,  745,  639,
     1085,  749,  749,  749,  749,  749,  749,  645,  645,  753,

      753,  753,  753,  753,  753,  753,  753,  647,  926, 1156,
      855,  992,  754,  754, 1110, 1110, 1110, 1110, 1110, 1110,
      933,  754,  754,  754,  754,  754,  755,  755,  756,  757,
      757,  757,  757,  757, 1352,  855, 1123, 1123, 1124,  758,
      758, 1127, 1127, 1128,  933,  933,   88,   89,  758,  758,
      758,  758,  758,  759,  759,  759,  759,  759,  759,  759,
      759,  645,  977,  759,  759,  759,  759,  759,  759, 1040,
      656,  647,  764,  764,  764,  764,  764,  764,  661, 1042,
      768,  768,  768,  768,  768,  768,  129, 1148,  769,  769,
      770,  771,  771,  771,  771,  771,  667,   89,  772,  772,

      772,  772,  772,  772,  772,  772,  669, 1138, 1138, 1139,
     1148,  773,  773, 1117, 1117, 1117, 1117, 1117, 1117, 1056,
      773,  773,  773,  773,  773,  774,  774,  775,  776,  776,
      776,  776,  776, 1142, 1142, 1143,   88,   89,  777,  777,
     1118, 1118, 1118, 1118, 1118, 1118,  879,  777,  777,  777,
      777,  777,   88, 1056,  773,  773,  773,  773,  773,  773,
      773,  773,  778,  778,  778,  778,  778,  778,  778,  778,
      674, 1056,  782,  782,  782,  782,  782,  782,  784, 1051,
      785,  785,  785,  785,  785,  785,  785,  785,  786,   88,
       89,   88,   89,  787,  787,   88,   89, 1352, 1352,   88,

       89, 1051,  787,  787,  787,  787,  787,  788,  788,  788,
      788,  788,  789,  790,  790,  132,   89,  792,  792,  792,
      792,  792,  792,  792,  792,  686,   88,   89,   88,   89,
      793,  793, 1147, 1147, 1147, 1147, 1147, 1147, 1051,  793,
      793,  793,  793,  793,   88, 1042,  793,  793,  793,  793,
      793,  793,  793,  793,  795,  795,  795,  795,  795,  795,
      795,  795,  222,   89,  796,  796,  796,  796,  796,  796,
      796,  796,  693,   88,   89,   88,   89,  797,  797,   88,
       89,  857,  316, 1184, 1185, 1185,  797,  797,  797,  797,
      797,   88, 1085,  797,  797,  797,  797,  797,  797,  797,

      797,  799,  799,  799,  799,  799,  799,  799,  799,  334,
       89,  800,  800,  800,  800,  800,  800,  800,  800,  700,
       88,   89,  461, 1034,  801,  801, 1160, 1160, 1160, 1160,
     1160, 1160, 1092,  801,  801,  801,  801,  801,   88, 1034,
      801,  801,  801,  801,  801,  801,  801,  801,  803,  803,
      803,  803,  803,  803,  803,  803,  483,   89,  804,  804,
      804,  804,  804,  804,  804,  804,  707,  645,  855, 1040,
     1034,  805,  805,   88,   89, 1029, 1040, 1099, 1106, 1113,
      805,  805,  805,  805,  805,   88, 1042,  805,  805,  805,
      805,  805,  805,  805,  805,  807,  807,  807,  807,  807,

      807,  807,  807,  667,   89,  808,  808,  808,  808,  808,
      808,  808,  808,  714, 1352, 1040,   88,   89,  809,  809,
       88,   89, 1029, 1154, 1042, 1042, 1029,  809,  809,  809,
      809,  809,   88, 1156,  809,  809,  809,  809,  809,  809,
      809,  809,  811,  811,  811,  811,  811,  811,  811,  811,
      815,  815,  816,  817,  817,  817,  817,  817, 1214, 1214,
     1215,  316, 1113,  818,  818, 1203, 1203, 1203, 1203, 1203,
     1203, 1085,  818,  818,  818,  818,  818,  316, 1106,  819,
      819,  819,  819,  819,  819,  819,  819,  723, 1218, 1218,
     1219, 1099,  820,  820, 1237, 1237, 1237, 1237, 1237, 1237,

     1092,  820,  820,  820,  820,  820,  821,  821,  822,  823,
      823,  823,  823,  823, 1352,  316,  461, 1352, 1085,  824,
      824, 1238, 1238, 1239, 1085, 1085, 1092, 1092,  824,  824,
      824,  824,  824,  825,  825,  825,  825,  825,  825,  825,
      825,  316,  992,  825,  825,  825,  825,  825,  825,   88,
       89,  723,  461,  461,  826,  826,  826,  826,  826,  826,
      826,  826,  730, 1092,  645, 1352,  814,  827,  827, 1242,
     1242, 1243,   88,   89, 1099, 1099,  827,  827,  827,  827,
      827,  828,  828,  829,  830,  830,  830,  830,  830,  645,
      855, 1352,  855,  786,  831,  831, 1246, 1246, 1247, 1099,

     1106, 1106, 1106,  831,  831,  831,  831,  831,  832,  832,
      832,  832,  832,  832,  832,  832,  461,  977,  832,  832,
      832,  832,  832,  832,   88,   89,  730,  645, 1040,  833,
      833,  833,  833,  833,  833,  833,  833,  737, 1113, 1352,
     1040,  977,  834,  834, 1254, 1254, 1255,   88,   89, 1113,
     1113,  834,  834,  834,  834,  834,  835,  835,  836,  837,
      837,  837,  837,  837, 1197,   88,   89,   88,   89,  838,
      838,   88,   89,  977, 1199, 1352, 1352,  884,  838,  838,
      838,  838,  838,  839,  839,  839,  839,  839,  839,  839,
      839,  645, 1056,  839,  839,  839,  839,  839,  839,   88,

       89,  737,  844, 1154,  846,  846,  846,  846,  846,  847,
      848,  848,  849, 1156,  851,  851,  851,  851,  851,  852,
      853,  853,  855, 1352,  856,  856,  856,  856,  856,  856,
      856,  856,  857, 1156, 1154, 1197, 1056,  858,  858, 1277,
     1278, 1278,   88,   89, 1156, 1199,  858,  858,  858,  858,
      858,  859,  859,  859,  859,  859,  860,  861,  861,   88,
       89,  863,  863,  863,  863,  863,  864,  865,  865,  866,
     1352,  868,  868,  868,  868,  868,  869,  870,  870,  871,
     1199,  873,  873,  873,  873,  873,  874,  875,  875,  877,
       89,  878,  878,  878,  878,  878,  878,  878,  878,  879,

     1197,   88,   89,  871,  880,  880,   88,   89,   88,   89,
     1199,   88,   89,  880,  880,  880,  880,  880,  881,  881,
      881,  881,  881,  882,  883,  883,   88, 1051,  880,  880,
      880,  880,  880,  880,  880,  880,  884, 1051,  886,  886,
      886,  886,  886,  887,  888,  888,  784,  866,  892,  892,
      892,  892,  892,  892,  892,  892,  786,   88,   89,   88,
       89,  893,  893,   88,   89, 1352, 1352, 1296, 1296, 1297,
      893,  893,  893,  893,  893,  896,  896,  896,  896,  896,
      896,  896,  896,  784, 1042,  896,  896,  896,  896,  896,
      896,   88,   89,  786,  316, 1034,  911,  911,  911,  911,

      911,  911,  911,  911,  912, 1308, 1308, 1309, 1034,  913,
      913, 1307, 1307, 1307, 1307, 1307, 1307,  849,  913,  913,
      913,  913,  913,  914,  914,  914,  914,  914,  915,  916,
      916,  461, 1029,  918,  918,  918,  918,  918,  918,  918,
      918,  919, 1312, 1312, 1313, 1029,  920,  920,   88,   89,
     1325, 1326, 1326,   88,   89,  920,  920,  920,  920,  920,
      921,  921,  921,  921,  921,  922,  923,  923,  645,  844,
      925,  925,  925,  925,  925,  925,  925,  925,  926,   88,
       89,  933,  737,  927,  927,  926,  730, 1352, 1352, 1333,
     1333, 1334,  927,  927,  927,  927,  927,  928,  928,  928,

      928,  928,  929,  930,  930,  855,  919,  932,  932,  932,
      932,  932,  932,  932,  932,  933, 1338, 1338, 1339,  723,
      934,  934, 1337, 1337, 1337, 1337, 1337, 1337,  912,  934,
      934,  934,  934,  934,  935,  935,  935,  935,  935,  936,
      937,  937,  844,  992,  942,  942,  942,  942,  942,  942,
      849,  814,  946,  946,  946,  946,  946,  946,  855,  977,
      950,  950,  950,  950,  950,  950,  950,  950,  857, 1344,
     1345, 1345,  977,  951,  951, 1348, 1349, 1349,  884,  884,
      884,  877,  951,  951,  951,  951,  951,  952,  952,  953,
      954,  954,  954,  954,  954,  871,  871,  871,  866,  866,

      955,  955, 1350, 1350, 1350, 1350, 1350, 1350,  866,  955,
      955,  955,  955,  955,  956,  956,  956,  956,  956,  956,
      956,  956,  855,  857,  956,  956,  956,  956,  956,  956,
      647,  866,  857,  961,  961,  961,  961,  961,  961,  871,
      849,  965,  965,  965,  965,  965,  965,  129,  849,  966,
      966,  967,  968,  968,  968,  968,  968,  877,   89,  969,
      969,  969,  969,  969,  969,  969,  969,  879,  849,  844,
      844,  844,  970,  970, 1351, 1351, 1351, 1351, 1351, 1351,
      933,  970,  970,  970,  970,  970,   88,  926,  970,  970,
      970,  970,  970,  970,  970,  970,  972,  972,  972,  972,

      972,  972,  972,  972,  884,  919,  976,  976,  976,  976,
      976,  976,  977,  912,  979,  979,  979,  979,  979,  980,
      981,  981,  993,  993,  994,  995,  995,  995,  995,  995,
      910,  814,  615,  786,  895,  996,  996,  580,  674,  884,
      884,  871,  871,  661,  996,  996,  996,  996,  996,  316,
      866,  997,  997,  997,  997,  997,  997,  997,  997,  912,
      866,  656,  857,  849,  998,  998,  849,  639,  844,  844,
      634,  737,  536,  998,  998,  998,  998,  998,  999,  999,
     1000, 1001, 1001, 1001, 1001, 1001,  730,  529,  723,  814,
      615, 1002, 1002,  667,  483,  334,  222,  132,  786,  580,

     1002, 1002, 1002, 1002, 1002, 1003, 1003, 1003, 1003, 1003,
     1003, 1003, 1003,  316,  674, 1003, 1003, 1003, 1003, 1003,
     1003,  674,  674,  912,  461,  667, 1004, 1004, 1004, 1004,
     1004, 1004, 1004, 1004,  919,  661,  661,  661,  656, 1005,
     1005,  656,  656,  647,  463,  639,  639,  639, 1005, 1005,
     1005, 1005, 1005, 1006, 1006, 1007, 1008, 1008, 1008, 1008,
     1008,  634,  634,  634,  737,  730, 1009, 1009,  723,  721,
      615,  443,  580,  415,  490, 1009, 1009, 1009, 1009, 1009,
     1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010,  461,  674,
     1010, 1010, 1010, 1010, 1010, 1010,  674,  661,  919,  645,

      661, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,  926,
      477,  656,  656,  472, 1012, 1012,  647,  639,  639,  455,
      634,  634,  536, 1012, 1012, 1012, 1012, 1012, 1013, 1013,
     1014, 1015, 1015, 1015, 1015, 1015,  376,  529,  615,  443,
      483, 1016, 1016,  334,  222,  132,  580,  415,  490,  490,
     1016, 1016, 1016, 1016, 1016, 1017, 1017, 1017, 1017, 1017,
     1017, 1017, 1017,  645,  490, 1017, 1017, 1017, 1017, 1017,
     1017,  483,  477,  926,  855,  477, 1018, 1018, 1018, 1018,
     1018, 1018, 1018, 1018,  933,  477,  472,  472,  472, 1019,
     1019,  463,  318,  455,  455,  455,  536,  529, 1019, 1019,

     1019, 1019, 1019, 1020, 1020, 1021, 1022, 1022, 1022, 1022,
     1022,  527,  443,  311,  497,  415, 1023, 1023,  290,  490,
      490,  477,  477,  328,  472, 1023, 1023, 1023, 1023, 1023,
     1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,  855,  472,
     1024, 1024, 1024, 1024, 1024, 1024,  323,  463,  933, 1029,
      455, 1031, 1031, 1031, 1031, 1031, 1032, 1033, 1033, 1034,
      455, 1036, 1036, 1036, 1036, 1036, 1037, 1038, 1038, 1040,
      376, 1041, 1041, 1041, 1041, 1041, 1041, 1041, 1041, 1042,
      443,  311,  334,  222, 1043, 1043,  132,  415,  290,  409,
      334,  328,  328, 1043, 1043, 1043, 1043, 1043, 1044, 1044,

     1044, 1044, 1044, 1045, 1046, 1046,   88,   89, 1048, 1048,
     1048, 1048, 1048, 1049, 1050, 1050, 1051,  328, 1053, 1053,
     1053, 1053, 1053, 1054, 1055, 1055, 1056,  323, 1058, 1058,
     1058, 1058, 1058, 1059, 1060, 1060,  977,  323, 1070, 1070,
     1070, 1070, 1070, 1070, 1079, 1079, 1080, 1081, 1081, 1081,
     1081, 1081, 1082,  323,  318,  376,  374, 1083, 1083,  311,
      213,  351,  290,  200,  344,  343, 1083, 1083, 1083, 1083,
     1083,  316,  342, 1084, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1085,  341,  328,  328,  216, 1086, 1086,  323,  323,
      318,  311,  213,  222,  132, 1086, 1086, 1086, 1086, 1086,

     1087, 1087, 1087, 1087, 1087, 1088, 1089, 1089,  461,  290,
     1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1092,  200,
      193,  281,  280, 1093, 1093,  279,  278,  222,  216,  216,
      216,  259, 1093, 1093, 1093, 1093, 1093, 1094, 1094, 1094,
     1094, 1094, 1095, 1096, 1096,  645,  213, 1098, 1098, 1098,
     1098, 1098, 1098, 1098, 1098, 1099,  243,  200,  123,  193,
     1100, 1100,  193,  193,  236,  235,  234,  233,  232, 1100,
     1100, 1100, 1100, 1100, 1101, 1101, 1101, 1101, 1101, 1102,
     1103, 1103,  855,  231, 1105, 1105, 1105, 1105, 1105, 1105,
     1105, 1105, 1106,  230,  229,  216,  216, 1107, 1107,  214,

      213,  132,  200,  123,  115,  193, 1107, 1107, 1107, 1107,
     1107, 1108, 1108, 1108, 1108, 1108, 1109, 1110, 1110, 1040,
      193, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1113,
      192,  191,  190,  189, 1114, 1114,  188,  187,  186,  185,
      184,  182,   48, 1114, 1114, 1114, 1114, 1114, 1115, 1115,
     1115, 1115, 1115, 1116, 1117, 1117, 1029,  132, 1122, 1122,
     1122, 1122, 1122, 1122, 1034,  168, 1126, 1126, 1126, 1126,
     1126, 1126, 1040,   78, 1130, 1130, 1130, 1130, 1130, 1130,
     1130, 1130, 1042,  160,  123,   48,  115, 1131, 1131,  115,
      115,  152,  151,  150,  149,  148, 1131, 1131, 1131, 1131,

     1131, 1132, 1132, 1133, 1134, 1134, 1134, 1134, 1134,  147,
      146,  145,  144,  143, 1135, 1135,  142,  141,  140,  131,
      129,  128,  123, 1135, 1135, 1135, 1135, 1135, 1136, 1136,
     1136, 1136, 1136, 1136, 1136, 1136, 1040,   48, 1136, 1136,
     1136, 1136, 1136, 1136,  115, 1051, 1042, 1141, 1141, 1141,
     1141, 1141, 1141, 1056,  115, 1145, 1145, 1145, 1145, 1145,
     1145, 1148,  113, 1150, 1150, 1150, 1150, 1150, 1151, 1152,
     1152, 1154,  112, 1155, 1155, 1155, 1155, 1155, 1155, 1155,
     1155, 1156,  111,  110,  109,  106, 1157, 1157,  105,  104,
      103,  102,  101,  100,   99, 1157, 1157, 1157, 1157, 1157,

     1158, 1158, 1158, 1158, 1158, 1159, 1160, 1160,  316,   98,
     1162, 1162, 1162, 1162, 1162, 1162, 1162, 1162, 1085,   97,
       96,   95,   48, 1163, 1163,   85,   43,   76,   75,   74,
       73,   72, 1163, 1163, 1163, 1163, 1163, 1165, 1165, 1165,
     1165, 1165, 1165, 1165, 1165,  316,   71, 1165, 1165, 1165,
     1165, 1165, 1165,   68,   67, 1085,  461,   66, 1166, 1166,
     1166, 1166, 1166, 1166, 1166, 1166, 1092,   65,   64,   60,
       59, 1167, 1167,   56,   55,   54,   53,   44,   43, 1352,
     1167, 1167, 1167, 1167, 1167, 1169, 1169, 1169, 1169, 1169,
     1169, 1169, 1169,  461, 1352, 1169, 1169, 1169, 1169, 1169,

     1169, 1352, 1352, 1092,  645, 1352, 1170, 1170, 1170, 1170,
     1170, 1170, 1170, 1170, 1099, 1352, 1352, 1352, 1352, 1171,
     1171, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1171, 1171,
     1171, 1171, 1171, 1173, 1173, 1173, 1173, 1173, 1173, 1173,
     1173,  645, 1352, 1173, 1173, 1173, 1173, 1173, 1173, 1352,
     1352, 1099,  855, 1352, 1174, 1174, 1174, 1174, 1174, 1174,
     1174, 1174, 1106, 1352, 1352, 1352, 1352, 1175, 1175, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1175, 1175, 1175, 1175,
     1175, 1177, 1177, 1177, 1177, 1177, 1177, 1177, 1177,  855,
     1352, 1177, 1177, 1177, 1177, 1177, 1177, 1352, 1352, 1106,

     1040, 1352, 1178, 1178, 1178, 1178, 1178, 1178, 1178, 1178,
     1113, 1352, 1352, 1352, 1352, 1179, 1179, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1179, 1179, 1179, 1179, 1179, 1181,
     1181, 1181, 1181, 1181, 1181, 1181, 1181, 1040, 1352, 1181,
     1181, 1181, 1181, 1181, 1181, 1352, 1352, 1113, 1186, 1352,
     1188, 1188, 1188, 1188, 1188, 1189, 1190, 1190, 1191, 1352,
     1193, 1193, 1193, 1193, 1193, 1194, 1195, 1195, 1197, 1352,
     1198, 1198, 1198, 1198, 1198, 1198, 1198, 1198, 1199, 1352,
     1352, 1352, 1352, 1200, 1200, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1200, 1200, 1200, 1200, 1200, 1201, 1201, 1201,

     1201, 1201, 1202, 1203, 1203,   88,   89, 1205, 1205, 1205,
     1205, 1205, 1206, 1207, 1207, 1208, 1352, 1210, 1210, 1210,
     1210, 1210, 1211, 1212, 1212, 1148, 1352, 1217, 1217, 1217,
     1217, 1217, 1217, 1154, 1352, 1221, 1221, 1221, 1221, 1221,
     1221, 1221, 1221, 1156, 1352, 1352, 1352, 1352, 1222, 1222,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1222, 1222, 1222,
     1222, 1222, 1225, 1225, 1225, 1225, 1225, 1225, 1225, 1225,
     1154, 1352, 1225, 1225, 1225, 1225, 1225, 1225, 1352, 1186,
     1156, 1241, 1241, 1241, 1241, 1241, 1241, 1191, 1352, 1245,
     1245, 1245, 1245, 1245, 1245, 1197, 1352, 1249, 1249, 1249,

     1249, 1249, 1249, 1249, 1249, 1199, 1352, 1352, 1352, 1352,
     1250, 1250, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1250,
     1250, 1250, 1250, 1250, 1252, 1252, 1252, 1252, 1252, 1252,
     1252, 1252, 1197, 1352, 1252, 1252, 1252, 1252, 1252, 1252,
     1352, 1208, 1199, 1257, 1257, 1257, 1257, 1257, 1257,   88,
       89, 1259, 1259, 1259, 1259, 1259, 1260, 1261, 1261, 1262,
     1352, 1264, 1264, 1264, 1264, 1264, 1265, 1266, 1266, 1279,
     1352, 1281, 1281, 1281, 1281, 1281, 1282, 1283, 1283, 1284,
     1352, 1286, 1286, 1286, 1286, 1286, 1287, 1288, 1288,   88,
       89, 1292, 1292, 1292, 1292, 1292, 1293, 1294, 1294, 1262,

     1352, 1299, 1299, 1299, 1299, 1299, 1299, 1279, 1352, 1311,
     1311, 1311, 1311, 1311, 1311, 1284, 1352, 1315, 1315, 1315,
     1315, 1315, 1315, 1318, 1352, 1320, 1320, 1320, 1320, 1320,
     1321, 1322, 1322, 1327, 1352, 1329, 1329, 1329, 1329, 1329,
     1330, 1331, 1331, 1318, 1352, 1336, 1336, 1336, 1336, 1336,
     1336, 1327, 1352, 1341, 1341, 1341, 1341, 1341, 1341,   41,
       41,   41,   41,   41,   41,   41,   41,   77, 1352,   77,
       77,   77,   77,   77,   77,   84,   84,   84,   83,   83,
       83,  116, 1352,  116,  119, 1352,  119,  121,  121,  121,
      122,  122,  122,  156, 1352,  156,  157, 1352,  157,  157,

      158,  158,  158,  159,  159,  159,  167,  167,  167,  194,
     1352,  194,  197, 1352,  197,  198,  198,  198,  199,  199,
      199,  212,  212,  212,  217, 1352,  217,  220, 1352,  220,
      221,  221,  221,  221,  221,  240, 1352,  240,  241,  241,
      241,  242,  242,  242,  250,  250,  250,  250,  250,  257,
      257,  257,  258,  258,  258,  267, 1352,  267,  284,  284,
      284,  287,  287,  287,  288,  288,  288,  289,  289,  289,
      309,  309,  309,  310,  310,  310,  319,  319,  319,  324,
     1352,  324,  327, 1352,  327,  329, 1352,  329,  332, 1352,
      332,  333,  333,  333,  333,  333,  348,  348,  348,  349,

      349,  349,  350,  350,  350,  358,  358,  358,  358,  358,
      365,  365,  365,  365,  365,  372,  372,  372,  373,  373,
      373,  377,  377,  377,  385,  385,  385,  327, 1352,  327,
      394, 1352,  394,  332, 1352,  332,  398, 1352,  398,   57,
     1352, 1352,   57, 1352,   57,  413,  413,  413,  414,  414,
      414,  441,  441,  441,  442,  442,  442,  449,  449,  449,
      456, 1352,  456,  459, 1352,  459,  460, 1352,  460,  460,
      460,  464,  464,  464,  468,  468,  468,  471,  471,  471,
      473, 1352,  473,  476, 1352,  476,  478, 1352,  478,  481,
     1352,  481,  482,  482,  482,  482,  482,   57, 1352, 1352,

       57, 1352,   57,  491, 1352,  491,  494, 1352,  494,  495,
      495,  495,  496,  496,  496,  504,  504,  504,  504,  504,
      511,  511,  511,  511,  511,  518,  518,  518,  518,  518,
      525,  525,  525,  526,  526,  526,  530,  530,  530,  534,
     1352,  534,  534,  534,  537,  537,  537,  459, 1352,  459,
      544, 1352,  544,  549,  549,  549,  471,  471,  471,  555,
      555,  555,  476, 1352,  476,  559, 1352,  559,  481, 1352,
      481,  563, 1352,  563,  494, 1352,  494,  577, 1352,  577,
      578,  578,  578,  579,  579,  579,  613,  613,  613,  614,
      614,  614,  621,  621,  621,  628,  628,  628,  635, 1352,

      635,  638, 1352,  638,  640, 1352,  640,  643, 1352,  643,
      644, 1352,  644,  644,  644,  648,  648,  648,  652,  652,
      652,  655,  655,  655,  657, 1352,  657,  660, 1352,  660,
      662, 1352,  662,  665, 1352,  665,  666,  666,  666,  666,
      666,  675, 1352,  675,  678, 1352,  678,  679,  679,  679,
      691,  691,  691,  691,  691,  698,  698,  698,  698,  698,
      705,  705,  705,  705,  705,  712,  712,  712,  712,  712,
      719,  719,  719,  720,  720,  720,  724,  724,  724,  728,
     1352,  728,  728,  728,  731,  731,  731,  735, 1352,  735,
      735,  735,  738,  738,  738,  638, 1352,  638,  745, 1352,

      745,  643, 1352,  643,  749, 1352,  749,  754,  754,  754,
      655,  655,  655,  760,  760,  760,  660, 1352,  660,  764,
     1352,  764,  665, 1352,  665,  768, 1352,  768,  678, 1352,
      678,  782, 1352,  782,  783,  783,  783,  791,  791,  791,
     1352,  791,  787,  787,  787,  794, 1352,  794,  798, 1352,
      798,  802, 1352,  802,  806, 1352,  806,  810, 1352,  810,
      812,  812,  812,  813,  813,  813,  820,  820,  820,  827,
      827,  827,  834,  834,  834,  845, 1352,  845,  848, 1352,
      848,  850, 1352,  850,  853, 1352,  853,  854, 1352,  854,
      854,  854,  858,  858,  858,  862,  862,  862,  865,  865,

      865,  867, 1352,  867,  870, 1352,  870,  872, 1352,  872,
      875, 1352,  875,  876,  876,  876,  876,  876,  885, 1352,
      885,  888, 1352,  888,  894,  894,  894,  893,  893,  893,
      897,  897,  897, 1352,  897,  898,  898,  898,  898,  898,
      899,  899,  899, 1352,  899,  900,  900,  900,  900,  900,
      901,  901,  901, 1352,  901,  902,  902,  902,  902,  902,
      903,  903,  903, 1352,  903,  904,  904,  904,  904,  904,
      905,  905,  905, 1352,  905,  906,  906,  906,  906,  906,
      907,  907,  907, 1352,  907,  908,  908,  908,  909,  909,
      909,  913,  913,  913,  917, 1352,  917,  917,  917,  920,

      920,  920,  924, 1352,  924,  924,  924,  927,  927,  927,
      931, 1352,  931,  931,  931,  934,  934,  934,  848, 1352,
      848,  942, 1352,  942,  853, 1352,  853,  946, 1352,  946,
      951,  951,  951,  865,  865,  865,  957,  957,  957,  870,
     1352,  870,  961, 1352,  961,  875, 1352,  875,  965, 1352,
      965,  971, 1352,  971,  888, 1352,  888,  976, 1352,  976,
      978, 1352,  978,  981, 1352,  981,  982, 1352,  982,  982,
      982,  983,  983,  983, 1352,  983,  984,  984,  984, 1352,
      984,  985,  985,  985, 1352,  985,  986,  986,  986, 1352,
      986,  987,  987,  987, 1352,  987,  988,  988,  988, 1352,

      988,  989,  989,  989, 1352,  989,  990,  990,  990,  991,
      991,  991,  998,  998,  998, 1005, 1005, 1005, 1012, 1012,
     1012, 1019, 1019, 1019, 1030, 1352, 1030, 1033, 1352, 1033,
     1035, 1352, 1035, 1038, 1352, 1038, 1039, 1352, 1039, 1039,
     1039, 1043, 1043, 1043, 1047, 1047, 1047, 1050, 1050, 1050,
     1052, 1352, 1052, 1055, 1352, 1055, 1057, 1352, 1057, 1060,
     1352, 1060, 1061, 1061, 1061, 1061, 1061, 1062, 1062, 1062,
     1352, 1062,  981, 1352,  981, 1070, 1352, 1070, 1071, 1071,
     1071, 1352, 1071, 1072, 1072, 1072, 1352, 1072, 1073, 1073,
     1073, 1352, 1073, 1074, 1074, 1074, 1352, 1074, 1075, 1075,

     1075, 1352, 1075, 1076, 1076, 1076, 1352, 1076, 1077, 1077,
     1077, 1352, 1077, 1078, 1078, 1078, 1086, 1086, 1086, 1090,
     1352, 1090, 1090, 1090, 1093, 1093, 1093, 1097, 1352, 1097,
     1097, 1097, 1100, 1100, 1100, 1104, 1352, 1104, 1104, 1104,
     1107, 1107, 1107, 1111, 1352, 1111, 1111, 1111, 1114, 1114,
     1114, 1033, 1352, 1033, 1122, 1352, 1122, 1038, 1352, 1038,
     1126, 1352, 1126, 1131, 1131, 1131, 1050, 1050, 1050, 1137,
     1137, 1137, 1055, 1352, 1055, 1141, 1352, 1141, 1060, 1352,
     1060, 1145, 1352, 1145, 1146, 1146, 1146, 1352, 1146, 1149,
     1352, 1149, 1152, 1352, 1152,  895,  895,  895, 1352,  895,

     1153, 1153, 1153, 1161, 1352, 1161, 1157, 1157, 1157, 1164,
     1352, 1164, 1163, 1163, 1163, 1168, 1352, 1168, 1167, 1167,
     1167, 1172, 1352, 1172, 1171, 1171, 1171, 1176, 1352, 1176,
     1175, 1175, 1175, 1180, 1352, 1180, 1179, 1179, 1179, 1187,
     1352, 1187, 1190, 1352, 1190, 1192, 1352, 1192, 1195, 1352,
     1195, 1196, 1352, 1196, 1196, 1196, 1200, 1200, 1200, 1204,
     1204, 1204, 1207, 1207, 1207, 1209, 1352, 1209, 1212, 1352,
     1212, 1213, 1213, 1213, 1352, 1213, 1152, 1352, 1152, 1217,
     1352, 1217, 1223, 1223, 1223, 1222, 1222, 1222, 1226, 1352,
     1226, 1227, 1352, 1227, 1227, 1227, 1228, 1352, 1228, 1229,

     1352, 1229, 1229, 1229, 1230, 1352, 1230, 1231, 1352, 1231,
     1231, 1231, 1232, 1352, 1232, 1233, 1352, 1233, 1233, 1233,
     1234, 1352, 1234, 1235, 1352, 1235, 1235, 1235, 1236, 1352,
     1236, 1190, 1352, 1190, 1241, 1352, 1241, 1195, 1352, 1195,
     1245, 1352, 1245, 1251, 1352, 1251, 1250, 1250, 1250, 1207,
     1207, 1207, 1253, 1253, 1253, 1212, 1352, 1212, 1257, 1352,
     1257, 1258, 1258, 1258, 1261, 1261, 1261, 1263, 1352, 1263,
     1266, 1352, 1266, 1267, 1352, 1267, 1267, 1267, 1268, 1352,
     1268, 1269, 1352, 1269, 1270, 1352, 1270, 1271, 1352, 1271,
     1272, 1352, 1272, 1273, 1352, 1273, 1274, 1352, 1274, 1280,

     1352, 1280, 1283, 1352, 1283, 1285, 1352, 1285, 1288, 1352,
     1288, 1289, 1352, 1289, 1289, 1289, 1290, 1352, 1290, 1291,
     1291, 1291, 1294, 1294, 1294, 1295, 1295, 1295, 1299, 1352,
     1299, 1300, 1352, 1300, 1301, 1352, 1301, 1302, 1352, 1302,
     1303, 1352, 1303, 1304, 1352, 1304, 1305, 1352, 1305, 1306,
     1352, 1306, 1311, 1352, 1311, 1315, 1352, 1315, 1316, 1352,
     1316, 1317, 1317, 1317, 1319, 1352, 1319, 1322, 1352, 1322,
     1224, 1352, 1224, 1328, 1352, 1328, 1331, 1352, 1331, 1332,
     1352, 1332, 1336, 1352, 1336, 1341, 1352, 1341,    5, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,

     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352
    } ;

static yyconst short int yy_chk[7443] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    3,    3,    4,    4,   16, 1766,   16,
       16,   16,   16,   16,   16,   16,   16,   16,   51,   51,
      120, 1767,   16,   16,   18,   18,   18,   18,   18,   18,
      120,   16,   16,   16,   16,   16,   17,   17,   17,   17,
       17,   17,   17,   17,   24,  137,  137,   24,   24,   24,

       24,   24,   24,   24,   24,   24,  115,  115,  115, 1769,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   28,   28,   34,   71,
       25,   25,  165,  165,   71,   28,   34,  227,  227,   25,
       25,   25,   25,   25,   46,  157,   46,   46,   46,   46,
       46,   46,   46,   46,   47,  157,   47,   47,   47,   47,
       47,   47,   47,   47,   47,  131,  131,  131, 1776,   47,
       47,   92,   92,   92,   92,   92,   92, 1777,   47,   47,

       47,   47,   47,   50,   50,   50,   50,   50,   50,   50,
       50,   52,   52,   52,   52,   52,   52,   52,   52,   53,
       53,   53,   53,   53,   53,   53,   53,   53,   53, 1778,
      141, 1782,  175,  175,   53,   53,  126,  126,  126,  126,
      126,  126,  175,   53,   53,   53,   53,   53,   58,   58,
       58,   58,   58,   58,   58,   58,  141,  193,  193,  193,
     1784,   58,   58,  171,  171,  171,  171,  171,  171,  171,
       58,   58,   58,   58,   58,   80,  322,   80,   80,   80,
       80,   80,   80,   80,   80,   82,  322,   82,   82,   82,
       82,   82,   82,   82,   82,   82,  176,  176,  181,  181,

       82,   82,  216,  216,  216, 1785,  176, 1787,  181,   82,
       82,   82,   82,   82,   85,   85,   85,   85,   85,   85,
       85,   85,   85,   85,  237,  237, 1788,  205,  205,   85,
       85,  179,  179,  179,  179,  179,  179,  205,   85,   85,
       85,   85,   85,   90,   90,   90,   90,   90,   90,   90,
       90,   90,   90,   90,  239,  239,  206,  206,   90,   90,
      203,  203,  203,  203,  203,  203,  206,   90,   90,   90,
       90,   90,   91,   91,   91,   91,   91,   91,   91,   91,
       93, 1789,   93,   93,   93,   93,   93,   93,   93,   93,
       94,   94,   94,   94,   94,   94,   94,   94,  248,  248,

     1790,  211,  211,   94,   94,  209,  209,  209,  209,  209,
      209,  211,   94,   94,   94,   94,   94,  118, 1791,  118,
      118,  118,  118,  118,  118,  124,  124,  124,  124,  124,
      124,  124,  124,  124,  124,  124,  221,  221,  250,  250,
      124,  124,  255,  255,  284,  284,  221, 1792,  250,  124,
      124,  124,  124,  124,  125,  125,  125,  125,  125,  125,
      125,  125,  127,  380,  127,  127,  127,  127,  127,  127,
      127,  127,  132,  380,  132,  132,  132,  132,  132,  132,
      132,  132,  133,  133,  133,  133,  133,  133,  133,  133,
      133,  133,  133,  285,  285,  271,  271,  133,  133,  262,

      262,  262,  262,  262,  262,  271,  133,  133,  133,  133,
      133,  134,  134,  134,  134,  134,  134,  134,  134,  272,
      272,  277,  277, 1793,  134,  134,  287,  287, 1794,  272,
     1757,  277, 1747,  134,  134,  134,  134,  134,  135, 1746,
      135,  135,  135,  135,  135,  135,  135,  135,  136,  136,
      136,  136,  136,  136,  136,  136,  154, 1745,  154,  154,
      154,  154,  154,  154,  154,  154,  160,  160,  160,  160,
      160,  160,  160,  160,  160,  160,  316,  316,  316,  295,
      295,  160,  160,  275,  275,  275,  275,  275,  275,  295,
      160,  160,  160,  160,  160,  161,  161,  161,  161,  161,

      161,  161,  161,  161,  161,  161,  286,  286,  296,  296,
      161,  161,  339,  339,  286,  286,  348,  348,  296,  161,
      161,  161,  161,  161,  162,  162,  162,  162,  162,  162,
      162,  162,  323,  323,  323,  301,  301,  162,  162,  293,
      293,  293,  293,  293,  293,  301,  162,  162,  162,  162,
      162,  163, 1730,  163,  163,  163,  163,  163,  163,  163,
      163,  164,  164,  164,  164,  164,  164,  164,  164,  173,
     1725,  173,  173,  173,  173,  173,  173,  173,  173,  177,
      177,  177,  177,  177,  177,  177,  177,  177,  177,  177,
      356,  356,  302,  302,  177,  177,  299,  299,  299,  299,

      299,  299,  302,  177,  177,  177,  177,  177,  178,  178,
      178,  178,  178,  178,  178,  178,  180,  384,  180,  180,
      180,  180,  180,  180,  180,  180,  196,  384,  196,  196,
      196,  196,  196,  196,  201,  201,  201,  201,  201,  201,
      201,  201,  201,  201,  201,  303,  303,  308,  308,  201,
      201,  328,  328,  328, 1722,  303, 1719,  308,  201,  201,
      201,  201,  201,  202,  202,  202,  202,  202,  202,  202,
      202,  204, 1718,  204,  204,  204,  204,  204,  204,  204,
      204,  207,  207,  207,  207,  207,  207,  207,  207,  207,
      207,  207,  363,  363,  333,  333,  207,  207,  306,  306,

      306,  306,  306,  306,  333,  207,  207,  207,  207,  207,
      208,  208,  208,  208,  208,  208,  208,  208,  210, 1717,
      210,  210,  210,  210,  210,  210,  210,  210,  214,  214,
      214,  214,  214,  214,  214,  214,  344,  344,  344,  358,
      358,  214,  214,  314,  314,  314,  314,  314,  314,  358,
      214,  214,  214,  214,  214,  219, 1703,  219,  219,  219,
      219,  219,  219,  222, 1700,  222,  222,  222,  222,  222,
      222,  222,  222,  223,  223,  223,  223,  223,  223,  223,
      223,  223,  223,  223,  346,  346,  346, 1688,  223,  223,
      370,  370,  391,  391,  393,  393, 1687,  223,  223,  223,

      223,  223,  224,  224,  224,  224,  224,  224,  224,  224,
      365,  365,  385,  390, 1686,  224,  224,  455,  455,  455,
      365, 1669,  385,  390,  224,  224,  224,  224,  224,  225,
     1668,  225,  225,  225,  225,  225,  225,  225,  225,  226,
      226,  226,  226,  226,  226,  226,  226,  238,  238,  238,
      238,  238,  238,  238,  238,  238,  238,  243,  243,  243,
      243,  243,  243,  243,  243,  243,  243,  461,  461,  461,
      402,  402,  243,  243,  388,  388,  388,  388,  388,  388,
      402,  243,  243,  243,  243,  243,  244,  244,  244,  244,
      244,  244,  244,  244,  244,  244,  244,  403,  403,  408,

      408,  244,  244,  468,  468,  469,  469,  403, 1664,  408,
      244,  244,  244,  244,  244,  245,  245,  245,  245,  245,
      245,  245,  245,  471,  471, 1661,  420,  420,  245,  245,
      406,  406,  406,  406,  406,  406,  420,  245,  245,  245,
      245,  245,  246, 1657,  246,  246,  246,  246,  246,  246,
      246,  246,  247,  247,  247,  247,  247,  247,  247,  247,
      251,  251,  251,  251,  251,  251,  251,  251,  251,  251,
      251,  488,  488,  421,  421,  251,  251,  418,  418,  418,
      418,  418,  418,  421,  251,  251,  251,  251,  251,  252,
      252,  252,  252,  252,  252,  252,  252,  472,  472,  472,

      426,  426,  252,  252,  424,  424,  424,  424,  424,  424,
      426,  252,  252,  252,  252,  252,  253, 1654,  253,  253,
      253,  253,  253,  253,  253,  253,  254,  254,  254,  254,
      254,  254,  254,  254,  259,  259,  259,  259,  259,  259,
      259,  259,  427,  427,  428,  428, 1651,  259,  259,  477,
      477,  477,  427, 1650,  428, 1649,  259,  259,  259,  259,
      259,  260,  448,  260,  260,  260,  260,  260,  260,  260,
      260,  260,  448, 1629,  433,  433,  260,  260,  431,  431,
      431,  431,  431,  431,  433,  260,  260,  260,  260,  260,
      261,  261,  261,  261,  261,  261,  261,  261,  265,  449,

      265,  265,  265,  265,  265,  265,  265,  265,  269,  449,
      269,  269,  269,  269,  269,  269,  269,  269,  273,  273,
      273,  273,  273,  273,  273,  273,  273,  273,  273,  434,
      434,  435,  435,  273,  273,  490,  490,  490, 1628,  434,
     1627,  435,  273,  273,  273,  273,  273,  274,  274,  274,
      274,  274,  274,  274,  274,  276, 1626,  276,  276,  276,
      276,  276,  276,  276,  276,  283,  283,  283,  283,  283,
      283,  283,  283,  291,  291,  291,  291,  291,  291,  291,
      291,  291,  291,  291,  502,  502,  440,  440,  291,  291,
      438,  438,  438,  438,  438,  438,  440,  291,  291,  291,

      291,  291,  292,  292,  292,  292,  292,  292,  292,  292,
      294, 1611,  294,  294,  294,  294,  294,  294,  294,  294,
      297,  297,  297,  297,  297,  297,  297,  297,  297,  297,
      297,  509,  509,  454, 1610,  297,  297,  446,  446,  446,
      446,  446,  446,  454,  297,  297,  297,  297,  297,  298,
      298,  298,  298,  298,  298,  298,  298,  300, 1609,  300,
      300,  300,  300,  300,  300,  300,  300,  304,  304,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  516,  516,
      467, 1590,  304,  304,  452,  452,  452,  452,  452,  452,
      467,  304,  304,  304,  304,  304,  305,  305,  305,  305,

      305,  305,  305,  305,  307,  533,  307,  307,  307,  307,
      307,  307,  307,  307,  312,  533,  312,  312,  312,  312,
      312,  312,  312,  312,  312,  470,  470,  482,  482,  312,
      312,  523,  523,  470,  470,  555,  555,  482,  312,  312,
      312,  312,  312,  313,  313,  313,  313,  313,  313,  313,
      313,  317, 1586,  317,  317,  317,  317,  317,  317,  317,
      317,  317,  504,  504,  511,  511,  317,  317,  556,  556,
      558,  558,  504, 1583,  511,  317,  317,  317,  317,  317,
      318,  318,  318,  318,  318,  318,  318,  318,  518,  518,
      540,  548, 1579,  318,  318,  634,  634,  634,  518, 1576,

      540,  548,  318,  318,  318,  318,  318,  320,  320,  320,
      320,  320,  320,  320,  320,  321, 1573,  321,  321,  321,
      321,  321,  321,  549,  326,  321,  326,  326,  326,  326,
      326,  326,  331,  549,  331,  331,  331,  331,  331,  331,
      334, 1572,  334,  334,  334,  334,  334,  334,  334,  334,
      335,  335,  335,  335,  335,  335,  335,  335,  335,  335,
      335,  652,  652,  554, 1571,  335,  335,  552,  552,  552,
      552,  552,  552,  554,  335,  335,  335,  335,  335,  336,
      336,  336,  336,  336,  336,  336,  336,  567,  567,  568,
      568, 1548,  336,  336,  639,  639,  639,  567, 1532,  568,

     1531,  336,  336,  336,  336,  336,  337, 1530,  337,  337,
      337,  337,  337,  337,  337,  337,  338,  338,  338,  338,
      338,  338,  338,  338,  351,  351,  351,  351,  351,  351,
      351,  351,  351,  351,  645,  645,  645,  573,  573,  351,
      351,  571,  571,  571,  571,  571,  571,  573,  351,  351,
      351,  351,  351,  352,  352,  352,  352,  352,  352,  352,
      352,  352,  352,  352,  653,  653,  585,  585,  352,  352,
      583,  583,  583,  583,  583,  583,  585,  352,  352,  352,
      352,  352,  353,  353,  353,  353,  353,  353,  353,  353,
      586,  586,  591,  591, 1514,  353,  353,  655,  655, 1511,

      586, 1508,  591, 1504,  353,  353,  353,  353,  353,  354,
     1501,  354,  354,  354,  354,  354,  354,  354,  354,  355,
      355,  355,  355,  355,  355,  355,  355,  359,  359,  359,
      359,  359,  359,  359,  359,  359,  359,  359,  672,  672,
      592,  592,  359,  359,  589,  589,  589,  589,  589,  589,
      592,  359,  359,  359,  359,  359,  360,  360,  360,  360,
      360,  360,  360,  360,  593,  593,  598,  598, 1498,  360,
      360,  656,  656,  656,  593, 1462,  598, 1459,  360,  360,
      360,  360,  360,  361, 1456,  361,  361,  361,  361,  361,
      361,  361,  361,  362,  362,  362,  362,  362,  362,  362,

      362,  366,  366,  366,  366,  366,  366,  366,  366,  366,
      366,  366,  683,  683,  599,  599,  366,  366,  596,  596,
      596,  596,  596,  596,  599,  366,  366,  366,  366,  366,
      367,  367,  367,  367,  367,  367,  367,  367,  600,  600,
      605,  605, 1452,  367,  367,  661,  661,  661,  600, 1449,
      605, 1419,  367,  367,  367,  367,  367,  368, 1418,  368,
      368,  368,  368,  368,  368,  368,  368,  369,  369,  369,
      369,  369,  369,  369,  369,  374,  374,  374,  374,  374,
      374,  374,  374,  674,  674,  674,  606,  606,  374,  374,
      603,  603,  603,  603,  603,  603,  606,  374,  374,  374,

      374,  374,  375, 1414,  375,  375,  375,  375,  375,  375,
      375,  375,  375,  607,  607,  612,  612,  375,  375,  689,
      689,  696,  696,  607, 1411,  612,  375,  375,  375,  375,
      375,  376,  376,  376,  376,  376,  376,  376,  376,  703,
      703, 1409,  620, 1387,  376,  376,  610,  610,  610,  610,
      610,  610,  620,  376,  376,  376,  376,  376,  378,  378,
      378,  378,  378,  378,  378,  378,  379, 1380,  379,  379,
      379,  379,  379,  379,  710,  710,  379,  382,  621,  382,
      382,  382,  382,  382,  382,  382,  382,  386,  621,  386,
      386,  386,  386,  386,  386,  386,  386,  386,  717,  717,

      626, 1376,  386,  386,  618,  618,  618,  618,  618,  618,
      626,  386,  386,  386,  386,  386,  387,  387,  387,  387,
      387,  387,  387,  387,  392,  392,  392,  392,  392,  392,
      392,  392,  392,  392,  396,  627,  396,  396,  396,  396,
      396,  396,  396,  396,  400,  627,  400,  400,  400,  400,
      400,  400,  400,  400,  404,  404,  404,  404,  404,  404,
      404,  404,  404,  404,  404,  760,  760,  628, 1370,  404,
      404,  624,  624,  624,  624,  624,  624,  628,  404,  404,
      404,  404,  404,  405,  405,  405,  405,  405,  405,  405,
      405,  407,  633,  407,  407,  407,  407,  407,  407,  407,

      407,  411,  633,  411,  411,  411,  411,  411,  411,  411,
      411,  416,  416,  416,  416,  416,  416,  416,  416,  416,
      416,  416,  761,  761,  651, 1364,  416,  416,  631,  631,
      631,  631,  631,  631,  651,  416,  416,  416,  416,  416,
      417,  417,  417,  417,  417,  417,  417,  417,  419, 1363,
      419,  419,  419,  419,  419,  419,  419,  419,  422,  422,
      422,  422,  422,  422,  422,  422,  422,  422,  422,  654,
      654,  666,  666,  422,  422,  763,  763,  654,  654,  791,
      791,  666,  422,  422,  422,  422,  422,  423,  423,  423,
      423,  423,  423,  423,  423,  425, 1358,  425,  425,  425,

      425,  425,  425,  425,  425,  429,  429,  429,  429,  429,
      429,  429,  429,  429,  429,  429,  794,  794,  691,  691,
      429,  429,  682,  682,  682,  682,  682,  682,  691,  429,
      429,  429,  429,  429,  430,  430,  430,  430,  430,  430,
      430,  430,  432, 1354,  432,  432,  432,  432,  432,  432,
      432,  432,  436,  436,  436,  436,  436,  436,  436,  436,
      436,  436,  436,  698,  698,  705,  705,  436,  436,  743,
      743,  743, 1341,  698, 1336,  705,  436,  436,  436,  436,
      436,  437,  437,  437,  437,  437,  437,  437,  437,  439,
      727,  439,  439,  439,  439,  439,  439,  439,  439,  444,

      727,  444,  444,  444,  444,  444,  444,  444,  444,  444,
      712,  712,  734, 1331,  444,  444,  784,  784,  784, 1329,
      712, 1328,  734,  444,  444,  444,  444,  444,  445,  445,
      445,  445,  445,  445,  445,  445,  450,  741,  450,  450,
      450,  450,  450,  450,  450,  450,  450,  741,  753,  754,
     1322,  450,  450,  798,  798,  802,  802, 1320,  753,  754,
      450,  450,  450,  450,  450,  451,  451,  451,  451,  451,
      451,  451,  451,  458, 1319,  458,  458,  458,  458,  458,
      458,  462,  759,  462,  462,  462,  462,  462,  462,  462,
      462,  462,  759, 1315,  772,  772,  462,  462,  757,  757,

      757,  757,  757,  757,  772,  462,  462,  462,  462,  462,
      463,  463,  463,  463,  463,  463,  463,  463,  773,  773,
      778,  778, 1314,  463,  463,  806,  806, 1312,  773, 1311,
      778, 1299,  463,  463,  463,  463,  463,  465,  465,  465,
      465,  465,  465,  465,  465,  466, 1298,  466,  466,  466,
      466,  466,  466,  790,  475,  466,  475,  475,  475,  475,
      475,  475,  480,  790,  480,  480,  480,  480,  480,  480,
      483, 1296,  483,  483,  483,  483,  483,  483,  483,  483,
      484,  484,  484,  484,  484,  484,  484,  484,  484,  484,
      484,  810,  810,  792,  792,  484,  484,  776,  776,  776,

      776,  776,  776,  792,  484,  484,  484,  484,  484,  485,
      485,  485,  485,  485,  485,  485,  485,  793,  793,  795,
      795, 1289,  485,  485,  844,  844,  844,  793, 1288,  795,
     1286,  485,  485,  485,  485,  485,  486, 1285,  486,  486,
      486,  486,  486,  486,  486,  486,  487,  487,  487,  487,
      487,  487,  487,  487,  493, 1283,  493,  493,  493,  493,
      493,  493,  497,  497,  497,  497,  497,  497,  497,  497,
      497,  497,  796,  796,  797,  797, 1281,  497,  497,  849,
      849,  849,  796, 1280,  797, 1267,  497,  497,  497,  497,
      497,  498,  498,  498,  498,  498,  498,  498,  498,  498,

      498,  498,  799,  799,  800,  800,  498,  498,  855,  855,
      855, 1266,  799, 1264,  800,  498,  498,  498,  498,  498,
      499,  499,  499,  499,  499,  499,  499,  499,  801,  801,
      803,  803, 1263,  499,  499,  862,  862, 1257,  801, 1248,
      803, 1246,  499,  499,  499,  499,  499,  500, 1245,  500,
      500,  500,  500,  500,  500,  500,  500,  501,  501,  501,
      501,  501,  501,  501,  501,  505,  505,  505,  505,  505,
      505,  505,  505,  505,  505,  505,  804,  804,  805,  805,
      505,  505,  863,  863,  865,  865,  804, 1244,  805,  505,
      505,  505,  505,  505,  506,  506,  506,  506,  506,  506,

      506,  506,  807,  807,  808,  808, 1242,  506,  506,  866,
      866,  866,  807, 1241,  808, 1235,  506,  506,  506,  506,
      506,  507, 1233,  507,  507,  507,  507,  507,  507,  507,
      507,  508,  508,  508,  508,  508,  508,  508,  508,  512,
      512,  512,  512,  512,  512,  512,  512,  512,  512,  512,
      809,  809,  811,  811,  512,  512,  871,  871,  871, 1231,
      809, 1229,  811,  512,  512,  512,  512,  512,  513,  513,
      513,  513,  513,  513,  513,  513,  882,  882, 1227,  819,
     1220,  513,  513,  817,  817,  817,  817,  817,  817,  819,
      513,  513,  513,  513,  513,  514, 1218,  514,  514,  514,

      514,  514,  514,  514,  514,  515,  515,  515,  515,  515,
      515,  515,  515,  519,  519,  519,  519,  519,  519,  519,
      519,  519,  519,  519,  820,  825,  826, 1217,  519,  519,
      884,  884,  884, 1212,  820,  825,  826,  519,  519,  519,
      519,  519,  520,  520,  520,  520,  520,  520,  520,  520,
      894,  894, 1210,  827, 1209,  520,  520,  823,  823,  823,
      823,  823,  823,  827,  520,  520,  520,  520,  520,  521,
     1200,  521,  521,  521,  521,  521,  521,  521,  521,  522,
      522,  522,  522,  522,  522,  522,  522,  527,  527,  527,
      527,  527,  527,  527,  527,  895,  895, 1196,  832, 1195,

      527,  527,  830,  830,  830,  830,  830,  830,  832,  527,
      527,  527,  527,  527,  528,  833,  528,  528,  528,  528,
      528,  528,  528,  528,  528,  833,  834,  839, 1193,  528,
      528,  897,  897,  899,  899, 1192,  834,  839,  528,  528,
      528,  528,  528,  529,  529,  529,  529,  529,  529,  529,
      529,  901,  901, 1190,  861, 1188,  529,  529,  837,  837,
      837,  837,  837,  837,  861,  529,  529,  529,  529,  529,
      531,  531,  531,  531,  531,  531,  531,  531,  532, 1187,
      532,  532,  532,  532,  532,  532,  903,  903,  532,  535,
      892,  535,  535,  535,  535,  535,  535,  535,  535,  535,

      892, 1157,  876,  876,  535,  535,  842,  842,  842,  842,
      842,  842,  876,  535,  535,  535,  535,  535,  536,  536,
      536,  536,  536,  536,  536,  536,  864,  864,  893,  896,
     1156,  536,  536, 1153,  864,  864,  905,  905,  893,  896,
      536,  536,  536,  536,  536,  538,  538,  538,  538,  538,
      538,  538,  538,  539, 1152,  539,  539,  539,  539,  539,
      539,  907,  907,  539,  542,  916,  542,  542,  542,  542,
      542,  542,  542,  542,  546,  916,  546,  546,  546,  546,
      546,  546,  546,  546,  550, 1150,  550,  550,  550,  550,
      550,  550,  550,  550,  550,  898,  898,  900,  900,  550,

      550,  940,  940,  940, 1149,  898, 1145,  900,  550,  550,
      550,  550,  550,  551,  551,  551,  551,  551,  551,  551,
      551,  557,  557,  557,  557,  557,  557,  557,  557,  557,
      557,  561,  923,  561,  561,  561,  561,  561,  561,  561,
      561,  565,  923,  565,  565,  565,  565,  565,  565,  565,
      565,  569,  569,  569,  569,  569,  569,  569,  569,  569,
      569,  569,  902,  902,  904,  904,  569,  569,  957,  957,
      958,  958,  902, 1144,  904,  569,  569,  569,  569,  569,
      570,  570,  570,  570,  570,  570,  570,  570,  572,  930,
      572,  572,  572,  572,  572,  572,  572,  572,  575,  930,

      575,  575,  575,  575,  575,  575,  575,  575,  580,  580,
      580,  580,  580,  580,  580,  580,  580,  906,  906,  937,
     1142,  580,  580,  960,  960,  971,  971,  906, 1141,  937,
      580,  580,  580,  580,  580,  581,  581,  581,  581,  581,
      581,  581,  581,  581,  581,  581,  950,  951,  956, 1135,
      581,  581,  974,  974,  974, 1129,  950,  951,  956,  581,
      581,  581,  581,  581,  582,  582,  582,  582,  582,  582,
      582,  582,  584, 1127,  584,  584,  584,  584,  584,  584,
      584,  584,  587,  587,  587,  587,  587,  587,  587,  587,
      587,  587,  587,  983,  983,  969,  969,  587,  587,  954,

      954,  954,  954,  954,  954,  969,  587,  587,  587,  587,
      587,  588,  588,  588,  588,  588,  588,  588,  588,  590,
     1126,  590,  590,  590,  590,  590,  590,  590,  590,  594,
      594,  594,  594,  594,  594,  594,  594,  594,  594,  594,
      970,  970,  972,  972,  594,  594,  977,  977,  977, 1125,
      970, 1123,  972,  594,  594,  594,  594,  594,  595,  595,
      595,  595,  595,  595,  595,  595,  597, 1122,  597,  597,
      597,  597,  597,  597,  597,  597,  601,  601,  601,  601,
      601,  601,  601,  601,  601,  601,  601,  984,  984,  985,
      985,  601,  601,  986,  986,  987,  987,  988,  988, 1114,

      601,  601,  601,  601,  601,  602,  602,  602,  602,  602,
      602,  602,  602,  604, 1111,  604,  604,  604,  604,  604,
      604,  604,  604,  608,  608,  608,  608,  608,  608,  608,
      608,  608,  608,  608,  989,  989,  997, 1107,  608,  608,
      995,  995,  995,  995,  995,  995,  997,  608,  608,  608,
      608,  608,  609,  609,  609,  609,  609,  609,  609,  609,
      611,  998,  611,  611,  611,  611,  611,  611,  611,  611,
      616,  998,  616,  616,  616,  616,  616,  616,  616,  616,
      616, 1047, 1047, 1003, 1104,  616,  616, 1001, 1001, 1001,
     1001, 1001, 1001, 1003,  616,  616,  616,  616,  616,  617,

      617,  617,  617,  617,  617,  617,  617,  622, 1004,  622,
      622,  622,  622,  622,  622,  622,  622,  622, 1004, 1005,
     1010, 1100,  622,  622, 1029, 1029, 1029, 1048, 1048, 1005,
     1010,  622,  622,  622,  622,  622,  623,  623,  623,  623,
      623,  623,  623,  623,  629, 1011,  629,  629,  629,  629,
      629,  629,  629,  629,  629, 1011, 1097, 1012, 1093,  629,
      629, 1008, 1008, 1008, 1008, 1008, 1008, 1012,  629,  629,
      629,  629,  629,  630,  630,  630,  630,  630,  630,  630,
      630,  637, 1090,  637,  637,  637,  637,  637,  637,  642,
     1086,  642,  642,  642,  642,  642,  642,  646, 1017,  646,

      646,  646,  646,  646,  646,  646,  646,  646, 1017, 1083,
     1018, 1078,  646,  646, 1015, 1015, 1015, 1015, 1015, 1015,
     1018,  646,  646,  646,  646,  646,  647,  647,  647,  647,
      647,  647,  647,  647, 1019, 1024, 1034, 1034, 1034,  647,
      647, 1040, 1040, 1040, 1019, 1024, 1050, 1050,  647,  647,
      647,  647,  647,  649,  649,  649,  649,  649,  649,  649,
      649,  650, 1070,  650,  650,  650,  650,  650,  650, 1046,
      659,  650,  659,  659,  659,  659,  659,  659,  664, 1046,
      664,  664,  664,  664,  664,  664,  667, 1069,  667,  667,
      667,  667,  667,  667,  667,  667,  668,  668,  668,  668,

      668,  668,  668,  668,  668,  668,  668, 1051, 1051, 1051,
     1067,  668,  668, 1022, 1022, 1022, 1022, 1022, 1022, 1060,
      668,  668,  668,  668,  668,  669,  669,  669,  669,  669,
      669,  669,  669, 1056, 1056, 1056, 1061, 1061,  669,  669,
     1027, 1027, 1027, 1027, 1027, 1027, 1061,  669,  669,  669,
      669,  669,  670, 1058,  670,  670,  670,  670,  670,  670,
      670,  670,  671,  671,  671,  671,  671,  671,  671,  671,
      677, 1057,  677,  677,  677,  677,  677,  677,  680, 1055,
      680,  680,  680,  680,  680,  680,  680,  680,  680, 1049,
     1049, 1062, 1062,  680,  680, 1071, 1071, 1049, 1049, 1072,

     1072, 1053,  680,  680,  680,  680,  680,  681,  681,  681,
      681,  681,  681,  681,  681,  685,  685,  685,  685,  685,
      685,  685,  685,  685,  685,  685, 1073, 1073, 1074, 1074,
      685,  685, 1065, 1065, 1065, 1065, 1065, 1065, 1052,  685,
      685,  685,  685,  685,  687, 1043,  687,  687,  687,  687,
      687,  687,  687,  687,  688,  688,  688,  688,  688,  688,
      688,  688,  692,  692,  692,  692,  692,  692,  692,  692,
      692,  692,  692, 1075, 1075, 1076, 1076,  692,  692, 1077,
     1077, 1039, 1089, 1120, 1120, 1120,  692,  692,  692,  692,
      692,  694, 1089,  694,  694,  694,  694,  694,  694,  694,

      694,  695,  695,  695,  695,  695,  695,  695,  695,  699,
      699,  699,  699,  699,  699,  699,  699,  699,  699,  699,
     1137, 1137, 1096, 1038,  699,  699, 1081, 1081, 1081, 1081,
     1081, 1081, 1096,  699,  699,  699,  699,  699,  701, 1036,
      701,  701,  701,  701,  701,  701,  701,  701,  702,  702,
      702,  702,  702,  702,  702,  702,  706,  706,  706,  706,
      706,  706,  706,  706,  706,  706,  706, 1103, 1110, 1117,
     1035,  706,  706, 1138, 1138, 1033, 1130, 1103, 1110, 1117,
      706,  706,  706,  706,  706,  708, 1130,  708,  708,  708,
      708,  708,  708,  708,  708,  709,  709,  709,  709,  709,

      709,  709,  709,  713,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713, 1131, 1136, 1140, 1140,  713,  713,
     1146, 1146, 1031, 1160, 1131, 1136, 1030,  713,  713,  713,
      713,  713,  715, 1160,  715,  715,  715,  715,  715,  715,
      715,  715,  716,  716,  716,  716,  716,  716,  716,  716,
      721,  721,  721,  721,  721,  721,  721,  721, 1148, 1148,
     1148, 1162, 1023,  721,  721, 1134, 1134, 1134, 1134, 1134,
     1134, 1162,  721,  721,  721,  721,  721,  722, 1016,  722,
      722,  722,  722,  722,  722,  722,  722,  722, 1154, 1154,
     1154, 1009,  722,  722, 1184, 1184, 1184, 1184, 1184, 1184,

     1002,  722,  722,  722,  722,  722,  723,  723,  723,  723,
      723,  723,  723,  723, 1163, 1165, 1166, 1167,  996,  723,
      723, 1186, 1186, 1186, 1163, 1165, 1166, 1167,  723,  723,
      723,  723,  723,  725,  725,  725,  725,  725,  725,  725,
      725,  726,  991,  726,  726,  726,  726,  726,  726, 1204,
     1204,  726,  729, 1169,  729,  729,  729,  729,  729,  729,
      729,  729,  729, 1169, 1170, 1171,  990,  729,  729, 1191,
     1191, 1191, 1205, 1205, 1170, 1171,  729,  729,  729,  729,
      729,  730,  730,  730,  730,  730,  730,  730,  730, 1173,
     1174, 1175, 1177,  982,  730,  730, 1197, 1197, 1197, 1173,

     1174, 1175, 1177,  730,  730,  730,  730,  730,  732,  732,
      732,  732,  732,  732,  732,  732,  733,  981,  733,  733,
      733,  733,  733,  733, 1207, 1207,  733,  736, 1178,  736,
      736,  736,  736,  736,  736,  736,  736,  736, 1178, 1179,
     1181,  979,  736,  736, 1208, 1208, 1208, 1213, 1213, 1179,
     1181,  736,  736,  736,  736,  736,  737,  737,  737,  737,
      737,  737,  737,  737, 1203, 1214, 1214, 1206, 1206,  737,
      737, 1216, 1216,  978, 1203, 1206, 1206,  976,  737,  737,
      737,  737,  737,  739,  739,  739,  739,  739,  739,  739,
      739,  740,  968,  740,  740,  740,  740,  740,  740, 1253,

     1253,  740,  747, 1221,  747,  747,  747,  747,  747,  747,
      747,  747,  751, 1221,  751,  751,  751,  751,  751,  751,
      751,  751,  755, 1222,  755,  755,  755,  755,  755,  755,
      755,  755,  755, 1222, 1225, 1249,  966,  755,  755, 1239,
     1239, 1239, 1254, 1254, 1225, 1249,  755,  755,  755,  755,
      755,  756,  756,  756,  756,  756,  756,  756,  756,  762,
      762,  762,  762,  762,  762,  762,  762,  762,  762,  766,
     1250,  766,  766,  766,  766,  766,  766,  766,  766,  770,
     1250,  770,  770,  770,  770,  770,  770,  770,  770,  774,
      774,  774,  774,  774,  774,  774,  774,  774,  774,  774,

     1252, 1256, 1256,  965,  774,  774, 1258, 1258, 1259, 1259,
     1252, 1261, 1261,  774,  774,  774,  774,  774,  775,  775,
      775,  775,  775,  775,  775,  775,  777,  964,  777,  777,
      777,  777,  777,  777,  777,  777,  780,  962,  780,  780,
      780,  780,  780,  780,  780,  780,  785,  961,  785,  785,
      785,  785,  785,  785,  785,  785,  785, 1260, 1260, 1291,
     1291,  785,  785, 1292, 1292, 1260, 1260, 1262, 1262, 1262,
      785,  785,  785,  785,  785,  788,  788,  788,  788,  788,
      788,  788,  788,  789,  955,  789,  789,  789,  789,  789,
      789, 1294, 1294,  789,  815,  949,  815,  815,  815,  815,

      815,  815,  815,  815,  815, 1279, 1279, 1279,  947,  815,
      815, 1277, 1277, 1277, 1277, 1277, 1277,  946,  815,  815,
      815,  815,  815,  816,  816,  816,  816,  816,  816,  816,
      816,  821,  945,  821,  821,  821,  821,  821,  821,  821,
      821,  821, 1284, 1284, 1284,  943,  821,  821, 1295, 1295,
     1309, 1309, 1309, 1317, 1317,  821,  821,  821,  821,  821,
      822,  822,  822,  822,  822,  822,  822,  822,  828,  942,
      828,  828,  828,  828,  828,  828,  828,  828,  828, 1293,
     1293,  934,  931,  828,  828,  927,  924, 1293, 1293, 1318,
     1318, 1318,  828,  828,  828,  828,  828,  829,  829,  829,

      829,  829,  829,  829,  829,  835,  920,  835,  835,  835,
      835,  835,  835,  835,  835,  835, 1327, 1327, 1327,  917,
      835,  835, 1325, 1325, 1325, 1325, 1325, 1325,  913,  835,
      835,  835,  835,  835,  836,  836,  836,  836,  836,  836,
      836,  836,  847,  909,  847,  847,  847,  847,  847,  847,
      852,  908,  852,  852,  852,  852,  852,  852,  856,  891,
      856,  856,  856,  856,  856,  856,  856,  856,  856, 1334,
     1334, 1334,  889,  856,  856, 1339, 1339, 1339,  888,  886,
      885,  883,  856,  856,  856,  856,  856,  857,  857,  857,
      857,  857,  857,  857,  857,  875,  873,  872,  870,  868,

      857,  857, 1344, 1344, 1344, 1344, 1344, 1344,  867,  857,
      857,  857,  857,  857,  859,  859,  859,  859,  859,  859,
      859,  859,  860,  858,  860,  860,  860,  860,  860,  860,
      854,  869,  860,  869,  869,  869,  869,  869,  869,  874,
      853,  874,  874,  874,  874,  874,  874,  877,  851,  877,
      877,  877,  877,  877,  877,  877,  877,  878,  878,  878,
      878,  878,  878,  878,  878,  878,  878,  878,  850,  848,
      846,  845,  878,  878, 1348, 1348, 1348, 1348, 1348, 1348,
      838,  878,  878,  878,  878,  878,  880,  831,  880,  880,
      880,  880,  880,  880,  880,  880,  881,  881,  881,  881,

      881,  881,  881,  881,  887,  824,  887,  887,  887,  887,
      887,  887,  890,  818,  890,  890,  890,  890,  890,  890,
      890,  890,  910,  910,  910,  910,  910,  910,  910,  910,
      814,  813,  812,  787,  786,  910,  910,  783,  782,  781,
      779,  771,  769,  768,  910,  910,  910,  910,  910,  911,
      767,  911,  911,  911,  911,  911,  911,  911,  911,  911,
      765,  764,  758,  752,  911,  911,  750,  749,  748,  746,
      745,  738,  735,  911,  911,  911,  911,  911,  912,  912,
      912,  912,  912,  912,  912,  912,  731,  728,  724,  720,
      719,  912,  912,  718,  711,  704,  697,  690,  684,  679,

      912,  912,  912,  912,  912,  914,  914,  914,  914,  914,
      914,  914,  914,  915,  678,  915,  915,  915,  915,  915,
      915,  676,  675,  915,  918,  673,  918,  918,  918,  918,
      918,  918,  918,  918,  918,  665,  663,  662,  660,  918,
      918,  658,  657,  648,  644,  643,  641,  640,  918,  918,
      918,  918,  918,  919,  919,  919,  919,  919,  919,  919,
      919,  638,  636,  635,  632,  625,  919,  919,  619,  615,
      614,  613,  579,  578,  577,  919,  919,  919,  919,  919,
      921,  921,  921,  921,  921,  921,  921,  921,  922,  576,
      922,  922,  922,  922,  922,  922,  574,  566,  922,  925,

      564,  925,  925,  925,  925,  925,  925,  925,  925,  925,
      563,  562,  560,  559,  925,  925,  553,  547,  545,  544,
      543,  541,  537,  925,  925,  925,  925,  925,  926,  926,
      926,  926,  926,  926,  926,  926,  534,  530,  526,  525,
      524,  926,  926,  517,  510,  503,  496,  495,  494,  492,
      926,  926,  926,  926,  926,  928,  928,  928,  928,  928,
      928,  928,  928,  929,  491,  929,  929,  929,  929,  929,
      929,  489,  481,  929,  932,  479,  932,  932,  932,  932,
      932,  932,  932,  932,  932,  478,  476,  474,  473,  932,
      932,  464,  460,  459,  457,  456,  453,  447,  932,  932,

      932,  932,  932,  933,  933,  933,  933,  933,  933,  933,
      933,  443,  442,  441,  415,  414,  933,  933,  413,  412,
      410,  401,  399,  398,  397,  933,  933,  933,  933,  933,
      935,  935,  935,  935,  935,  935,  935,  935,  936,  395,
      936,  936,  936,  936,  936,  936,  394,  389,  936,  944,
      383,  944,  944,  944,  944,  944,  944,  944,  944,  948,
      381,  948,  948,  948,  948,  948,  948,  948,  948,  952,
      377,  952,  952,  952,  952,  952,  952,  952,  952,  952,
      373,  372,  371,  364,  952,  952,  357,  350,  349,  342,
      340,  332,  330,  952,  952,  952,  952,  952,  953,  953,

      953,  953,  953,  953,  953,  953,  959,  959,  959,  959,
      959,  959,  959,  959,  959,  959,  963,  329,  963,  963,
      963,  963,  963,  963,  963,  963,  967,  327,  967,  967,
      967,  967,  967,  967,  967,  967,  980,  325,  980,  980,
      980,  980,  980,  980,  992,  992,  992,  992,  992,  992,
      992,  992,  992,  324,  319,  315,  311,  992,  992,  310,
      309,  290,  289,  288,  282,  280,  992,  992,  992,  992,
      992,  993,  279,  993,  993,  993,  993,  993,  993,  993,
      993,  993,  278,  270,  268,  267,  993,  993,  266,  264,
      263,  258,  257,  256,  249,  993,  993,  993,  993,  993,

      994,  994,  994,  994,  994,  994,  994,  994,  999,  242,
      999,  999,  999,  999,  999,  999,  999,  999,  999,  241,
      240,  236,  234,  999,  999,  233,  232,  228,  220,  218,
      217,  213,  999,  999,  999,  999,  999, 1000, 1000, 1000,
     1000, 1000, 1000, 1000, 1000, 1006,  212, 1006, 1006, 1006,
     1006, 1006, 1006, 1006, 1006, 1006,  200,  199,  198,  197,
     1006, 1006,  195,  194,  192,  191,  190,  189,  188, 1006,
     1006, 1006, 1006, 1006, 1007, 1007, 1007, 1007, 1007, 1007,
     1007, 1007, 1013,  187, 1013, 1013, 1013, 1013, 1013, 1013,
     1013, 1013, 1013,  186,  183,  174,  172, 1013, 1013,  168,

      167,  166,  159,  158,  156,  155, 1013, 1013, 1013, 1013,
     1013, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1020,
      153, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020,
      151,  150,  149,  148, 1020, 1020,  147,  146,  145,  143,
      142,  140,  139, 1020, 1020, 1020, 1020, 1020, 1021, 1021,
     1021, 1021, 1021, 1021, 1021, 1021, 1032,  138, 1032, 1032,
     1032, 1032, 1032, 1032, 1037,  129, 1037, 1037, 1037, 1037,
     1037, 1037, 1041,  128, 1041, 1041, 1041, 1041, 1041, 1041,
     1041, 1041, 1041,  123,  122,  121,  119, 1041, 1041,  117,
      116,  112,  111,  110,  109,  108, 1041, 1041, 1041, 1041,

     1041, 1042, 1042, 1042, 1042, 1042, 1042, 1042, 1042,  107,
      105,  104,  103,  102, 1042, 1042,  101,   97,   95,   89,
       88,   87,   84, 1042, 1042, 1042, 1042, 1042, 1044, 1044,
     1044, 1044, 1044, 1044, 1044, 1044, 1045,   83, 1045, 1045,
     1045, 1045, 1045, 1045,   81, 1054, 1045, 1054, 1054, 1054,
     1054, 1054, 1054, 1059,   79, 1059, 1059, 1059, 1059, 1059,
     1059, 1068,   76, 1068, 1068, 1068, 1068, 1068, 1068, 1068,
     1068, 1079,   75, 1079, 1079, 1079, 1079, 1079, 1079, 1079,
     1079, 1079,   74,   73,   72,   70, 1079, 1079,   69,   68,
       67,   66,   65,   64,   63, 1079, 1079, 1079, 1079, 1079,

     1080, 1080, 1080, 1080, 1080, 1080, 1080, 1080, 1084,   62,
     1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084, 1084,   61,
       60,   59,   49, 1084, 1084,   48,   43,   40,   39,   38,
       37,   36, 1084, 1084, 1084, 1084, 1084, 1087, 1087, 1087,
     1087, 1087, 1087, 1087, 1087, 1088,   35, 1088, 1088, 1088,
     1088, 1088, 1088,   33,   32, 1088, 1091,   31, 1091, 1091,
     1091, 1091, 1091, 1091, 1091, 1091, 1091,   30,   29,   27,
       26, 1091, 1091,   23,   22,   21,   19,    9,    7,    5,
     1091, 1091, 1091, 1091, 1091, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1095,    0, 1095, 1095, 1095, 1095, 1095,

     1095,    0,    0, 1095, 1098,    0, 1098, 1098, 1098, 1098,
     1098, 1098, 1098, 1098, 1098,    0,    0,    0,    0, 1098,
     1098,    0,    0,    0,    0,    0,    0,    0, 1098, 1098,
     1098, 1098, 1098, 1101, 1101, 1101, 1101, 1101, 1101, 1101,
     1101, 1102,    0, 1102, 1102, 1102, 1102, 1102, 1102,    0,
        0, 1102, 1105,    0, 1105, 1105, 1105, 1105, 1105, 1105,
     1105, 1105, 1105,    0,    0,    0,    0, 1105, 1105,    0,
        0,    0,    0,    0,    0,    0, 1105, 1105, 1105, 1105,
     1105, 1108, 1108, 1108, 1108, 1108, 1108, 1108, 1108, 1109,
        0, 1109, 1109, 1109, 1109, 1109, 1109,    0,    0, 1109,

     1112,    0, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
     1112,    0,    0,    0,    0, 1112, 1112,    0,    0,    0,
        0,    0,    0,    0, 1112, 1112, 1112, 1112, 1112, 1115,
     1115, 1115, 1115, 1115, 1115, 1115, 1115, 1116,    0, 1116,
     1116, 1116, 1116, 1116, 1116,    0,    0, 1116, 1124,    0,
     1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1128,    0,
     1128, 1128, 1128, 1128, 1128, 1128, 1128, 1128, 1132,    0,
     1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132, 1132,    0,
        0,    0,    0, 1132, 1132,    0,    0,    0,    0,    0,
        0,    0, 1132, 1132, 1132, 1132, 1132, 1133, 1133, 1133,

     1133, 1133, 1133, 1133, 1133, 1139, 1139, 1139, 1139, 1139,
     1139, 1139, 1139, 1139, 1139, 1143,    0, 1143, 1143, 1143,
     1143, 1143, 1143, 1143, 1143, 1151,    0, 1151, 1151, 1151,
     1151, 1151, 1151, 1155,    0, 1155, 1155, 1155, 1155, 1155,
     1155, 1155, 1155, 1155,    0,    0,    0,    0, 1155, 1155,
        0,    0,    0,    0,    0,    0,    0, 1155, 1155, 1155,
     1155, 1155, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
     1159,    0, 1159, 1159, 1159, 1159, 1159, 1159,    0, 1189,
     1159, 1189, 1189, 1189, 1189, 1189, 1189, 1194,    0, 1194,
     1194, 1194, 1194, 1194, 1194, 1198,    0, 1198, 1198, 1198,

     1198, 1198, 1198, 1198, 1198, 1198,    0,    0,    0,    0,
     1198, 1198,    0,    0,    0,    0,    0,    0,    0, 1198,
     1198, 1198, 1198, 1198, 1201, 1201, 1201, 1201, 1201, 1201,
     1201, 1201, 1202,    0, 1202, 1202, 1202, 1202, 1202, 1202,
        0, 1211, 1202, 1211, 1211, 1211, 1211, 1211, 1211, 1215,
     1215, 1215, 1215, 1215, 1215, 1215, 1215, 1215, 1215, 1219,
        0, 1219, 1219, 1219, 1219, 1219, 1219, 1219, 1219, 1243,
        0, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1243, 1247,
        0, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1247, 1255,
     1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1255, 1265,

        0, 1265, 1265, 1265, 1265, 1265, 1265, 1282,    0, 1282,
     1282, 1282, 1282, 1282, 1282, 1287,    0, 1287, 1287, 1287,
     1287, 1287, 1287, 1297,    0, 1297, 1297, 1297, 1297, 1297,
     1297, 1297, 1297, 1313,    0, 1313, 1313, 1313, 1313, 1313,
     1313, 1313, 1313, 1321,    0, 1321, 1321, 1321, 1321, 1321,
     1321, 1330,    0, 1330, 1330, 1330, 1330, 1330, 1330, 1353,
     1353, 1353, 1353, 1353, 1353, 1353, 1353, 1355,    0, 1355,
     1355, 1355, 1355, 1355, 1355, 1356, 1356, 1356, 1357, 1357,
     1357, 1359,    0, 1359, 1360,    0, 1360, 1361, 1361, 1361,
     1362, 1362, 1362, 1365,    0, 1365, 1366,    0, 1366, 1366,

     1367, 1367, 1367, 1368, 1368, 1368, 1369, 1369, 1369, 1371,
        0, 1371, 1372,    0, 1372, 1373, 1373, 1373, 1374, 1374,
     1374, 1375, 1375, 1375, 1377,    0, 1377, 1378,    0, 1378,
     1379, 1379, 1379, 1379, 1379, 1381,    0, 1381, 1382, 1382,
     1382, 1383, 1383, 1383, 1384, 1384, 1384, 1384, 1384, 1385,
     1385, 1385, 1386, 1386, 1386, 1388,    0, 1388, 1389, 1389,
     1389, 1390, 1390, 1390, 1391, 1391, 1391, 1392, 1392, 1392,
     1393, 1393, 1393, 1394, 1394, 1394, 1395, 1395, 1395, 1396,
        0, 1396, 1397,    0, 1397, 1398,    0, 1398, 1399,    0,
     1399, 1400, 1400, 1400, 1400, 1400, 1401, 1401, 1401, 1402,

     1402, 1402, 1403, 1403, 1403, 1404, 1404, 1404, 1404, 1404,
     1405, 1405, 1405, 1405, 1405, 1406, 1406, 1406, 1407, 1407,
     1407, 1408, 1408, 1408, 1410, 1410, 1410, 1412,    0, 1412,
     1413,    0, 1413, 1415,    0, 1415, 1416,    0, 1416, 1417,
        0,    0, 1417,    0, 1417, 1420, 1420, 1420, 1421, 1421,
     1421, 1422, 1422, 1422, 1423, 1423, 1423, 1424, 1424, 1424,
     1425,    0, 1425, 1426,    0, 1426, 1427,    0, 1427, 1427,
     1427, 1428, 1428, 1428, 1429, 1429, 1429, 1430, 1430, 1430,
     1431,    0, 1431, 1432,    0, 1432, 1433,    0, 1433, 1434,
        0, 1434, 1435, 1435, 1435, 1435, 1435, 1436,    0,    0,

     1436,    0, 1436, 1437,    0, 1437, 1438,    0, 1438, 1439,
     1439, 1439, 1440, 1440, 1440, 1441, 1441, 1441, 1441, 1441,
     1442, 1442, 1442, 1442, 1442, 1443, 1443, 1443, 1443, 1443,
     1444, 1444, 1444, 1445, 1445, 1445, 1446, 1446, 1446, 1447,
        0, 1447, 1447, 1447, 1448, 1448, 1448, 1450,    0, 1450,
     1451,    0, 1451, 1453, 1453, 1453, 1454, 1454, 1454, 1455,
     1455, 1455, 1457,    0, 1457, 1458,    0, 1458, 1460,    0,
     1460, 1461,    0, 1461, 1463,    0, 1463, 1464,    0, 1464,
     1465, 1465, 1465, 1466, 1466, 1466, 1467, 1467, 1467, 1468,
     1468, 1468, 1469, 1469, 1469, 1470, 1470, 1470, 1471,    0,

     1471, 1472,    0, 1472, 1473,    0, 1473, 1474,    0, 1474,
     1475,    0, 1475, 1475, 1475, 1476, 1476, 1476, 1477, 1477,
     1477, 1478, 1478, 1478, 1479,    0, 1479, 1480,    0, 1480,
     1481,    0, 1481, 1482,    0, 1482, 1483, 1483, 1483, 1483,
     1483, 1484,    0, 1484, 1485,    0, 1485, 1486, 1486, 1486,
     1487, 1487, 1487, 1487, 1487, 1488, 1488, 1488, 1488, 1488,
     1489, 1489, 1489, 1489, 1489, 1490, 1490, 1490, 1490, 1490,
     1491, 1491, 1491, 1492, 1492, 1492, 1493, 1493, 1493, 1494,
        0, 1494, 1494, 1494, 1495, 1495, 1495, 1496,    0, 1496,
     1496, 1496, 1497, 1497, 1497, 1499,    0, 1499, 1500,    0,

     1500, 1502,    0, 1502, 1503,    0, 1503, 1505, 1505, 1505,
     1506, 1506, 1506, 1507, 1507, 1507, 1509,    0, 1509, 1510,
        0, 1510, 1512,    0, 1512, 1513,    0, 1513, 1515,    0,
     1515, 1516,    0, 1516, 1517, 1517, 1517, 1518, 1518, 1518,
        0, 1518, 1519, 1519, 1519, 1520,    0, 1520, 1521,    0,
     1521, 1522,    0, 1522, 1523,    0, 1523, 1524,    0, 1524,
     1525, 1525, 1525, 1526, 1526, 1526, 1527, 1527, 1527, 1528,
     1528, 1528, 1529, 1529, 1529, 1533,    0, 1533, 1534,    0,
     1534, 1535,    0, 1535, 1536,    0, 1536, 1537,    0, 1537,
     1537, 1537, 1538, 1538, 1538, 1539, 1539, 1539, 1540, 1540,

     1540, 1541,    0, 1541, 1542,    0, 1542, 1543,    0, 1543,
     1544,    0, 1544, 1545, 1545, 1545, 1545, 1545, 1546,    0,
     1546, 1547,    0, 1547, 1549, 1549, 1549, 1550, 1550, 1550,
     1551, 1551, 1551,    0, 1551, 1552, 1552, 1552, 1552, 1552,
     1553, 1553, 1553,    0, 1553, 1554, 1554, 1554, 1554, 1554,
     1555, 1555, 1555,    0, 1555, 1556, 1556, 1556, 1556, 1556,
     1557, 1557, 1557,    0, 1557, 1558, 1558, 1558, 1558, 1558,
     1559, 1559, 1559,    0, 1559, 1560, 1560, 1560, 1560, 1560,
     1561, 1561, 1561,    0, 1561, 1562, 1562, 1562, 1563, 1563,
     1563, 1564, 1564, 1564, 1565,    0, 1565, 1565, 1565, 1566,

     1566, 1566, 1567,    0, 1567, 1567, 1567, 1568, 1568, 1568,
     1569,    0, 1569, 1569, 1569, 1570, 1570, 1570, 1574,    0,
     1574, 1575,    0, 1575, 1577,    0, 1577, 1578,    0, 1578,
     1580, 1580, 1580, 1581, 1581, 1581, 1582, 1582, 1582, 1584,
        0, 1584, 1585,    0, 1585, 1587,    0, 1587, 1588,    0,
     1588, 1589,    0, 1589, 1591,    0, 1591, 1592,    0, 1592,
     1593,    0, 1593, 1594,    0, 1594, 1595,    0, 1595, 1595,
     1595, 1596, 1596, 1596,    0, 1596, 1597, 1597, 1597,    0,
     1597, 1598, 1598, 1598,    0, 1598, 1599, 1599, 1599,    0,
     1599, 1600, 1600, 1600,    0, 1600, 1601, 1601, 1601,    0,

     1601, 1602, 1602, 1602,    0, 1602, 1603, 1603, 1603, 1604,
     1604, 1604, 1605, 1605, 1605, 1606, 1606, 1606, 1607, 1607,
     1607, 1608, 1608, 1608, 1612,    0, 1612, 1613,    0, 1613,
     1614,    0, 1614, 1615,    0, 1615, 1616,    0, 1616, 1616,
     1616, 1617, 1617, 1617, 1618, 1618, 1618, 1619, 1619, 1619,
     1620,    0, 1620, 1621,    0, 1621, 1622,    0, 1622, 1623,
        0, 1623, 1624, 1624, 1624, 1624, 1624, 1625, 1625, 1625,
        0, 1625, 1630,    0, 1630, 1631,    0, 1631, 1632, 1632,
     1632,    0, 1632, 1633, 1633, 1633,    0, 1633, 1634, 1634,
     1634,    0, 1634, 1635, 1635, 1635,    0, 1635, 1636, 1636,

     1636,    0, 1636, 1637, 1637, 1637,    0, 1637, 1638, 1638,
     1638,    0, 1638, 1639, 1639, 1639, 1640, 1640, 1640, 1641,
        0, 1641, 1641, 1641, 1642, 1642, 1642, 1643,    0, 1643,
     1643, 1643, 1644, 1644, 1644, 1645,    0, 1645, 1645, 1645,
     1646, 1646, 1646, 1647,    0, 1647, 1647, 1647, 1648, 1648,
     1648, 1652,    0, 1652, 1653,    0, 1653, 1655,    0, 1655,
     1656,    0, 1656, 1658, 1658, 1658, 1659, 1659, 1659, 1660,
     1660, 1660, 1662,    0, 1662, 1663,    0, 1663, 1665,    0,
     1665, 1666,    0, 1666, 1667, 1667, 1667,    0, 1667, 1670,
        0, 1670, 1671,    0, 1671, 1672, 1672, 1672,    0, 1672,

     1673, 1673, 1673, 1674,    0, 1674, 1675, 1675, 1675, 1676,
        0, 1676, 1677, 1677, 1677, 1678,    0, 1678, 1679, 1679,
     1679, 1680,    0, 1680, 1681, 1681, 1681, 1682,    0, 1682,
     1683, 1683, 1683, 1684,    0, 1684, 1685, 1685, 1685, 1689,
        0, 1689, 1690,    0, 1690, 1691,    0, 1691, 1692,    0,
     1692, 1693,    0, 1693, 1693, 1693, 1694, 1694, 1694, 1695,
     1695, 1695, 1696, 1696, 1696, 1697,    0, 1697, 1698,    0,
     1698, 1699, 1699, 1699,    0, 1699, 1701,    0, 1701, 1702,
        0, 1702, 1704, 1704, 1704, 1705, 1705, 1705, 1706,    0,
     1706, 1707,    0, 1707, 1707, 1707, 1708,    0, 1708, 1709,

        0, 1709, 1709, 1709, 1710,    0, 1710, 1711,    0, 1711,
     1711, 1711, 1712,    0, 1712, 1713,    0, 1713, 1713, 1713,
     1714,    0, 1714, 1715,    0, 1715, 1715, 1715, 1716,    0,
     1716, 1720,    0, 1720, 1721,    0, 1721, 1723,    0, 1723,
     1724,    0, 1724, 1726,    0, 1726, 1727, 1727, 1727, 1728,
     1728, 1728, 1729, 1729, 1729, 1731,    0, 1731, 1732,    0,
     1732, 1733, 1733, 1733, 1734, 1734, 1734, 1735,    0, 1735,
     1736,    0, 1736, 1737,    0, 1737, 1737, 1737, 1738,    0,
     1738, 1739,    0, 1739, 1740,    0, 1740, 1741,    0, 1741,
     1742,    0, 1742, 1743,    0, 1743, 1744,    0, 1744, 1748,

        0, 1748, 1749,    0, 1749, 1750,    0, 1750, 1751,    0,
     1751, 1752,    0, 1752, 1752, 1752, 1753,    0, 1753, 1754,
     1754, 1754, 1755, 1755, 1755, 1756, 1756, 1756, 1758,    0,
     1758, 1759,    0, 1759, 1760,    0, 1760, 1761,    0, 1761,
     1762,    0, 1762, 1763,    0, 1763, 1764,    0, 1764, 1765,
        0, 1765, 1768,    0, 1768, 1770,    0, 1770, 1771,    0,
     1771, 1772, 1772, 1772, 1773,    0, 1773, 1774,    0, 1774,
     1775,    0, 1775, 1779,    0, 1779, 1780,    0, 1780, 1781,
        0, 1781, 1783,    0, 1783, 1786,    0, 1786, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,

     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1352
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "policy.l"
#define INITIAL 0
#line 2 "policy.l"

#include "policy_module.h"
#include "libxorp/xorp.h"

#include "policy/common/policy_utils.hh"
#include <vector>
#include <string>
#include <sstream>
#include "policy_parser.hh"
#include "yacc.yy_policy_parser.cc.h"

#define yylval yy_policy_parserlval
#define yyerror yy_policy_parsererror
#define yyparse yy_policy_parserparse

void yyerror(const char *m);
extern int yyparse(void);

using namespace policy_parser;

// instantiate the globals here.
vector<Node*>* policy_parser::_parser_nodes;
unsigned policy_parser::_parser_lineno;

// try not to pollute
namespace {
	string _last_error;
	Term::BLOCKS _block;
}

#define YY_NO_UNPUT 1
#define YY_NEVER_INTERACTIVE 1
#define STR 1

#line 2609 "lex.yy_policy_parser.cc"

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

#line 62 "policy.l"


#line 2763 "lex.yy_policy_parser.cc"

	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1353 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 7389 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 64 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINTRANGE;
		}  
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 68 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINT;
		}  
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 72 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_INT;
		}  
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 76 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 80 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 84 "policy.l"
BEGIN(STR);
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 86 "policy.l"
BEGIN(INITIAL);
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 88 "policy.l"
{ yylval.c_str = strdup(yytext); 
		  _parser_lineno += policy_utils::count_nl(yytext);
		  /* XXX: a string can be started with " but terminated with '
		   * and vice versa...
		   */ 
		  return YY_STR;
		}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 96 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4RANGE;
		}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 101 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4;
		}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 106 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4NET;
		}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 112 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6RANGE;
		}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 117 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6;
		}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 122 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6NET;
		}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 127 "policy.l"
{
		  // the colon is an alias for asignment in action and equality
		  // in the source / dest blocks.
		  if (_block == Term::ACTION)
		  	return YY_ASSIGN;
		  else
		  	return YY_EQ;
		}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 136 "policy.l"
return YY_LPAR;
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 137 "policy.l"
return YY_RPAR;
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 139 "policy.l"
return YY_EQ; 
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 140 "policy.l"
return YY_NE;
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 141 "policy.l"
return YY_LE;
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 142 "policy.l"
return YY_GE;
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 143 "policy.l"
return YY_LT;
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 144 "policy.l"
return YY_GT;
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 146 "policy.l"
return YY_IPNET_EQ;
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 147 "policy.l"
return YY_IPNET_LT;
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 148 "policy.l"
return YY_IPNET_GT;
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 149 "policy.l"
return YY_IPNET_LE;
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 150 "policy.l"
return YY_IPNET_GE;
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 152 "policy.l"
return YY_AND;
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 153 "policy.l"
return YY_OR;
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 154 "policy.l"
return YY_XOR;
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 155 "policy.l"
return YY_NOT;
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 157 "policy.l"
return YY_ADD;
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 158 "policy.l"
return YY_ADD;
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 159 "policy.l"
return YY_SUB;
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 160 "policy.l"
return YY_MUL;
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 161 "policy.l"
return YY_ASSIGN;
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 163 "policy.l"
return YY_HEAD;
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 164 "policy.l"
return YY_CTR;
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 165 "policy.l"
return YY_NE_INT;
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 167 "policy.l"
return YY_ACCEPT;
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 168 "policy.l"
return YY_REJECT;
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 170 "policy.l"
return YY_SET;
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 171 "policy.l"
return YY_REGEX;
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 173 "policy.l"
return YY_PROTOCOL;
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 175 "policy.l"
{ yylval.c_str = strdup(yytext);
					  return YY_ID;
					}  
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 179 "policy.l"
return YY_SEMICOLON;
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 181 "policy.l"
/* eat blanks */
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 183 "policy.l"
_parser_lineno++;
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 185 "policy.l"
{ yyerror("Unknown character"); }
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 187 "policy.l"
ECHO;
	YY_BREAK
#line 3144 "lex.yy_policy_parser.cc"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(STR):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1353 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1353 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1352);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;


	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 187 "policy.l"


void yyerror(const char *m)
{
        ostringstream oss;
        oss << "Error on line " <<  _parser_lineno << " near (";

	for(int i = 0; i < yyleng; i++)
		oss << yytext[i];
	oss << "): " << m;

        _last_error = oss.str();
}

// Everything is put in the lexer because of YY_BUFFER_STATE...
int 
policy_parser::policy_parse(vector<Node*>& outnodes, const Term::BLOCKS& block, 
			    const string& conf, string& outerr)
{

        YY_BUFFER_STATE yybuffstate = yy_scan_string(conf.c_str());

        _last_error = "No error";
        _parser_nodes = &outnodes;
        _parser_lineno = 1;
	_block = block;

        int res = yyparse();
        
        yy_delete_buffer(yybuffstate);
        outerr = _last_error;
        
        return res;
}
