#define yy_create_buffer yy_policy_parser_create_buffer
#define yy_delete_buffer yy_policy_parser_delete_buffer
#define yy_scan_buffer yy_policy_parser_scan_buffer
#define yy_scan_string yy_policy_parser_scan_string
#define yy_scan_bytes yy_policy_parser_scan_bytes
#define yy_flex_debug yy_policy_parser_flex_debug
#define yy_init_buffer yy_policy_parser_init_buffer
#define yy_flush_buffer yy_policy_parser_flush_buffer
#define yy_load_buffer_state yy_policy_parser_load_buffer_state
#define yy_switch_to_buffer yy_policy_parser_switch_to_buffer
#define yyin yy_policy_parserin
#define yyleng yy_policy_parserleng
#define yylex yy_policy_parserlex
#define yyout yy_policy_parserout
#define yyrestart yy_policy_parserrestart
#define yytext yy_policy_parsertext

#line 19 "lex.yy_policy_parser.cc"
/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header$
 * $FreeBSD: src/usr.bin/lex/flex.skl,v 1.4 1999/10/27 07:56:44 obrien Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include <unistd.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t )) __unused;
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)


#define yywrap() 1
#define YY_SKIP_YYWRAP
typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 56
#define YY_END_OF_BUFFER 57
static yyconst short int yy_accept[1364] =
    {   0,
        0,    0,    0,    0,   57,   55,   53,   54,   55,    6,
       16,   17,   25,   24,   26,    2,    2,    2,   15,   52,
       22,   27,   23,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
        8,    7,   53,   19,   28,    3,   29,    0,    2,    0,
        0,    2,    2,    2,   13,   20,   18,   21,   51,   51,
       51,   51,   51,   51,   51,   51,   51,   51,   51,   51,
       51,   51,   36,   51,   51,   51,   51,   51,   51,   51,
        8,    0,    0,    0,    0,    2,    0,    0,   13,    2,
        2,    0,    0,   13,   13,   13,   13,   51,   51,   46,

       51,   39,   35,   42,   51,   51,   51,   51,   51,   51,
       38,   51,   51,   51,   51,   51,   51,   40,   51,   37,
        1,    0,    0,    0,    0,    0,    2,    0,    0,    0,
       13,   13,   13,   13,    0,    0,   14,   14,    0,   13,
        0,   13,   13,   13,   13,   51,   51,   51,   51,   51,
       41,   51,   51,   49,   51,   51,   51,   51,   51,   51,
        4,    0,    0,    0,    0,    2,    0,    0,   13,   13,
        0,   13,   13,   13,   13,    0,    0,   14,   14,   14,
        0,    0,    0,   13,   13,   13,   13,   13,   13,   13,
       47,   51,   30,    5,   51,   51,   51,   51,   51,   51,

       51,   51,    0,    0,    0,    0,    0,    0,    0,    0,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,    0,    0,   12,   14,    0,    0,    0,    0,    0,
       13,    0,   13,    0,   13,   13,   13,   13,   44,   31,
       43,   51,   51,   50,   51,   45,   51,   10,   10,   10,
        0,    0,    0,   13,   13,    0,   13,   13,   13,   13,
       13,   13,    0,   13,   13,   13,   13,    0,    0,   12,
       12,   12,   12,   12,    0,    0,    0,    0,    0,    0,
        0,   13,   13,   13,   13,   13,   13,   13,   51,   51,
       51,   32,    0,    0,   10,   10,   10,   10,    0,    0,

        0,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
        0,    0,   12,   12,   12,   12,    0,   12,    0,   12,
       12,   12,   12,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   13,    0,   13,    0,   13,   13,   13,
       13,   33,   51,   48,    0,   11,   11,   11,   10,    0,
        0,   13,   13,    0,   13,   13,   13,   13,   13,   13,
        0,   13,   13,   13,   13,   13,   13,    0,   13,   13,
       13,   13,    0,    0,   12,   12,    0,   12,   12,   12,
       12,    0,    0,    0,   12,   12,   12,   12,   12,   12,

       12,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,    0,   13,   13,   13,   13,   13,   13,   13,   34,
        0,    0,    0,    0,    0,    0,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,    0,    0,    0,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,    0,    0,    0,    0,    0,
       12,    0,   12,    0,   12,   12,   12,   12,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   13,    0,   13,    0,   13,   13,   13,   13,

        0,    0,    0,    0,    0,    0,    0,   13,   13,    0,
       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,   13,   13,    0,   13,   13,   13,   13,   13,   13,
        0,   13,   13,   13,   13,    0,    0,   12,   12,    0,
       12,   12,   12,   12,   12,   12,    0,   12,   12,   12,
       12,    0,    0,    0,    0,    0,    0,    0,   12,   12,
       12,   12,   12,   12,   12,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,    0,    0,   13,   13,   13,
       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,    0,    0,    0,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   12,    0,   12,    0,   12,   12,
       12,   12,   13,   13,   13,   13,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   13,    0,   13,    0,
       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   13,    0,   13,    0,   13,   13,   13,

       13,   13,   13,    0,   13,   13,   13,   13,   13,   13,
        0,   13,   13,   13,   13,   13,   13,    0,   13,   13,
       13,   13,   13,   13,    0,   13,   13,   13,   13,    0,
        0,   12,   12,    0,   12,   12,   12,   12,   12,   12,
        0,   12,   12,   12,   12,   12,   12,    0,   12,   12,
       12,   12,   12,   12,   12,    0,    0,    0,    0,    0,
        0,    0,    0,   12,   12,   12,   12,   12,   12,   12,
       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,    0,   13,   13,   13,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    0,    0,    0,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   12,    0,   12,    0,   12,   12,
       12,   12,   13,   13,   13,   13,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,   13,    0,   13,    0,
       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,   13,   13,    0,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,    0,    0,
       12,   12,    0,   12,   12,   12,   12,   12,   12,    0,
       12,   12,   12,   12,   12,   12,    0,   12,   12,   12,
       12,   12,   12,    0,   12,   12,   12,   12,   12,   12,
       12,   12,    0,    0,    0,    0,    0,    0,    0,    0,
       12,   12,   12,   12,   12,   12,   12,   13,   13,   13,
       13,    0,    0,    0,    0,    0,    0,    0,    0,   13,
       13,   13,   13,    9,    9,    9,    0,    0,    0,    0,
        0,    0,    0,   13,   13,   13,   13,   13,   13,   13,

        0,    0,    0,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   12,
        0,   12,    0,   12,   12,   12,   12,   13,   13,   13,
       13,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   13,   13,    9,    9,    9,    9,    0,    0,    0,
        0,   13,   13,   13,   13,   13,   13,   13,    0,    0,
        0,    0,   12,    0,   12,    0,   12,   12,   12,   12,

       12,   12,    0,   12,   12,   12,   12,   12,   12,    0,
       12,   12,   12,   12,   12,   12,    0,   12,   12,   12,
       12,   12,   12,    0,   12,   12,   12,   12,   12,   12,
       12,   12,    0,    0,    0,    0,    0,    0,    0,    0,
       12,   12,   12,   12,   12,   12,   12,   13,   13,   13,
       13,    0,    0,    0,    0,    0,   13,    9,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,   12,    0,   12,    0,
       12,   12,   12,   12,   13,   13,   13,   13,    0,    0,
        0,    0,    0,   13,   13,   13,   13,    0,    0,    0,
        0,    0,    0,   12,   12,    0,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,    0,    0,    0,    0,    0,    0,    0,    0,   12,
       12,   12,   12,   13,   13,   13,   13,    0,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   12,

       12,   13,   13,   13,   13,   13,    0,    0,    0,    0,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,    0,    0,    0,    0,    0,   12,   13,    0,    0,
        0,    0,    0,   12,   12,   12,   12,    0,    0,    0,
        0,    0,   12,   12,   12,   12,    0,   12,   12,   12,
       12,    0,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,    0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    1,    1,    1,    1,    6,    7,
        8,    9,   10,    1,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   20,   20,   21,   22,   23,   24,
       25,   26,    1,    1,   27,   27,   27,   27,   28,   27,
       29,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   31,   32,   33,   30,   30,   30,   34,   30,   30,
        1,    1,    1,    1,   35,    1,   36,   37,   38,   39,

       40,   41,   42,   43,   44,   45,   30,   46,   30,   47,
       48,   49,   30,   50,   51,   52,   53,   30,   30,   54,
       55,   30,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst int yy_meta[56] =
    {   0,
        1,    1,    1,    1,    2,    2,    1,    1,    1,    1,
        3,    4,    5,    6,    6,    6,    6,    6,    6,    6,
        6,    7,    1,    1,    8,    1,    9,    9,    3,    3,
        3,    3,    3,    3,    3,    9,    9,    9,    9,    9,
        9,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3
    } ;

static yyconst short int yy_base[1719] =
    {   0,
        0,    0,   51,   53, 5164, 8692, 5159, 8692, 5135, 8692,
     8692, 8692, 8692, 5134, 5133,   48,   76,   63, 5126, 8692,
     5107, 5106, 5105,   87,  129, 5101, 5100,  114, 5075, 5072,
     5087, 5082, 5073,  114, 5070,   23, 5070,   57, 5044, 5045,
        0, 8692, 5090, 8692, 8692,  157, 8692,  167,  177, 5069,
     5068,  205,   91,  213,  223, 8692, 8692, 8692,    0,  251,
     5060, 5055, 5047, 5045, 5044, 5032, 5036, 5010, 5019, 5007,
      155, 5001,  109, 5006, 5003, 5005, 4999, 5009, 4992, 4994,
        0,  279, 5022,  289, 5019,  299, 5008, 5001,  329,    0,
     4995, 4994,  357,  367,  395,  238,  405,  413, 4977,    0,

     4964,    0,    0,    0, 4965, 4951, 4962, 4956, 4953, 4944,
        0, 4947, 4942, 4923, 4905, 4901, 4890,    0, 4899,    0,
      441,  449, 4926, 4925,  459, 4924,  188, 4913, 4910, 4909,
      467,  495,  266,  505, 4918, 4907,  513,  521,  531,  541,
      569,  599,  607,  617, 4897, 4877, 4839,   50, 4820, 4831,
        0, 4830, 4822,    0, 4821, 4819, 4826, 4815, 4824, 4809,
        0, 4839,  625, 4829, 4819,  189, 4782, 4781,  635,  665,
      693,  723,  731,  741, 4784, 4758, 4757, 8692,  747,  314,
     4766,  757, 4765,  190,  236,  767,  795,  344,  805,  264,
        0, 4724,    0,    0, 4725, 4722, 4729, 4720, 4714, 4730,

     4715, 4712,  813, 4731, 4730,  823, 4729, 4718, 4708, 4705,
      831,  859,  382,  869,  342,  380,  879,  907,  428,  917,
      426, 4704, 4697,  925, 8692,  953, 4691, 4682,  963, 4681,
      478,  971,  981, 1009, 1039, 1047, 1057, 4680,    0,    0,
        0, 4651, 4638,    0, 4627,    0, 4616,  146, 1065,  151,
     4653, 4642, 4641, 1075, 1105, 1133, 1163, 1171, 1181, 4641,
      480, 1189, 1217, 1247, 1255, 1265, 4638, 4627, 4620, 1271,
     1301, 1329,  556, 4604, 4605, 1339, 4604, 4603, 4602, 1349,
     4601,  554,  579, 1359, 1387,  650, 1397,  581, 4548, 4556,
     4549,    0, 4582, 1405,  194,  233, 1415,  261, 4571, 4570,

     4567, 1423, 1451,  680, 1461,  648,  678, 1471, 1499,  708,
     1509,  706,  778,  780, 1519, 1547,  846, 1557,  844, 4566,
     4542, 4541, 1567, 1595,  894, 4540, 1603, 1613, 1641, 4537,
     1669, 1679,  290, 1688, 4528, 4510, 1698, 4493, 1704, 4491,
     4490, 1714, 4472,  892, 1722, 1732, 1760, 1790, 1798, 1808,
     4454,    0, 4405,    0, 1814, 1822,  308, 8692,  339, 4432,
     4431, 1832, 1862, 1890, 1920, 1928, 1938, 4440,  935, 1946,
     1974, 2004, 2012, 2022, 4437,  937, 2030, 2058, 2088, 2096,
     2106, 4416, 4388, 4377, 2112, 2142, 2170, 4376, 2198, 2208,
      590, 4385, 2219, 4384,  992,  993, 2229, 2257, 1024, 4371,

      994,  378, 2267,  423, 4360, 4342, 2277, 4331, 4330, 4329,
     2287, 4328, 1022, 1085, 2297, 2325, 1120, 2335, 1087,    0,
     4325, 2345, 4304, 4276, 4265, 4264, 2355, 2383, 1148, 2393,
     1118, 1146, 2403, 2431, 1204, 2441, 1202, 1227, 1229, 2451,
     2479, 1286, 2489, 1284, 1312, 1314, 2499, 2527, 1374, 2537,
     1372, 4263, 4262, 4259, 2547, 2575, 1438, 4221, 1238, 1340,
     2585, 2613, 1486, 4219, 1436, 2621, 4210, 4194, 2631, 4176,
     4154, 2637, 2647, 2675, 4153, 2703, 2713, 1484,  484,  486,
     2724,  552, 2730, 4162, 4159, 2740, 4137, 2746, 4136, 4135,
     2756, 4134, 1530, 2764, 2774, 2802, 2832, 2840, 2850, 4131,

     2856, 4108, 4100, 2866, 4084, 4055, 4054, 2874, 2904, 2932,
     2962, 2970, 2980, 4057, 1532, 2988, 3016, 3046, 3054, 3064,
     4032, 1578, 3072, 3100, 3130, 3138, 3148, 4030, 1580, 3156,
     3184, 3214, 3222, 3232, 4029, 4018, 3994, 3238, 3268, 3296,
     3992, 3324, 3334, 1558, 3965, 3345, 3373, 3949, 3401, 3411,
     1614, 3924, 3422, 3888, 3886, 3850, 3432, 3848, 1625, 1626,
     3442, 3470, 1656, 3837, 1654,  586,  645, 3480,  676, 3802,
     3800, 3490, 3799, 3779, 3760, 3500, 3759, 1743, 1745, 3510,
     3538, 1775, 3548, 1773, 3758, 3558, 3757, 3754, 3721, 3696,
     3566, 3596, 3624, 1847, 3634, 1845, 1873, 3644, 3672, 1905,

     3682, 1875, 1903, 1957, 3692, 3720, 1989, 3730, 1959, 1987,
     2041, 3740, 3768, 2073, 3778, 2043, 2071, 2122, 3788, 3816,
     2157, 3826, 2124, 3694, 3693, 3673, 3836, 3864, 2185, 3648,
     2133, 2155, 3874, 3902, 2244, 3646, 2183, 2220, 2242, 3912,
     3940, 2312, 3645, 2278, 3948, 3635, 3618, 3958, 3616, 3964,
     3615, 3614, 3974, 3613, 3600, 3980, 3990, 4018, 3568, 4046,
     4056, 2310,  703,  784, 4067,  786, 4073, 3577, 3530, 4083,
     3529, 4089, 3528, 3527, 4099, 3463, 2366, 4107, 4117, 4145,
     4175, 4183, 4193, 3462, 4199, 3461, 3460, 4209, 3459, 3446,
     4217, 4245, 2418,  842, 3410, 4255,    0, 4285, 4293, 4303,

     3419, 2368, 4311,    0, 4341, 4349, 4359, 3412, 2416, 4367,
        0, 4397, 4405, 4415, 3396, 2462, 4423,    0, 4453, 4461,
     4471, 3394, 2464, 4479,    0, 4509, 4517, 4527, 3392, 3381,
     3380, 4533, 4563, 4591, 3377, 4619, 4629, 2336, 3357, 4640,
     4668, 3355, 4696, 4706, 2510, 3354, 4717, 4745, 3353, 4773,
     4783, 2511, 4792, 4800, 4808, 3362, 3346, 4818, 3343, 3342,
     3335, 4828, 3319, 2512, 2538, 4838, 4866, 2562, 3305, 2560,
      890,  942, 4876,  998, 3314, 3313, 4886, 3310, 3290, 3288,
     4896, 3287, 2596, 2598, 4906, 4934, 2662, 4944, 2660, 3286,
     4954, 3285, 3282, 3259, 4962, 4972, 3242, 3240, 5000, 5010,

     2648, 1000, 2685, 2687, 1019, 2785, 2787, 2812, 1092, 2814,
     2884, 2886, 1116, 2915, 2917, 2942, 1143, 2944, 2999, 3001,
     1200, 3026, 3239, 3238, 3223, 5021, 5049, 3087, 3205, 2823,
     2953, 5059, 5087, 3115, 3188, 3028, 3029, 3037, 5097, 5125,
     3171, 3186, 3085, 3113, 3169, 5135, 5163, 3199, 3185, 3197,
     5171, 5179, 3253, 8692, 5187, 3194, 3170, 5197, 3168, 5203,
     3167, 3149, 5213, 3131, 3104, 5219, 5229, 5257, 3102, 5285,
     5295, 3251, 1234, 1281, 5306, 1318, 5312, 3111, 3110, 5322,
     3086, 5328, 3084, 3083, 5338, 3065, 3279, 5346, 5356,    0,
     5386, 5394, 5404, 3035, 5410, 3034, 3033, 5420, 3030, 3010,

     5428, 3008, 3281, 3306, 1320, 1370, 3307, 1434, 3308, 1482,
     3356, 1536, 3358, 1538, 3383, 1584, 3385, 1586, 2997, 2971,
     5436, 5466, 5494, 2945, 5522, 5532, 3423, 2941, 5543, 5571,
     2936, 5599, 5609, 3443, 2916, 5620, 5648, 2887, 5676, 5686,
     3454, 2885, 5697, 5725, 2883, 5753, 5763, 3455, 8692, 5772,
     5780, 5788, 2888, 2867, 5798, 2851, 2825, 2821, 5808, 2816,
     3491, 3521, 5818, 5846, 3581, 2786, 3522, 1630, 1632, 5856,
     1651, 2765, 2757, 5866, 2741, 2714, 2698, 5876, 2696, 3523,
     3579, 1687, 3607, 5884, 5892, 5900, 2694, 5908, 2689, 2659,
     5918, 2632, 2597, 1749, 1751, 1770, 1842, 1879, 1881, 1900,

     2576, 2551, 5924, 5954, 5982, 3659, 2503, 3549, 3609, 5992,
     6020, 3707, 2480, 3657, 3705, 3751, 6030, 6058, 3803, 2463,
     3752, 3753, 3801, 6068, 6096, 3851, 2432, 3827, 3849, 3875,
     6106, 6134, 3889, 2384, 3887, 6142, 6150, 3927, 8692, 6158,
     2377, 2311, 6168, 2243, 6174, 2209, 2184, 6184, 2182, 2146,
     6190, 6200, 6228, 2125, 6256, 6266, 3913, 1963, 1965, 6277,
     1984, 6283, 2131, 2126, 6293, 2107, 6299, 2089, 2070, 6309,
     2052, 3925, 2047, 6315, 6323, 4005, 8692, 2023, 6333, 2005,
     1986, 2049, 2068, 2129, 2153, 2180, 2216, 2240, 1958, 6343,
     6371, 4033,    0, 1929, 6381,    0, 1911, 6409, 6419, 3991,

     1892, 6430,    0, 1874, 6458, 6468, 4003, 1834, 6479,    0,
     1799, 6507, 6517, 4031, 1781, 6528,    0, 1762, 6556, 6566,
     4128, 1744, 6577,    0, 1713, 6605, 6615, 4129, 8692, 6624,
     6632, 6640, 1715, 1699, 6650, 1680, 1655, 1653, 6660, 1634,
     4130, 4155, 6670, 6698, 4232, 1617, 4156, 2308, 2372, 6708,
     2374, 1589, 1541, 6718, 1510, 1485, 2414, 8692, 6726, 1462,
     1437, 6736, 1398, 1313, 6742, 6752, 1292, 1273, 6780, 6790,
     4157,    0, 4158, 4218,    0, 4230, 4266, 4267,    0, 4268,
     4322, 4323,    0, 4324, 4378, 4379,    0, 4380, 4434, 4435,
        0, 4436, 6799, 6807, 4494, 8692, 6815, 1266, 1240, 6825,

     1236, 6831, 1231, 1182, 6841, 1164, 1135, 6847, 6857,    0,
     1088, 6885, 6895, 4492, 2468, 2470, 6906, 2516, 6912, 1096,
     1094, 6922, 1089, 2518, 2558, 6930, 2602, 1058, 1040, 6940,
     1021, 4543, 4544,    0, 8692, 4545,    0,  985,    0,  962,
        0,  954,    0,  938,    0,  936,    0, 8692, 6948, 6956,
     6964,  944,  939, 6974,  918,  870,  824, 6984,  806, 4546,
     4564,    0, 4575, 2604, 2692, 6994, 2721,  789, 2791, 2793,
     7004, 2819, 7010,  758,  742, 7020,  724,  695,    0,    0,
        0,    0,    0,    0,    0, 7026, 7034, 4606, 8692, 7042,
      647,  626, 7052,  618, 7058,  592,  588, 7068,  583,  522,

        0, 2891, 2921, 7076, 2923, 2949,  506, 7084,  489,  460,
        0, 8692, 8692, 8692, 8692, 8692, 8692, 8692, 7092, 7100,
     7108,  425,  406, 7118,  341,  313,    0, 3005, 7126,  263,
      235, 7136,  196, 7142, 7150, 4655, 8692, 7158,  168,  101,
     7168,   71, 8692, 7174, 7182, 7190,   62, 8692, 7198, 7206,
     7214,   49, 7222, 7230, 4683, 8692, 7238, 7246, 4732, 8692,
     8692, 8692, 8692, 7267, 7271, 7279, 7283, 7287, 7293, 7296,
     7297, 7301, 7307, 7310, 7312, 7316, 7320, 7326, 7329, 7330,
     7334, 7338, 7344, 7347, 7350, 7356, 7357, 7361, 7367, 7371,
     7375, 7381, 7384, 7387, 7388, 7392, 7396, 7400, 7404, 7410,

     7413, 7416, 7419, 7422, 7428, 7429, 7433, 7439, 7445, 7449,
     7453, 7457, 7461, 7467, 7470, 7473, 7476, 7480, 7484, 7488,
     7492, 7496, 7500, 7506, 7509, 7512, 7516, 7522, 7525, 7528,
     7531, 7534, 7537, 7540, 7547, 7553, 7556, 7557, 7561, 7567,
     7573, 7579, 7583, 7587, 7591, 7597, 7601, 7607, 7610, 7611,
     7617, 7620, 7623, 7626, 7629, 7632, 7635, 7638, 7639, 7643,
     7647, 7651, 7655, 7659, 7665, 7668, 7671, 7674, 7677, 7681,
     7687, 7690, 7693, 7696, 7699, 7702, 7705, 7711, 7714, 7715,
     7721, 7727, 7733, 7739, 7743, 7747, 7751, 7757, 7761, 7767,
     7771, 7777, 7780, 7783, 7786, 7787, 7793, 7796, 7799, 7802,

     7805, 7808, 7811, 7814, 7815, 7821, 7825, 7829, 7833, 7837,
     7841, 7845, 7849, 7853, 7857, 7861, 7865, 7871, 7874, 7877,
     7880, 7883, 7887, 7893, 7896, 7899, 7902, 7905, 7908, 7911,
     7917, 7920, 7921, 7925, 7931, 7937, 7943, 7949, 7955, 7961,
     7967, 7973, 7979, 7985, 7991, 7995, 7999, 8003, 8009, 8013,
     8019, 8023, 8029, 8033, 8039, 8042, 8045, 8048, 8049, 8055,
     8058, 8061, 8064, 8067, 8070, 8071, 8077, 8080, 8083, 8086,
     8089, 8095, 8101, 8107, 8113, 8119, 8125, 8131, 8135, 8139,
     8143, 8147, 8151, 8155, 8161, 8164, 8167, 8170, 8173, 8177,
     8183, 8186, 8189, 8192, 8195, 8198, 8201, 8207, 8213, 8216,

     8219, 8225, 8231, 8237, 8243, 8249, 8255, 8259, 8263, 8269,
     8273, 8279, 8283, 8289, 8293, 8299, 8303, 8309, 8312, 8315,
     8318, 8319, 8325, 8328, 8331, 8334, 8337, 8340, 8343, 8349,
     8352, 8355, 8359, 8363, 8367, 8371, 8375, 8379, 8383, 8387,
     8391, 8395, 8399, 8403, 8407, 8413, 8416, 8419, 8422, 8425,
     8429, 8435, 8438, 8441, 8444, 8447, 8453, 8456, 8457, 8461,
     8465, 8471, 8475, 8481, 8485, 8491, 8495, 8501, 8505, 8511,
     8515, 8521, 8524, 8525, 8529, 8535, 8538, 8541, 8544, 8547,
     8550, 8553, 8557, 8561, 8565, 8569, 8573, 8577, 8581, 8587,
     8590, 8593, 8596, 8599, 8603, 8609, 8612, 8615, 8618, 8619,

     8623, 8627, 8631, 8635, 8639, 8643, 8649, 8652, 8653, 8659,
     8662, 8665, 8666, 8672, 8675, 8676, 8682, 8685
    } ;

static yyconst short int yy_def[1719] =
    {   0,
     1363,    1, 1364, 1364, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1365, 1363,   16,   17, 1363, 1363,
     1363, 1363, 1363, 1363,   24,   25,   25,   24,   24,   24,
       24,   25,   25,   25,   25,   25,   25,   25,   25,   25,
     1366, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1367,
     1368,   49,   52,   52, 1363, 1363, 1363, 1363,   25,   24,
       25,   25,   60,   60,   25,   25,   25,   60,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
     1366, 1363, 1369, 1363, 1370, 1363, 1371, 1372, 1363,   86,
       86, 1363, 1363, 1363,   94,   95,   95,   60,   25,   25,

       98,   98,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
     1363, 1363, 1370, 1373, 1363, 1363, 1374, 1363, 1375, 1376,
     1363,  131,  132,  132, 1363, 1377, 1363, 1363, 1363, 1363,
     1363,  140,  140,  142,  142,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25, 1378, 1363, 1379, 1363, 1374, 1380, 1381, 1363, 1363,
     1363,  170,  170,  172,  172, 1382, 1363, 1363, 1363, 1363,
     1383, 1363, 1384, 1385, 1385, 1363,  186,  187,  187, 1385,
       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,

       25,   25, 1363, 1379, 1386, 1363, 1363, 1363, 1387, 1388,
     1363,  211,  212,  212, 1389, 1389, 1363,  217,  218,  218,
     1389, 1390, 1391, 1363, 1363, 1363, 1384, 1392, 1363, 1363,
     1363, 1363, 1363, 1363,  233,  233,  235,  235,   25,   25,
       25,   25,   25,   25,   25,   25,   25, 1393, 1363, 1394,
     1363, 1395, 1396, 1363, 1363, 1363,  255,  255,  257,  257,
     1363, 1363, 1363,  262,  262,  264,  264, 1397, 1398, 1363,
     1363,  271,  272, 1399, 1400, 1363, 1401, 1363, 1402, 1363,
     1403, 1404, 1404, 1363,  284,  285,  285, 1404,   25,   25,
       25,   25, 1363, 1363, 1394, 1405, 1363, 1363, 1363, 1406,

     1407, 1363,  302,  303,  303, 1408, 1408, 1363,  308,  309,
      309, 1408, 1409, 1409, 1363,  315,  316,  316, 1409, 1363,
     1410, 1411, 1363,  323,  324, 1412, 1363, 1363, 1363, 1413,
      328, 1413, 1413, 1363, 1414, 1415, 1363, 1363, 1363, 1416,
     1417, 1363, 1363, 1363, 1363, 1363, 1363,  346,  346,  348,
      348, 1418, 1418, 1418, 1363, 1363, 1363, 1363, 1363, 1419,
     1420, 1363, 1363, 1363,  363,  363,  365,  365, 1363, 1363,
     1363,  370,  370,  372,  372, 1363, 1363, 1363,  377,  377,
      379,  379, 1421, 1422, 1363, 1363, 1363, 1423,  386, 1423,
     1423, 1424, 1363, 1425, 1426, 1426, 1363,  397,  398, 1427,

     1426, 1428, 1363, 1429, 1363, 1430, 1363, 1431, 1363, 1432,
     1363, 1433, 1434, 1434, 1363,  415,  416,  416, 1434, 1435,
     1436, 1363, 1437, 1363, 1438, 1439, 1363,  427,  428,  428,
     1440, 1440, 1363,  433,  434,  434, 1440, 1441, 1441, 1363,
      440,  441,  441, 1441, 1442, 1442, 1363,  447,  448,  448,
     1442, 1363, 1443, 1444, 1363,  455,  456, 1445, 1446, 1446,
     1363,  461,  462, 1447, 1446, 1363, 1448, 1449, 1363, 1363,
     1363, 1363, 1363, 1363, 1450,  473, 1450, 1450, 1451, 1452,
     1363, 1363, 1363, 1453, 1454, 1363, 1363, 1363, 1455, 1456,
     1363, 1363, 1363, 1363, 1363, 1363,  495,  495,  497,  497,

     1363, 1457, 1458, 1363, 1363, 1459, 1460, 1363, 1363, 1363,
      509,  509,  511,  511, 1363, 1363, 1363,  516,  516,  518,
      518, 1363, 1363, 1363,  523,  523,  525,  525, 1363, 1363,
     1363,  530,  530,  532,  532, 1461, 1462, 1363, 1363, 1363,
     1463,  539, 1463, 1463, 1363, 1363, 1363, 1464,  546, 1464,
     1464, 1465, 1363, 1466, 1363, 1467, 1363, 1468, 1469, 1469,
     1363,  561,  562, 1470, 1469, 1363, 1471, 1363, 1472, 1363,
     1473, 1363, 1474, 1363, 1475, 1363, 1476, 1477, 1477, 1363,
      580,  581,  581, 1477, 1478, 1363, 1479, 1363, 1363, 1480,
     1363, 1363,  592,  593,  593, 1481, 1481, 1363,  598,  599,

      599, 1481, 1482, 1482, 1363,  605,  606,  606, 1482, 1483,
     1483, 1363,  612,  613,  613, 1483, 1484, 1484, 1363,  619,
      620,  620, 1484, 1363, 1485, 1486, 1363,  627,  628, 1487,
     1488, 1488, 1363,  633,  634, 1489, 1488, 1490, 1490, 1363,
      640,  641, 1491, 1490, 1363, 1492, 1493, 1363, 1363, 1363,
     1494, 1495, 1363, 1363, 1363, 1363, 1363, 1363, 1496,  657,
     1496, 1496, 1497, 1498, 1363, 1363, 1363, 1499, 1500, 1363,
     1363, 1363, 1501, 1502, 1363, 1363, 1363, 1363, 1363, 1363,
      679,  679,  681,  681, 1363, 1503, 1504, 1363, 1363, 1505,
     1363,  691,  692, 1506, 1507, 1363, 1508,  696,  696,  698,

      698, 1363, 1363, 1509,  703,  703,  705,  705, 1363, 1363,
     1510,  710,  710,  712,  712, 1363, 1363, 1511,  717,  717,
      719,  719, 1363, 1363, 1512,  724,  724,  726,  726, 1513,
     1514, 1363, 1363, 1363, 1515,  733, 1515, 1515, 1363, 1363,
     1363, 1516,  740, 1516, 1516, 1363, 1363, 1363, 1517,  747,
     1517, 1517, 1363, 1363, 1363, 1363, 1518, 1363, 1519, 1363,
     1520, 1363, 1521, 1522, 1522, 1363,  766,  767, 1523, 1522,
     1363, 1524, 1363, 1525, 1363, 1526, 1363, 1527, 1363, 1528,
     1363, 1529, 1530, 1530, 1363,  785,  786,  786, 1530, 1531,
     1363, 1532, 1363, 1363, 1363, 1363, 1533, 1534,  796, 1534,

     1534, 1535, 1536, 1536, 1537, 1536, 1538, 1538, 1539, 1538,
     1540, 1540, 1541, 1540, 1542, 1542, 1543, 1542, 1544, 1544,
     1545, 1544, 1363, 1546, 1547, 1363,  826,  827, 1548, 1549,
     1549, 1363,  832,  833, 1550, 1549, 1551, 1551, 1363,  839,
      840, 1552, 1551, 1553, 1553, 1363,  846,  847, 1554, 1553,
     1363, 1363, 1363, 1363, 1363, 1555, 1556, 1363, 1363, 1363,
     1557, 1558, 1363, 1363, 1363, 1363, 1363, 1363, 1559,  867,
     1559, 1559, 1560, 1561, 1363, 1363, 1363, 1562, 1563, 1363,
     1363, 1363, 1564, 1565, 1363, 1363, 1363, 1363, 1363, 1566,
      889,  889,  891,  891, 1363, 1567, 1568, 1363, 1363, 1569,

     1363, 1570, 1571, 1571, 1572, 1363, 1571, 1573, 1363, 1574,
     1363, 1575, 1363, 1576, 1363, 1577, 1363, 1578, 1579, 1580,
     1363, 1363, 1363, 1581,  922, 1581, 1581, 1363, 1363, 1363,
     1582,  929, 1582, 1582, 1363, 1363, 1363, 1583,  936, 1583,
     1583, 1363, 1363, 1363, 1584,  943, 1584, 1584, 1363, 1363,
     1363, 1363, 1363, 1585, 1363, 1586, 1363, 1587, 1363, 1588,
     1589, 1589, 1363,  963,  964, 1590, 1589, 1363, 1591, 1363,
     1592, 1363, 1593, 1363, 1594, 1363, 1595, 1363, 1596, 1597,
     1597, 1598, 1597, 1363, 1363, 1363, 1363, 1363, 1599, 1600,
     1363, 1363, 1363, 1601, 1602, 1603, 1604, 1605, 1606, 1607,

     1363, 1608, 1363, 1363, 1004, 1005, 1609, 1610, 1610, 1363,
     1010, 1011, 1611, 1610, 1612, 1612, 1363, 1017, 1018, 1613,
     1612, 1614, 1614, 1363, 1024, 1025, 1615, 1614, 1616, 1616,
     1363, 1031, 1032, 1617, 1616, 1363, 1363, 1363, 1363, 1363,
     1618, 1619, 1363, 1363, 1363, 1620, 1621, 1363, 1363, 1363,
     1363, 1363, 1363, 1622, 1052, 1622, 1622, 1623, 1624, 1363,
     1363, 1363, 1625, 1626, 1363, 1363, 1363, 1627, 1628, 1363,
     1363, 1363, 1629, 1363, 1363, 1363, 1363, 1630, 1363, 1631,
     1363, 1632, 1363, 1363, 1363, 1363, 1363, 1363, 1633, 1363,
     1090, 1091, 1634, 1635, 1363, 1636, 1637, 1095, 1637, 1637,

     1363, 1363, 1638, 1639, 1102, 1639, 1639, 1363, 1363, 1640,
     1641, 1109, 1641, 1641, 1363, 1363, 1642, 1643, 1116, 1643,
     1643, 1363, 1363, 1644, 1645, 1123, 1645, 1645, 1363, 1363,
     1363, 1363, 1363, 1646, 1363, 1647, 1363, 1648, 1363, 1649,
     1650, 1650, 1363, 1143, 1144, 1651, 1650, 1363, 1652, 1363,
     1653, 1363, 1654, 1363, 1655, 1363, 1656, 1363, 1363, 1657,
     1658, 1363, 1363, 1363, 1363, 1363, 1659, 1660, 1166, 1660,
     1660, 1661, 1662, 1662, 1663, 1662, 1664, 1664, 1665, 1664,
     1666, 1666, 1667, 1666, 1668, 1668, 1669, 1668, 1670, 1670,
     1671, 1670, 1363, 1363, 1363, 1363, 1363, 1647, 1672, 1363,

     1363, 1363, 1649, 1673, 1363, 1363, 1363, 1363, 1363, 1674,
     1675, 1209, 1675, 1675, 1653, 1676, 1363, 1363, 1363, 1655,
     1677, 1363, 1363, 1363, 1678, 1363, 1679, 1363, 1680, 1363,
     1681, 1682, 1682, 1683, 1363, 1682, 1684, 1363, 1685, 1363,
     1686, 1363, 1687, 1363, 1688, 1363, 1689, 1363, 1363, 1363,
     1363, 1363, 1690, 1363, 1691, 1363, 1692, 1363, 1693, 1694,
     1694, 1695, 1694, 1363, 1696, 1363, 1697, 1363, 1679, 1698,
     1363, 1363, 1363, 1681, 1699, 1363, 1363, 1363, 1700, 1701,
     1702, 1703, 1704, 1705, 1706, 1363, 1363, 1363, 1363, 1363,
     1691, 1707, 1363, 1363, 1363, 1693, 1708, 1363, 1363, 1363,

     1709, 1697, 1710, 1363, 1363, 1363, 1711, 1363, 1712, 1363,
     1713, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1714, 1363, 1715, 1363, 1716, 1363, 1363, 1712,
     1717, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1715, 1718,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363,    0, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,

     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,

     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,

     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,

     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363
    } ;

static yyconst short int yy_nxt[8748] =
    {   0,
        6,    7,    8,    9,   10,   10,   11,   12,   13,   14,
       15,    6,    6,   16,   16,   17,   18,   18,   18,   18,
       18,   19,   20,   21,   22,   23,   24,   24,   25,   25,
       26,   27,   25,   25,    6,   28,   24,   29,   24,   30,
       31,   25,   32,   25,   25,   33,   34,   35,   36,   37,
       38,   39,   25,   40,   25,   42,   42,   42,   42,   48,
     1338,   49,   49,   49,   49,   49,   49,   49,   49,   50,
       74,   50,   75, 1329,   51,   51,   54,   54,   54,   54,
       54,   54, 1338,   51,   51,   51,   51,   51,   51,   52,
       52,   52,   52,   52,   53,   54,   54,   59,  192,   77,

       60,   60,   60,   60,   60,   60,   60,   60,   50,   78,
       91,   91, 1338,   60,   60,   59,   59,   59,   59,   59,
       59,   59,   60,   60,   60,   60,   60,   60,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
       59,   59,   59,   59,   59,   59,   59,   59,   59,   59,
     1363,   63,   64,   71,  112,   59,   59,  293,  294,  113,
       65,   72,  293,  294,   59,   59,   59,   59,   59,   59,
       46,   46,   46,   46,   46,   46,   46,   46,   82, 1338,
       83,   83,   84,   85,   85,   85,   85,   85,   48,  109,
       86,   86,   86,   86,   86,   86,   86,   86,   50,  135,

      135,  139,   93,   87,   87,  293,  294, 1329,  110,   50,
     1363,  141,   87,   87,   87,   87,   87,   87,   90,   90,
       90,   90,   90,   90,   90,   90,   91,   91,   91,   91,
       91,   91,   91,   91,   92,   93,   94,   94,   95,   96,
       96,   96,   96,   96,  293,  294, 1329,   92,   93,   97,
       97,  145,  145,  145,  145,  145,  145,  141,   97,   97,
       97,   97,   97,   97,   98,   98,   98,   98,   98,   98,
       98,   98,  293,  294, 1329,  139,   93,   98,   98,  175,
      175,  175,  175,  175,  175,  141,   98,   98,   98,   98,
       98,   98,  121,  121,  121,  121,  121,  121,  121,  121,

      122,  327,  124,  124,  124,  124,  124,  125,  126,  126,
       48,  329,  127,  127,  127,  127,  127,  127,  127,  127,
       50,  358,  358,  358, 1295,  128,  128,  225,  225,  225,
      225,  225,  225,  225,  128,  128,  128,  128,  128,  128,
       92,   93,  131,  131,  132,  133,  133,  133,  133,  133,
      293,  294, 1338,  139,   93,  134,  134,  238,  238,  238,
      238,  238,  238,  171,  134,  134,  134,  134,  134,  134,
      137,  138,  137,  137,  137,  137,  137,  137,  139,   93,
      140,  140,  140,  140,  140,  140,  140,  140,  141,   92,
       93,   92,   93,  142,  142,  260,  260,  260,  260,  260,

      260,  171,  142,  142,  142,  142,  142,  142,  143,  143,
      143,  143,  143,  144,  145,  145,   92, 1338,  142,  142,
      142,  142,  142,  142,  142,  142,  146,  146,  146,  146,
      146,  146,  146,  146,   92,   93, 1290,  139,   93,  146,
      146,  267,  267,  267,  267,  267,  267,  171,  146,  146,
      146,  146,  146,  146,  121,  121,  121,  121,  121,  121,
      121,  121,  162,  162,  163,  164,  164,  164,  164,  164,
      122, 1273,  165,  165,  165,  165,  165,  165,  139,   93,
      170,  170,  170,  170,  170,  170,  170,  170,  171,   92,
       93,   92,   93,  172,  172,   92,   93,   92,   93,  141,

     1329,  171,  172,  172,  172,  172,  172,  172,  173,  173,
      173,  173,  173,  174,  175,  175,   92, 1329,  172,  172,
      172,  172,  172,  172,  172,  172,  178,  178,  178,  178,
      178,  178,  178,  178,  179,  179,  180,  178,  178,  178,
      178,  178,  136, 1210,  181,  181,  182,  183,  183,  183,
      183,  183,  139,   93,  184,  184,  184,  184,  184,  184,
      184,  184,  141,   92,   93,  232,   93,  185,  185,  333,
      333,  333,  333,  333,  333,  234,  185,  185,  185,  185,
      185,  185,  186,  186,  187,  188,  188,  188,  188,  188,
       92,   93,  232,   93, 1295,  189,  189,   92,   93, 1295,

      234,  327,  234, 1295,  189,  189,  189,  189,  189,  189,
       92,  387,  185,  185,  185,  185,  185,  185,  185,  185,
      190,  190,  190,  190,  190,  190,  190,  190,  139, 1290,
      190,  190,  190,  190,  190,  190,  203, 1290,  205,  205,
      205,  205,  205,  206,  207,  207,   92,   93,  211,  211,
      212,  213,  213,  213,  213,  213,   92,   93, 1290,  139,
       93,  214,  214,  351,  351,  351,  351,  351,  351,  256,
      214,  214,  214,  214,  214,  214,  139,   93,  215,  215,
      215,  215,  215,  215,  215,  215,  171,   92,   93,   92,
       93,  216,  216,  368,  368,  368,  368,  368,  368,  256,

      216,  216,  216,  216,  216,  216,  217,  217,  218,  219,
      219,  219,  219,  219,   92,   93, 1167,  139,   93,  220,
      220,  375,  375,  375,  375,  375,  375,  256,  220,  220,
      220,  220,  220,  220,   92, 1273,  216,  216,  216,  216,
      216,  216,  216,  216,  221,  221,  221,  221,  221,  221,
      221,  221,  139, 1273,  221,  221,  221,  221,  221,  221,
      225,  225,  225,  225,  225,  225,  225,  225,  226, 1273,
      228,  228,  228,  228,  228,  229,  230,  230,  232,   93,
      233,  233,  233,  233,  233,  233,  233,  233,  234,  232,
       93,   92,   93,  235,  235,   92,   93,   92,   93,  263,

     1219,  263,  235,  235,  235,  235,  235,  235,  236,  236,
      236,  236,  236,  237,  238,  238,   92, 1295,  235,  235,
      235,  235,  235,  235,  235,  235,  248,  248,  249,  250,
      250,  250,  250,  250,  203, 1295,  251,  251,  251,  251,
      251,  251,  139,   93,  255,  255,  255,  255,  255,  255,
      255,  255,  256,   92,   93,  232,   93,  257,  257,  382,
      382,  382,  382,  382,  382,  263,  257,  257,  257,  257,
      257,  257,  258,  258,  258,  258,  258,  259,  260,  260,
       92, 1202,  257,  257,  257,  257,  257,  257,  257,  257,
      232,   93,  262,  262,  262,  262,  262,  262,  262,  262,

      263,   92,   93,   92,   93,  264,  264,  391,  391,  391,
      391,  391,  391,  234,  264,  264,  264,  264,  264,  264,
      265,  265,  265,  265,  265,  266,  267,  267,   92, 1290,
      264,  264,  264,  264,  264,  264,  264,  264,  271,  271,
      272,  273,  273,  273,  273,  273,   92,   93,   92,   93,
     1290,  274,  274,   92,   93, 1197,  256, 1124,  263, 1117,
      274,  274,  274,  274,  274,  274,  275,  275,  276,  277,
      277,  277,  277,  277,  226, 1110,  278,  278,  278,  278,
      278,  278,  136, 1103,  279,  279,  280,  281,  281,  281,
      281,  281,  232,   93,  282,  282,  282,  282,  282,  282,

      282,  282,  234,  327, 1363,  327, 1096,  283,  283,   92,
       93,   92,   93,  329,  329,  329,  283,  283,  283,  283,
      283,  283,  284,  284,  285,  286,  286,  286,  286,  286,
       92,   93, 1273,  345,   93,  287,  287,  478,  478,  478,
      478,  478,  478,  347,  287,  287,  287,  287,  287,  287,
       92, 1273,  283,  283,  283,  283,  283,  283,  283,  283,
      288,  288,  288,  288,  288,  288,  288,  288,  232, 1159,
      288,  288,  288,  288,  288,  288,  293,  294,  296,  296,
      296,  296,  296,  297,  298,  298,   92,   93,  302,  302,
      303,  304,  304,  304,  304,  304,   92,   93,  345,   93,

     1219,  305,  305,   92,   93, 1219,  347, 1219,  347, 1210,
      305,  305,  305,  305,  305,  305,  139,   93,  306,  306,
      306,  306,  306,  306,  306,  306,  256,   92,   93,  139,
       93,  307,  307,  500,  500,  500,  500,  500,  500,  364,
      307,  307,  307,  307,  307,  307,  308,  308,  309,  310,
      310,  310,  310,  310,   92,   93, 1053,   92,   93,  311,
      311,  514,  514,  514,  514,  514,  514,  364,  311,  311,
      311,  311,  311,  311,   92, 1202,  307,  307,  307,  307,
      307,  307,  307,  307,  312,  312,  312,  312,  312,  312,
      312,  312,  139, 1202,  312,  312,  312,  312,  312,  312,

      232,   93,  313,  313,  313,  313,  313,  313,  313,  313,
      263,   92,   93,  139,   93,  314,  314,  521,  521,  521,
      521,  521,  521,  364,  314,  314,  314,  314,  314,  314,
      315,  315,  316,  317,  317,  317,  317,  317,  232,   93,
       92,   93, 1202,  318,  318,   92,   93, 1197,  371,  327,
      371, 1197,  318,  318,  318,  318,  318,  318,   92,  387,
      314,  314,  314,  314,  314,  314,  314,  314,  319,  319,
      319,  319,  319,  319,  319,  319,  232, 1197,  319,  319,
      319,  319,  319,  319,  323,  323,  324,  325,  325,  325,
      325,  325,   92,   93, 1167,  232,   93,  326,  326,  528,

      528,  528,  528,  528,  528,  371,  326,  326,  326,  326,
      326,  326,  327, 1235,  328,  328,  328,  328,  328,  328,
      328,  328,  329,  345,   93,   92,   93,  330,  330,   92,
       93,   92,   93,  378, 1003,  378,  330,  330,  330,  330,
      330,  330,  331,  331,  331,  331,  331,  332,  333,  333,
      334, 1363,  336,  336,  336,  336,  336,  337,  338,  338,
      339,  387,  341,  341,  341,  341,  341,  342,  343,  343,
      345,   93,  346,  346,  346,  346,  346,  346,  346,  346,
      347,   92,   93,  345,   93,  348,  348,  535,  535,  535,
      535,  535,  535,  378,  348,  348,  348,  348,  348,  348,

      349,  349,  349,  349,  349,  350,  351,  351,   92, 1159,
      348,  348,  348,  348,  348,  348,  348,  348,  356,  356,
      356,  357,  358,  358,  358,  358,  293,  294,  359,  359,
      359,  359,  359,  359,  139,   93,  363,  363,  363,  363,
      363,  363,  363,  363,  364,   92,   93,  327, 1159,  365,
      365,  544,  544,  544,  544,  544,  544,  387,  365,  365,
      365,  365,  365,  365,  366,  366,  366,  366,  366,  367,
      368,  368,   92, 1159,  365,  365,  365,  365,  365,  365,
      365,  365,  232,   93,  370,  370,  370,  370,  370,  370,
      370,  370,  371,   92,   93,  472, 1067,  372,  372,  551,

      551,  551,  551,  551,  551,  474,  372,  372,  372,  372,
      372,  372,  373,  373,  373,  373,  373,  374,  375,  375,
       92, 1219,  372,  372,  372,  372,  372,  372,  372,  372,
      345,   93,  377,  377,  377,  377,  377,  377,  377,  377,
      378,   92,   93,   92,   93,  379,  379,   92,   93,   92,
       93,  347, 1219,  364,  379,  379,  379,  379,  379,  379,
      380,  380,  380,  380,  380,  381,  382,  382,   92,  327,
      379,  379,  379,  379,  379,  379,  379,  379,  327,  540,
      386,  386,  386,  386,  386,  386,  386,  386,  387,   92,
       93,   92,   93,  388,  388,   92,   93,   92,   93,  371,

     1062,  378,  388,  388,  388,  388,  388,  388,  389,  389,
      389,  389,  389,  390,  391,  391,  392,  392,  393,  394,
      394,  394,  394,  394,  327,  472,  395,  395,  395,  395,
      395,  395,  395,  395,  329,  547,  472, 1363, 1210,  396,
      396,   92,   93,   92,   93, 1202,  474,  474,  396,  396,
      396,  396,  396,  396,  397,  397,  398,  399,  399,  399,
      399,  399,   92,   93, 1202,  472, 1045,  400,  400,  662,
      662,  662,  662,  662,  662,  474,  400,  400,  400,  400,
      400,  400,  401,  401,  401,  401,  401,  401,  401,  401,
      327, 1197,  401,  401,  401,  401,  401,  401,   92,   93,

      329,  402,  402,  403,  404,  404,  404,  404,  404,  334,
     1197,  405,  405,  405,  405,  405,  405,  406,  406,  407,
      408,  408,  408,  408,  408,  339, 1040,  409,  409,  409,
      409,  409,  409,  136, 1124,  410,  410,  411,  412,  412,
      412,  412,  412,  345,   93,  413,  413,  413,  413,  413,
      413,  413,  413,  347,  494,   93,   92,   93,  414,  414,
       92,   93,   92,   93,  496,  944,  496,  414,  414,  414,
      414,  414,  414,  415,  415,  416,  417,  417,  417,  417,
      417,   92,   93, 1117,  494,   93,  418,  418,  684,  684,
      684,  684,  684,  684,  496,  418,  418,  418,  418,  418,

      418,   92,  937,  414,  414,  414,  414,  414,  414,  414,
      414,  419,  419,  419,  419,  419,  419,  419,  419,  345,
     1110,  419,  419,  419,  419,  419,  419,  421,  421,  422,
      423,  423,  423,  423,  423,  358,  358,  358,  358,  358,
      358,  358,  358,   92,   93,  427,  427,  428,  429,  429,
      429,  429,  429,   92,   93,  930,  139,   93,  430,  430,
      701,  701,  701,  701,  701,  701,  510,  430,  430,  430,
      430,  430,  430,  139,   93,  431,  431,  431,  431,  431,
      431,  431,  431,  364,   92,   93,  139,   93,  432,  432,
       92,   93,   92,   93,  510, 1103,  510,  432,  432,  432,

      432,  432,  432,  433,  433,  434,  435,  435,  435,  435,
      435,   92,   93,  923,  232,   93,  436,  436,  708,  708,
      708,  708,  708,  708,  517,  436,  436,  436,  436,  436,
      436,   92, 1096,  432,  432,  432,  432,  432,  432,  432,
      432,  437,  437,  437,  437,  437,  437,  437,  437,  139,
     1167,  437,  437,  437,  437,  437,  437,  232,   93,  438,
      438,  438,  438,  438,  438,  438,  438,  371,   92,   93,
      232,   93,  439,  439,   92,   93,   92,   93,  517, 1003,
      517,  439,  439,  439,  439,  439,  439,  440,  440,  441,
      442,  442,  442,  442,  442,   92,   93,  988,  345,   93,

      443,  443,  715,  715,  715,  715,  715,  715,  524,  443,
      443,  443,  443,  443,  443,   92, 1159,  439,  439,  439,
      439,  439,  439,  439,  439,  444,  444,  444,  444,  444,
      444,  444,  444,  232, 1159,  444,  444,  444,  444,  444,
      444,  345,   93,  445,  445,  445,  445,  445,  445,  445,
      445,  378,   92,   93,  345,   93,  446,  446,   92,   93,
       92,   93,  524, 1067,  524,  446,  446,  446,  446,  446,
      446,  447,  447,  448,  449,  449,  449,  449,  449,   92,
       93, 1067,  494,   93,  450,  450,  722,  722,  722,  722,
      722,  722,  531,  450,  450,  450,  450,  450,  450,   92,

     1067,  446,  446,  446,  446,  446,  446,  446,  446,  451,
      451,  451,  451,  451,  451,  451,  451,  345, 1062,  451,
      451,  451,  451,  451,  451,  455,  455,  456,  457,  457,
      457,  457,  457,   92,   93,  494,   93, 1062,  458,  458,
       92,   93, 1062,  531,  327,  531, 1053,  458,  458,  458,
      458,  458,  458,  327,  540,  459,  459,  459,  459,  459,
      459,  459,  459,  387,   92,   93, 1363,  868,  460,  460,
      729,  729,  729,  729,  729,  729,  540,  460,  460,  460,
      460,  460,  460,  461,  461,  462,  463,  463,  463,  463,
      463,   92,   93, 1045,  327, 1045,  464,  464,  738,  738,

      738,  738,  738,  738,  540,  464,  464,  464,  464,  464,
      464,  465,  465,  465,  465,  465,  465,  465,  465,  327,
     1045,  465,  465,  465,  465,  465,  465,   92,   93,  387,
      466,  472,  468,  468,  468,  468,  468,  469,  470,  470,
      472,  547,  473,  473,  473,  473,  473,  473,  473,  473,
      474,   92,   93, 1363, 1040,  475,  475,  745,  745,  745,
      745,  745,  745,  547,  475,  475,  475,  475,  475,  475,
      476,  476,  476,  476,  476,  477,  478,  478,   92,   93,
      480,  480,  480,  480,  480,  481,  482,  482,  483,  472,
      485,  485,  485,  485,  485,  486,  487,  487,  488,  547,

      490,  490,  490,  490,  490,  491,  492,  492,  494,   93,
      495,  495,  495,  495,  495,  495,  495,  495,  496,   92,
       93,  656, 1040,  497,  497,  752,  752,  752,  752,  752,
      752,  658,  497,  497,  497,  497,  497,  497,  498,  498,
      498,  498,  498,  499,  500,  500,   92,  327,  497,  497,
      497,  497,  497,  497,  497,  497,  501,  734,  503,  503,
      503,  503,  503,  504,  505,  505,  139,   93,  509,  509,
      509,  509,  509,  509,  509,  509,  510,   92,   93,   92,
       93,  511,  511,   92,   93,   92,   93,  496, 1040,  510,
      511,  511,  511,  511,  511,  511,  512,  512,  512,  512,

      512,  513,  514,  514,   92, 1124,  511,  511,  511,  511,
      511,  511,  511,  511,  232,   93,  516,  516,  516,  516,
      516,  516,  516,  516,  517,   92,   93,   92,   93,  518,
      518,  801,  801,  801,  801,  801,  801,  517,  518,  518,
      518,  518,  518,  518,  519,  519,  519,  519,  519,  520,
      521,  521,   92, 1117,  518,  518,  518,  518,  518,  518,
      518,  518,  345,   93,  523,  523,  523,  523,  523,  523,
      523,  523,  524,   92,   93,   92,   93,  525,  525,   92,
       93,   92,   93,  524, 1110,  531,  525,  525,  525,  525,
      525,  525,  526,  526,  526,  526,  526,  527,  528,  528,

       92, 1103,  525,  525,  525,  525,  525,  525,  525,  525,
      494,   93,  530,  530,  530,  530,  530,  530,  530,  530,
      531,  472,  656,  656, 1096,  532,  532,   92,   93,   92,
       93,  741,  748,  658,  532,  532,  532,  532,  532,  532,
      533,  533,  533,  533,  533,  534,  535,  535,   92, 1363,
      532,  532,  532,  532,  532,  532,  532,  532,  327,  658,
      539,  539,  539,  539,  539,  539,  539,  539,  540,   92,
       93,  656, 1003,  541,  541,  872,  872,  872,  872,  872,
      872,  658,  541,  541,  541,  541,  541,  541,  542,  542,
      542,  542,  542,  543,  544,  544,  472,  825,  546,  546,

      546,  546,  546,  546,  546,  546,  547,  678,   93,   92,
       93,  548,  548,   92,   93,   92,   93,  680,  797,  680,
      548,  548,  548,  548,  548,  548,  549,  549,  549,  549,
      549,  550,  551,  551,  552,  552,  553,  554,  554,  554,
      554,  554,  466,  988,  555,  555,  555,  555,  555,  555,
      556,  556,  557,  558,  558,  558,  558,  558,  472,  795,
      559,  559,  559,  559,  559,  559,  559,  559,  474,  797,
      988,  678,   93,  560,  560,  894,  894,  894,  894,  894,
      894,  680,  560,  560,  560,  560,  560,  560,  561,  561,
      562,  563,  563,  563,  563,  563,  139,   93,   92,   93,

      988,  564,  564,   92,   93,  895,  697, 1067,  697, 1067,
      564,  564,  564,  564,  564,  564,  565,  565,  565,  565,
      565,  565,  565,  565,  472,  882,  565,  565,  565,  565,
      565,  565,   92,   93,  474,   92,   93,  566,  566,  566,
      566,  566,  566,  567,  567,  568,  569,  569,  569,  569,
      569,  483, 1062,  570,  570,  570,  570,  570,  570,  571,
      571,  572,  573,  573,  573,  573,  573,  488, 1062,  574,
      574,  574,  574,  574,  574,  136,  877,  575,  575,  576,
      577,  577,  577,  577,  577,  494,   93,  578,  578,  578,
      578,  578,  578,  578,  578,  496,  139,   93,  232,   93,

      579,  579,   92,   93,   92,   93,  697, 1053,  704,  579,
      579,  579,  579,  579,  579,  580,  580,  581,  582,  582,
      582,  582,  582,   92,   93,  232,   93, 1045,  583,  583,
       92,   93, 1045,  704,  327,  704,  860,  583,  583,  583,
      583,  583,  583,   92,  734,  579,  579,  579,  579,  579,
      579,  579,  579,  584,  584,  584,  584,  584,  584,  584,
      584,  494, 1040,  584,  584,  584,  584,  584,  584,  585,
      585,  586,  587,  587,  587,  587,  587,  501, 1040,  588,
      588,  588,  588,  588,  588,   92,   93,  592,  592,  593,
      594,  594,  594,  594,  594,  345,   93,   92,   93,  855,

      595,  595,   92,   93,  944,  711,  748,  711,  937,  595,
      595,  595,  595,  595,  595,  139,   93,  596,  596,  596,
      596,  596,  596,  596,  596,  510,  345,   93,  494,   93,
      597,  597,   92,   93,   92,   93,  711,  741,  718,  597,
      597,  597,  597,  597,  597,  598,  598,  599,  600,  600,
      600,  600,  600,   92,   93,  494,   93,  930,  601,  601,
       92,   93,  734,  718, 1363,  718,  923,  601,  601,  601,
      601,  601,  601,   92,  734,  597,  597,  597,  597,  597,
      597,  597,  597,  602,  602,  602,  602,  602,  602,  602,
      602,  139, 1003,  602,  602,  602,  602,  602,  602,  232,

       93,  603,  603,  603,  603,  603,  603,  603,  603,  517,
      678,   93,   92,   93,  604,  604,   92,   93,  825,  988,
      725,  988,  725,  604,  604,  604,  604,  604,  604,  605,
      605,  606,  607,  607,  607,  607,  607,  678,   93,  327,
      472,  895,  608,  608,  895,  895,  888,  725, 1363,  734,
      741,  608,  608,  608,  608,  608,  608,   92,  741,  604,
      604,  604,  604,  604,  604,  604,  604,  609,  609,  609,
      609,  609,  609,  609,  609,  232,  882,  609,  609,  609,
      609,  609,  609,  345,   93,  610,  610,  610,  610,  610,
      610,  610,  610,  524,  882,  882,  472,  877,  611,  611,

      927,  927,  927,  927,  927,  927,  741,  611,  611,  611,
      611,  611,  611,  612,  612,  613,  614,  614,  614,  614,
      614,  877,  877,  868,  656,  658,  615,  615,  934,  934,
      934,  934,  934,  934,  748,  615,  615,  615,  615,  615,
      615,   92,  860,  611,  611,  611,  611,  611,  611,  611,
      611,  616,  616,  616,  616,  616,  616,  616,  616,  345,
      860,  616,  616,  616,  616,  616,  616,  494,   93,  617,
      617,  617,  617,  617,  617,  617,  617,  531,  860,  855,
     1363,  855,  618,  618,  941,  941,  941,  941,  941,  941,
      748,  618,  618,  618,  618,  618,  618,  619,  619,  620,

      621,  621,  621,  621,  621,  855,  944,  937,  656,  930,
      622,  622,  948,  948,  948,  948,  948,  948,  748,  622,
      622,  622,  622,  622,  622,   92,  923,  618,  618,  618,
      618,  618,  618,  618,  618,  623,  623,  623,  623,  623,
      623,  623,  623,  494,  921,  623,  623,  623,  623,  623,
      623,  627,  627,  628,  629,  629,  629,  629,  629,  825,
      626,  797,  866,  906,  630,  630,  949,  949,  949,  949,
      949,  949,  868,  630,  630,  630,  630,  630,  630,  327,
      591,  631,  631,  631,  631,  631,  631,  631,  631,  540,
       92,   93,  795,  685,  632,  632,  895,  895,  882,  882,

      680,  672,  797,  632,  632,  632,  632,  632,  632,  633,
      633,  634,  635,  635,  635,  635,  635, 1363,  795,   92,
       93,  877,  636,  636,  877,  667,  868,  797,  797,  697,
      860,  636,  636,  636,  636,  636,  636,  637,  637,  637,
      637,  637,  637,  637,  637,  327,  860,  637,  637,  637,
      637,  637,  637,  650,  855,  540,  472,  855,  638,  638,
      638,  638,  638,  638,  638,  638,  547,   92,   93,   92,
       93,  639,  639,  645,  748,  547,  741,  704,  540,  711,
      639,  639,  639,  639,  639,  639,  640,  640,  641,  642,
      642,  642,  642,  642,   92,   93,   92,   93,  734,  643,

      643,  825,  626,  678,  718,  494,  725,  345,  643,  643,
      643,  643,  643,  643,  644,  644,  644,  644,  644,  644,
      644,  644,  472,  232,  644,  644,  644,  644,  644,  644,
      139,  797,  547,  645,  327,  647,  647,  647,  647,  647,
      648,  649,  649,  650,  923,  652,  652,  652,  652,  652,
      653,  654,  654,  656,  472,  657,  657,  657,  657,  657,
      657,  657,  657,  658,  930,  656,  866,  591,  659,  659,
      685,  685,  685,  678,  672,  937,  944,  659,  659,  659,
      659,  659,  659,  660,  660,  660,  660,  660,  661,  662,
      662,   92,   93,  664,  664,  664,  664,  664,  665,  666,

      666,  667,  866,  669,  669,  669,  669,  669,  670,  671,
      671,  672,  868,  674,  674,  674,  674,  674,  675,  676,
      676,  678,   93,  679,  679,  679,  679,  679,  679,  679,
      679,  680, 1363,  866,  888,   93,  681,  681,  672,  672,
      667,  667,  868,  868,  890,  681,  681,  681,  681,  681,
      681,  682,  682,  682,  682,  682,  683,  684,  684,   92,
      327,  681,  681,  681,  681,  681,  681,  681,  681,  685,
      923,  687,  687,  687,  687,  687,  688,  689,  689,  691,
      691,  692,  693,  693,  693,  693,  693,  694,  667,  658,
       92,   93,  695,  695, 1057, 1057, 1057, 1057, 1057, 1057,

      890,  695,  695,  695,  695,  695,  695,  139,   93,  696,
      696,  696,  696,  696,  696,  696,  696,  697,  888,   93,
     1363,  474,  698,  698,  650,  650,  650,  645,  890,  645,
      923,  698,  698,  698,  698,  698,  698,  699,  699,  699,
      699,  699,  700,  701,  701,   92,  645,  698,  698,  698,
      698,  698,  698,  698,  698,  232,   93,  703,  703,  703,
      703,  703,  703,  703,  703,  704,  748,  741,  327,  734,
      705,  705, 1100, 1100, 1100, 1100, 1100, 1100,  923,  705,
      705,  705,  705,  705,  705,  706,  706,  706,  706,  706,
      707,  708,  708,   92,  732,  705,  705,  705,  705,  705,

      705,  705,  705,  345,   93,  710,  710,  710,  710,  710,
      710,  710,  710,  711,  626,  454,  472,  591,  712,  712,
     1107, 1107, 1107, 1107, 1107, 1107,  930,  712,  712,  712,
      712,  712,  712,  713,  713,  713,  713,  713,  714,  715,
      715,   92,  426,  712,  712,  712,  712,  712,  712,  712,
      712,  494,   93,  717,  717,  717,  717,  717,  717,  717,
      717,  718, 1363,  472,  656,  501,  719,  719,  685,  685,
      672,  672,  930,  930,  937,  719,  719,  719,  719,  719,
      719,  720,  720,  720,  720,  720,  721,  722,  722,   92,
      488,  719,  719,  719,  719,  719,  719,  719,  719,  678,

       93,  724,  724,  724,  724,  724,  724,  724,  724,  725,
      667,  667, 1363,  483,  726,  726, 1114, 1114, 1114, 1114,
     1114, 1114,  937,  726,  726,  726,  726,  726,  726,  727,
      727,  727,  727,  727,  728,  729,  729,   92,  656,  726,
      726,  726,  726,  726,  726,  726,  726,  327,  937,  733,
      733,  733,  733,  733,  733,  733,  733,  734,  658,  650,
      866,  650,  735,  735, 1121, 1121, 1121, 1121, 1121, 1121,
      944,  735,  735,  735,  735,  735,  735,  736,  736,  736,
      736,  736,  737,  738,  738,  472, 1363,  740,  740,  740,
      740,  740,  740,  740,  740,  741,  944,  466,  866,  645,

      742,  742, 1128, 1128, 1128, 1128, 1128, 1128,  944,  742,
      742,  742,  742,  742,  742,  743,  743,  743,  743,  743,
      744,  745,  745,  656, 1051,  747,  747,  747,  747,  747,
      747,  747,  747,  748, 1053,  645,   92,   93,  749,  749,
     1129, 1129, 1129, 1129, 1129, 1129,  890,  749,  749,  749,
      749,  749,  749,  750,  750,  750,  750,  750,  751,  752,
      752,  753,  753,  754,  755,  755,  755,  755,  755,  645,
      547,  756,  756,  756,  756,  756,  756,  757,  757,  758,
      759,  759,  759,  759,  759,  650,  387,  760,  760,  760,
      760,  760,  760,  761,  761,  762,  763,  763,  763,  763,

      763,  656,  327,  764,  764,  764,  764,  764,  764,  764,
      764,  658, 1096,  540,  472,  626,  765,  765, 1158, 1158,
     1158, 1158, 1158, 1158, 1103,  765,  765,  765,  765,  765,
      765,  766,  766,  767,  768,  768,  768,  768,  768,  454,
      494,  345,  656,  232,  769,  769, 1171, 1171, 1171, 1171,
     1171, 1171, 1110,  769,  769,  769,  769,  769,  769,  770,
      770,  770,  770,  770,  770,  770,  770,  656,  139,  770,
      770,  770,  770,  770,  770,  591,  426,  658,   92,   93,
      771,  771,  771,  771,  771,  771,  772,  772,  773,  774,
      774,  774,  774,  774,  667,  501,  775,  775,  775,  775,

      775,  775,  776,  776,  777,  778,  778,  778,  778,  778,
      672,  501,  779,  779,  779,  779,  779,  779,  136,  501,
      780,  780,  781,  782,  782,  782,  782,  782,  678,   93,
      783,  783,  783,  783,  783,  783,  783,  783,  680,  866,
     1051, 1051,  494,  784,  784,  488,  488,  488,  483, 1117,
     1124, 1053,  784,  784,  784,  784,  784,  784,  785,  785,
      786,  787,  787,  787,  787,  787, 1363, 1051, 1165,  327,
      483,  788,  788,  483,  474,  329, 1053, 1053, 1167, 1096,
      788,  788,  788,  788,  788,  788,   92,  466,  784,  784,
      784,  784,  784,  784,  784,  784,  789,  789,  789,  789,

      789,  789,  789,  789,  678,  466,  789,  789,  789,  789,
      789,  789,  790,  790,  791,  792,  792,  792,  792,  792,
      685,  466,  793,  793,  793,  793,  793,  793,  795, 1363,
      796,  796,  796,  796,  796,  796,  796,  796,  797, 1096,
      547,  327,  540,  798,  798, 1214, 1214, 1214, 1214, 1214,
     1214, 1096,  798,  798,  798,  798,  798,  798,  799,  799,
      799,  799,  799,  800,  801,  801,  139,   93,  803,  803,
      803,  803,  803,  803,  803,  803,  697,  472, 1363,  472,
      538,  804,  804,  454,  322,  508,  426, 1103, 1103, 1103,
      804,  804,  804,  804,  804,  804,   92,  301,  804,  804,

      804,  804,  804,  804,  804,  804,  806,  806,  806,  806,
      806,  806,  806,  806,  139,  501,  806,  806,  806,  806,
      806,  806,  232,   93,  807,  807,  807,  807,  807,  807,
      807,  807,  704,  656, 1363,  656,  501,  808,  808,  488,
      488,  339,  483, 1110, 1110, 1110,  808,  808,  808,  808,
      808,  808,   92,  483,  808,  808,  808,  808,  808,  808,
      808,  808,  810,  810,  810,  810,  810,  810,  810,  810,
      232,  334,  810,  810,  810,  810,  810,  810,  345,   93,
      811,  811,  811,  811,  811,  811,  811,  811,  711,  866,
     1363,  866,  474,  812,  812,  466,  466,  387,  454, 1117,

     1117, 1117,  812,  812,  812,  812,  812,  812,   92,  322,
      812,  812,  812,  812,  812,  812,  812,  812,  814,  814,
      814,  814,  814,  814,  814,  814,  345,  345,  814,  814,
      814,  814,  814,  814,  494,   93,  815,  815,  815,  815,
      815,  815,  815,  815,  718, 1051, 1363, 1051,  232,  816,
      816,  139,  426,  301,  420, 1124, 1124, 1124,  816,  816,
      816,  816,  816,  816,   92,  345,  816,  816,  816,  816,
      816,  816,  816,  816,  818,  818,  818,  818,  818,  818,
      818,  818,  494,  339,  818,  818,  818,  818,  818,  818,
      678,   93,  819,  819,  819,  819,  819,  819,  819,  819,

      725,  339,  339, 1208,  334,  820,  820, 1248, 1248, 1248,
     1248, 1248, 1248, 1210,  820,  820,  820,  820,  820,  820,
       92,  334,  820,  820,  820,  820,  820,  820,  820,  820,
      822,  822,  822,  822,  822,  822,  822,  822,  678,  334,
      822,  822,  822,  822,  822,  822,  826,  826,  827,  828,
      828,  828,  828,  828, 1165, 1363, 1165, 1208,  329,  829,
      829,  387,  385,  322, 1167, 1167, 1167, 1210,  829,  829,
      829,  829,  829,  829,  327, 1363,  830,  830,  830,  830,
      830,  830,  830,  830,  734, 1210, 1208,  223,  362,  831,
      831,  301,  210,  355,  354,  353, 1210,  352,  831,  831,

      831,  831,  831,  831,  832,  832,  833,  834,  834,  834,
      834,  834,  339,  339,  226,  334,  334,  835,  835, 1318,
     1318, 1318, 1318, 1318, 1318,  329,  835,  835,  835,  835,
      835,  835,  836,  836,  836,  836,  836,  836,  836,  836,
      327,  322,  836,  836,  836,  836,  836,  836,  223,  232,
      734,  472,  139,  837,  837,  837,  837,  837,  837,  837,
      837,  741,  301,  210,  203,  292,  838,  838, 1348, 1348,
     1348, 1348, 1348, 1348,  291,  838,  838,  838,  838,  838,
      838,  839,  839,  840,  841,  841,  841,  841,  841,  290,
      289,  232,  226,  226,  842,  842, 1361, 1361, 1361, 1361,

     1361, 1361,  226,  842,  842,  842,  842,  842,  842,  843,
      843,  843,  843,  843,  843,  843,  843,  472,  270,  843,
      843,  843,  843,  843,  843,  223,  254,  741,  656,  210,
      844,  844,  844,  844,  844,  844,  844,  844,  748,  130,
      203,  203,  203,  845,  845, 1362, 1362, 1362, 1362, 1362,
     1362,  247,  845,  845,  845,  845,  845,  845,  846,  846,
      847,  848,  848,  848,  848,  848,  246,  245,  244,  243,
      242,  849,  849,  241,  240,  239,  226,  226,  224,  223,
      849,  849,  849,  849,  849,  849,  850,  850,  850,  850,
      850,  850,  850,  850,  656,  139,  850,  850,  850,  850,

      850,  850,  210,  130,  748,  851,  851,  851,  851,  851,
      851,  851,  851,  852,  852,  852,  852,  852,  853,  854,
      854,  854,  854,  854,  854,  854,  854,  854,  854,  855,
      122,  857,  857,  857,  857,  857,  858,  859,  859,  860,
      203,  862,  862,  862,  862,  862,  863,  864,  864,  866,
      203,  867,  867,  867,  867,  867,  867,  867,  867,  868,
      202,  201,  200,  199,  869,  869,  198,  197,  196,  195,
      194,  193,  191,  869,  869,  869,  869,  869,  869,  870,
      870,  870,  870,  870,  871,  872,  872,   92,   93,  874,
      874,  874,  874,  874,  875,  876,  876,  877,   50,  879,

      879,  879,  879,  879,  880,  881,  881,  882,  139,  884,
      884,  884,  884,  884,  885,  886,  886,  888,   93,  889,
      889,  889,  889,  889,  889,  889,  889,  890,  177,   82,
      169,  130,  891,  891,   50,  122,  122,  122,  161,  160,
      159,  891,  891,  891,  891,  891,  891,  892,  892,  892,
      892,  892,  893,  894,  894,   92,  158,  891,  891,  891,
      891,  891,  891,  891,  891,  895,  157,  897,  897,  897,
      897,  897,  898,  899,  899,  900,  900,  901,  902,  902,
      902,  902,  902,  795,  156,  903,  903,  903,  903,  903,
      903,  903,  903,  797,  155,  154,  153,  152,  904,  904,

      151,  150,  149,  148,  147,  136,  135,  904,  904,  904,
      904,  904,  904,  907,  907,  907,  907,  907,  907,  907,
      907,  795,  130,  907,  907,  907,  907,  907,  907,   50,
      122,  797,  327,  122,  922,  922,  922,  922,  922,  922,
      922,  922,  923,  120,  119,  118,  117,  924,  924,  116,
      115,  114,  111,  108,  107,  106,  924,  924,  924,  924,
      924,  924,  925,  925,  925,  925,  925,  926,  927,  927,
      472,  105,  929,  929,  929,  929,  929,  929,  929,  929,
      930,  104,  103,  102,  101,  931,  931,  100,   99,   50,
       89,   43,   80,   79,  931,  931,  931,  931,  931,  931,

      932,  932,  932,  932,  932,  933,  934,  934,  656,   76,
      936,  936,  936,  936,  936,  936,  936,  936,  937,   73,
       70,   69,   68,  938,  938,   67,   66,   62,   61,   58,
       57,   56,  938,  938,  938,  938,  938,  938,  939,  939,
      939,  939,  939,  940,  941,  941,  866,   55,  943,  943,
      943,  943,  943,  943,  943,  943,  944,   47,   45,   44,
       43,  945,  945, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
      945,  945,  945,  945,  945,  945,  946,  946,  946,  946,
      946,  947,  948,  948,  854,  854,  854,  854,  854,  854,
      854,  854,  949,  949,  949,  949,  949,  949,  949,  949,

      950,  950,  951,  952,  952,  952,  952,  952,  855, 1363,
      953,  953,  953,  953,  953,  953,  954,  954,  955,  956,
      956,  956,  956,  956,  860, 1363,  957,  957,  957,  957,
      957,  957,  958,  958,  959,  960,  960,  960,  960,  960,
      866, 1363,  961,  961,  961,  961,  961,  961,  961,  961,
      868, 1363, 1363, 1363, 1363,  962,  962, 1363, 1363, 1363,
     1363, 1363, 1363, 1363,  962,  962,  962,  962,  962,  962,
      963,  963,  964,  965,  965,  965,  965,  965, 1363, 1363,
     1363, 1363, 1363,  966,  966, 1363, 1363, 1363, 1363, 1363,
     1363, 1363,  966,  966,  966,  966,  966,  966,  967,  967,

      967,  967,  967,  967,  967,  967,  866, 1363,  967,  967,
      967,  967,  967,  967, 1363, 1363,  868,   92,   93,  968,
      968,  968,  968,  968,  968,  969,  969,  970,  971,  971,
      971,  971,  971,  877, 1363,  972,  972,  972,  972,  972,
      972,  973,  973,  974,  975,  975,  975,  975,  975,  882,
     1363,  976,  976,  976,  976,  976,  976,  136, 1363,  977,
      977,  978,  979,  979,  979,  979,  979,  888,   93,  980,
      980,  980,  980,  980,  980,  980,  980,  890, 1363, 1363,
     1363, 1363,  981,  981, 1363, 1363, 1363, 1363, 1363, 1363,
     1363,  981,  981,  981,  981,  981,  981,   92, 1363,  981,

      981,  981,  981,  981,  981,  981,  981,  983,  983,  983,
      983,  983,  983,  983,  983,  888, 1363,  983,  983,  983,
      983,  983,  983,  984,  984,  985,  986,  986,  986,  986,
      986,  895, 1363,  987,  987,  987,  987,  987,  987,  988,
     1363,  990,  990,  990,  990,  990,  991,  992,  992, 1004,
     1004, 1005, 1006, 1006, 1006, 1006, 1006, 1363, 1363, 1363,
     1363, 1363, 1007, 1007, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1007, 1007, 1007, 1007, 1007, 1007,  327, 1363, 1008,
     1008, 1008, 1008, 1008, 1008, 1008, 1008,  923, 1363, 1363,
     1363, 1363, 1009, 1009, 1363, 1363, 1363, 1363, 1363, 1363,

     1363, 1009, 1009, 1009, 1009, 1009, 1009, 1010, 1010, 1011,
     1012, 1012, 1012, 1012, 1012, 1363, 1363, 1363, 1363, 1363,
     1013, 1013, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1013,
     1013, 1013, 1013, 1013, 1013, 1014, 1014, 1014, 1014, 1014,
     1014, 1014, 1014,  327, 1363, 1014, 1014, 1014, 1014, 1014,
     1014, 1363, 1363,  923,  472, 1363, 1015, 1015, 1015, 1015,
     1015, 1015, 1015, 1015,  930, 1363, 1363, 1363, 1363, 1016,
     1016, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1016, 1016,
     1016, 1016, 1016, 1016, 1017, 1017, 1018, 1019, 1019, 1019,
     1019, 1019, 1363, 1363, 1363, 1363, 1363, 1020, 1020, 1363,

     1363, 1363, 1363, 1363, 1363, 1363, 1020, 1020, 1020, 1020,
     1020, 1020, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021,
      472, 1363, 1021, 1021, 1021, 1021, 1021, 1021, 1363, 1363,
      930,  656, 1363, 1022, 1022, 1022, 1022, 1022, 1022, 1022,
     1022,  937, 1363, 1363, 1363, 1363, 1023, 1023, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1023, 1023, 1023, 1023, 1023,
     1023, 1024, 1024, 1025, 1026, 1026, 1026, 1026, 1026, 1363,
     1363, 1363, 1363, 1363, 1027, 1027, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1027, 1027, 1027, 1027, 1027, 1027, 1028,
     1028, 1028, 1028, 1028, 1028, 1028, 1028,  656, 1363, 1028,

     1028, 1028, 1028, 1028, 1028, 1363, 1363,  937,  866, 1363,
     1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029,  944, 1363,
     1363, 1363, 1363, 1030, 1030, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1030, 1030, 1030, 1030, 1030, 1030, 1031, 1031,
     1032, 1033, 1033, 1033, 1033, 1033, 1363, 1363, 1363, 1363,
     1363, 1034, 1034, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1034, 1034, 1034, 1034, 1034, 1034, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035,  866, 1363, 1035, 1035, 1035, 1035,
     1035, 1035, 1363, 1363,  944, 1036, 1036, 1036, 1036, 1036,
     1036, 1036, 1036, 1037, 1037, 1037, 1037, 1037, 1038, 1039,

     1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1039, 1040,
     1363, 1042, 1042, 1042, 1042, 1042, 1043, 1044, 1044, 1045,
     1363, 1047, 1047, 1047, 1047, 1047, 1048, 1049, 1049, 1051,
     1363, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1052, 1053,
     1363, 1363, 1363, 1363, 1054, 1054, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1054, 1054, 1054, 1054, 1054, 1054, 1055,
     1055, 1055, 1055, 1055, 1056, 1057, 1057,   92,   93, 1059,
     1059, 1059, 1059, 1059, 1060, 1061, 1061, 1062, 1363, 1064,
     1064, 1064, 1064, 1064, 1065, 1066, 1066, 1067, 1363, 1069,
     1069, 1069, 1069, 1069, 1070, 1071, 1071, 1074, 1074, 1074,

     1074, 1074, 1074, 1074, 1074, 1075, 1075, 1075, 1075, 1075,
     1076, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077, 1077,
     1077, 1078, 1078, 1079, 1080, 1080, 1080, 1080, 1080,  988,
     1363, 1081, 1081, 1081, 1081, 1081, 1081, 1090, 1090, 1091,
     1092, 1092, 1092, 1092, 1092, 1093, 1363, 1363, 1363, 1363,
     1094, 1094, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1094,
     1094, 1094, 1094, 1094, 1094,  327, 1363, 1095, 1095, 1095,
     1095, 1095, 1095, 1095, 1095, 1096, 1363, 1363, 1363, 1363,
     1097, 1097, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1097,
     1097, 1097, 1097, 1097, 1097, 1098, 1098, 1098, 1098, 1098,

     1099, 1100, 1100,  472, 1363, 1102, 1102, 1102, 1102, 1102,
     1102, 1102, 1102, 1103, 1363, 1363, 1363, 1363, 1104, 1104,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1104, 1104, 1104,
     1104, 1104, 1104, 1105, 1105, 1105, 1105, 1105, 1106, 1107,
     1107,  656, 1363, 1109, 1109, 1109, 1109, 1109, 1109, 1109,
     1109, 1110, 1363, 1363, 1363, 1363, 1111, 1111, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1111, 1111, 1111, 1111, 1111,
     1111, 1112, 1112, 1112, 1112, 1112, 1113, 1114, 1114,  866,
     1363, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1117,
     1363, 1363, 1363, 1363, 1118, 1118, 1363, 1363, 1363, 1363,

     1363, 1363, 1363, 1118, 1118, 1118, 1118, 1118, 1118, 1119,
     1119, 1119, 1119, 1119, 1120, 1121, 1121, 1051, 1363, 1123,
     1123, 1123, 1123, 1123, 1123, 1123, 1123, 1124, 1363, 1363,
     1363, 1363, 1125, 1125, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1125, 1125, 1125, 1125, 1125, 1125, 1126, 1126, 1126,
     1126, 1126, 1127, 1128, 1128, 1039, 1039, 1039, 1039, 1039,
     1039, 1039, 1039, 1129, 1129, 1129, 1129, 1129, 1129, 1129,
     1129, 1130, 1130, 1131, 1132, 1132, 1132, 1132, 1132, 1040,
     1363, 1133, 1133, 1133, 1133, 1133, 1133, 1134, 1134, 1135,
     1136, 1136, 1136, 1136, 1136, 1045, 1363, 1137, 1137, 1137,

     1137, 1137, 1137, 1138, 1138, 1139, 1140, 1140, 1140, 1140,
     1140, 1051, 1363, 1141, 1141, 1141, 1141, 1141, 1141, 1141,
     1141, 1053, 1363, 1363, 1363, 1363, 1142, 1142, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1142, 1142, 1142, 1142, 1142,
     1142, 1143, 1143, 1144, 1145, 1145, 1145, 1145, 1145, 1363,
     1363, 1363, 1363, 1363, 1146, 1146, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1146, 1146, 1146, 1146, 1146, 1146, 1147,
     1147, 1147, 1147, 1147, 1147, 1147, 1147, 1051, 1363, 1147,
     1147, 1147, 1147, 1147, 1147, 1363, 1363, 1053,   92,   93,
     1148, 1148, 1148, 1148, 1148, 1148, 1149, 1149, 1150, 1151,

     1151, 1151, 1151, 1151, 1062, 1363, 1152, 1152, 1152, 1152,
     1152, 1152, 1153, 1153, 1154, 1155, 1155, 1155, 1155, 1155,
     1067, 1363, 1156, 1156, 1156, 1156, 1156, 1156, 1077, 1077,
     1077, 1077, 1077, 1077, 1077, 1077, 1158, 1158, 1158, 1158,
     1158, 1158, 1158, 1158, 1159, 1363, 1161, 1161, 1161, 1161,
     1161, 1162, 1163, 1163, 1165, 1363, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1166, 1167, 1363, 1363, 1363, 1363, 1168,
     1168, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1168, 1168,
     1168, 1168, 1168, 1168, 1169, 1169, 1169, 1169, 1169, 1170,
     1171, 1171,  327, 1363, 1173, 1173, 1173, 1173, 1173, 1173,

     1173, 1173, 1096, 1363, 1363, 1363, 1363, 1174, 1174, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1174, 1174, 1174, 1174,
     1174, 1174, 1176, 1176, 1176, 1176, 1176, 1176, 1176, 1176,
      327, 1363, 1176, 1176, 1176, 1176, 1176, 1176, 1363, 1363,
     1096,  472, 1363, 1177, 1177, 1177, 1177, 1177, 1177, 1177,
     1177, 1103, 1363, 1363, 1363, 1363, 1178, 1178, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1178, 1178, 1178, 1178, 1178,
     1178, 1180, 1180, 1180, 1180, 1180, 1180, 1180, 1180,  472,
     1363, 1180, 1180, 1180, 1180, 1180, 1180, 1363, 1363, 1103,
      656, 1363, 1181, 1181, 1181, 1181, 1181, 1181, 1181, 1181,

     1110, 1363, 1363, 1363, 1363, 1182, 1182, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1182, 1182, 1182, 1182, 1182, 1182,
     1184, 1184, 1184, 1184, 1184, 1184, 1184, 1184,  656, 1363,
     1184, 1184, 1184, 1184, 1184, 1184, 1363, 1363, 1110,  866,
     1363, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1185, 1117,
     1363, 1363, 1363, 1363, 1186, 1186, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1186, 1186, 1186, 1186, 1186, 1186, 1188,
     1188, 1188, 1188, 1188, 1188, 1188, 1188,  866, 1363, 1188,
     1188, 1188, 1188, 1188, 1188, 1363, 1363, 1117, 1051, 1363,
     1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1124, 1363,

     1363, 1363, 1363, 1190, 1190, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1190, 1190, 1190, 1190, 1190, 1190, 1192, 1192,
     1192, 1192, 1192, 1192, 1192, 1192, 1051, 1363, 1192, 1192,
     1192, 1192, 1192, 1192, 1363, 1363, 1124, 1193, 1193, 1193,
     1193, 1193, 1193, 1193, 1193, 1194, 1194, 1194, 1194, 1194,
     1195, 1196, 1196, 1196, 1196, 1196, 1196, 1196, 1196, 1196,
     1196, 1197, 1363, 1199, 1199, 1199, 1199, 1199, 1200, 1201,
     1201, 1202, 1363, 1204, 1204, 1204, 1204, 1204, 1205, 1206,
     1206, 1208, 1363, 1209, 1209, 1209, 1209, 1209, 1209, 1209,
     1209, 1210, 1363, 1363, 1363, 1363, 1211, 1211, 1363, 1363,

     1363, 1363, 1363, 1363, 1363, 1211, 1211, 1211, 1211, 1211,
     1211, 1212, 1212, 1212, 1212, 1212, 1213, 1214, 1214,   92,
       93, 1216, 1216, 1216, 1216, 1216, 1217, 1218, 1218, 1219,
     1363, 1221, 1221, 1221, 1221, 1221, 1222, 1223, 1223, 1225,
     1225, 1226, 1227, 1227, 1227, 1227, 1227, 1159, 1363, 1228,
     1228, 1228, 1228, 1228, 1228, 1229, 1229, 1230, 1231, 1231,
     1231, 1231, 1231, 1165, 1363, 1232, 1232, 1232, 1232, 1232,
     1232, 1232, 1232, 1167, 1363, 1363, 1363, 1363, 1233, 1233,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1233, 1233, 1233,
     1233, 1233, 1233, 1236, 1236, 1236, 1236, 1236, 1236, 1236,

     1236, 1165, 1363, 1236, 1236, 1236, 1236, 1236, 1236, 1363,
     1363, 1167, 1196, 1196, 1196, 1196, 1196, 1196, 1196, 1196,
     1248, 1248, 1248, 1248, 1248, 1248, 1248, 1248, 1249, 1249,
     1250, 1251, 1251, 1251, 1251, 1251, 1197, 1363, 1252, 1252,
     1252, 1252, 1252, 1252, 1253, 1253, 1254, 1255, 1255, 1255,
     1255, 1255, 1202, 1363, 1256, 1256, 1256, 1256, 1256, 1256,
     1257, 1257, 1258, 1259, 1259, 1259, 1259, 1259, 1208, 1363,
     1260, 1260, 1260, 1260, 1260, 1260, 1260, 1260, 1210, 1363,
     1363, 1363, 1363, 1261, 1261, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1261, 1261, 1261, 1261, 1261, 1261, 1263, 1263,

     1263, 1263, 1263, 1263, 1263, 1263, 1208, 1363, 1263, 1263,
     1263, 1263, 1263, 1263, 1363, 1363, 1210,   92,   93, 1264,
     1264, 1264, 1264, 1264, 1264, 1265, 1265, 1266, 1267, 1267,
     1267, 1267, 1267, 1219, 1363, 1268, 1268, 1268, 1268, 1268,
     1268,   92,   93, 1270, 1270, 1270, 1270, 1270, 1271, 1272,
     1272, 1273, 1363, 1275, 1275, 1275, 1275, 1275, 1276, 1277,
     1277, 1286, 1286, 1286, 1286, 1286, 1286, 1286, 1286, 1287,
     1287, 1287, 1287, 1287, 1288, 1289, 1289, 1289, 1289, 1289,
     1289, 1289, 1289, 1289, 1289, 1290, 1363, 1292, 1292, 1292,
     1292, 1292, 1293, 1294, 1294, 1295, 1363, 1297, 1297, 1297,

     1297, 1297, 1298, 1299, 1299,   92,   93, 1303, 1303, 1303,
     1303, 1303, 1304, 1305, 1305,   92,   93, 1306, 1306, 1306,
     1306, 1306, 1306, 1307, 1307, 1308, 1309, 1309, 1309, 1309,
     1309, 1273, 1363, 1310, 1310, 1310, 1310, 1310, 1310, 1289,
     1289, 1289, 1289, 1289, 1289, 1289, 1289, 1318, 1318, 1318,
     1318, 1318, 1318, 1318, 1318, 1319, 1319, 1320, 1321, 1321,
     1321, 1321, 1321, 1290, 1363, 1322, 1322, 1322, 1322, 1322,
     1322, 1323, 1323, 1324, 1325, 1325, 1325, 1325, 1325, 1295,
     1363, 1326, 1326, 1326, 1326, 1326, 1326,   92,   93, 1328,
     1328, 1328, 1328, 1328, 1328, 1329, 1363, 1331, 1331, 1331,

     1331, 1331, 1332, 1333, 1333, 1334, 1334, 1334, 1334, 1334,
     1334, 1334, 1334, 1335, 1335, 1335, 1335, 1335, 1336, 1337,
     1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1337, 1338,
     1363, 1340, 1340, 1340, 1340, 1340, 1341, 1342, 1342, 1344,
     1344, 1345, 1346, 1346, 1346, 1346, 1346, 1329, 1363, 1347,
     1347, 1347, 1347, 1347, 1347, 1337, 1337, 1337, 1337, 1337,
     1337, 1337, 1337, 1348, 1348, 1348, 1348, 1348, 1348, 1348,
     1348, 1349, 1349, 1350, 1351, 1351, 1351, 1351, 1351, 1338,
     1363, 1352, 1352, 1352, 1352, 1352, 1352, 1353, 1353, 1353,
     1353, 1353, 1353, 1353, 1353, 1354, 1354, 1354, 1354, 1354,

     1355, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356,
     1356, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1358,
     1358, 1358, 1358, 1358, 1359, 1360, 1360, 1360, 1360, 1360,
     1360, 1360, 1360, 1360, 1360, 1356, 1356, 1356, 1356, 1356,
     1356, 1356, 1356, 1361, 1361, 1361, 1361, 1361, 1361, 1361,
     1361, 1360, 1360, 1360, 1360, 1360, 1360, 1360, 1360, 1362,
     1362, 1362, 1362, 1362, 1362, 1362, 1362,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   46, 1363,   46,   81,
     1363,   81,   81,   81,   81,   81,   81,   81,   88,   88,
     1363,   88,   87,   87, 1363,   87,  123, 1363,  123,  126,

     1363,  126,  128,  128, 1363,  128,  129,  129, 1363,  129,
      165, 1363,  165,  166, 1363,  166,  166,  167,  167, 1363,
      167,  168,  168, 1363,  168,  176,  176, 1363,  176,  204,
     1363,  204,  207, 1363,  207,  208,  208, 1363,  208,  209,
      209, 1363,  209,  222,  222, 1363,  222,  227, 1363,  227,
      230, 1363,  230,  231,  231,  231,  231, 1363,  231,  251,
     1363,  251,  252,  252, 1363,  252,  253,  253, 1363,  253,
      261,  261,  261,  261, 1363,  261,  268,  268, 1363,  268,
      269,  269, 1363,  269,  278, 1363,  278,  295,  295,  295,
      298,  298,  298,  299,  299, 1363,  299,  300,  300, 1363,

      300,  320,  320, 1363,  320,  321,  321, 1363,  321,  330,
      330, 1363,  330,  335, 1363,  335,  338, 1363,  338,  340,
     1363,  340,  343, 1363,  343,  344,  344,  344,  344, 1363,
      344,  359,  359,  359,  360,  360, 1363,  360,  361,  361,
     1363,  361,  369,  369,  369,  369, 1363,  369,  376,  376,
      376,  376, 1363,  376,  383,  383, 1363,  383,  384,  384,
     1363,  384,  388,  388, 1363,  388,  396,  396, 1363,  396,
      338, 1363,  338,  405, 1363,  405,  343, 1363,  343,  409,
     1363,  409,   59, 1363, 1363,   59, 1363, 1363,   59,  424,
      424, 1363,  424,  425,  425, 1363,  425,  452,  452, 1363,

      452,  453,  453, 1363,  453,  460,  460, 1363,  460,  467,
     1363,  467,  470, 1363,  470,  471, 1363,  471,  471, 1363,
      471,  475,  475, 1363,  475,  479,  479,  479,  482,  482,
      482,  484, 1363,  484,  487, 1363,  487,  489, 1363,  489,
      492, 1363,  492,  493,  493,  493,  493, 1363,  493,   59,
     1363, 1363,   59, 1363, 1363,   59,  502, 1363,  502,  505,
     1363,  505,  506,  506, 1363,  506,  507,  507, 1363,  507,
      515,  515,  515,  515, 1363,  515,  522,  522,  522,  522,
     1363,  522,  529,  529,  529,  529, 1363,  529,  536,  536,
     1363,  536,  537,  537, 1363,  537,  541,  541, 1363,  541,

      545, 1363,  545,  545, 1363,  545,  548,  548, 1363,  548,
      470, 1363,  470,  555, 1363,  555,  560,  560, 1363,  560,
      482,  482,  482,  566,  566,  566,  487, 1363,  487,  570,
     1363,  570,  492, 1363,  492,  574, 1363,  574,  505, 1363,
      505,  588, 1363,  588,  589,  589, 1363,  589,  590,  590,
     1363,  590,  624,  624, 1363,  624,  625,  625, 1363,  625,
      632,  632, 1363,  632,  639,  639, 1363,  639,  646, 1363,
      646,  649, 1363,  649,  651, 1363,  651,  654, 1363,  654,
      655, 1363,  655,  655, 1363,  655,  659,  659, 1363,  659,
      663,  663,  663,  666,  666,  666,  668, 1363,  668,  671,

     1363,  671,  673, 1363,  673,  676, 1363,  676,  677,  677,
      677,  677, 1363,  677,  686, 1363,  686,  689, 1363,  689,
      690,  690, 1363,  690,  702,  702,  702,  702, 1363,  702,
      709,  709,  709,  709, 1363,  709,  716,  716,  716,  716,
     1363,  716,  723,  723,  723,  723, 1363,  723,  730,  730,
     1363,  730,  731,  731, 1363,  731,  735,  735, 1363,  735,
      739, 1363,  739,  739, 1363,  739,  742,  742, 1363,  742,
      746, 1363,  746,  746, 1363,  746,  749,  749, 1363,  749,
      649, 1363,  649,  756, 1363,  756,  654, 1363,  654,  760,
     1363,  760,  765,  765, 1363,  765,  666,  666,  666,  771,

      771,  771,  671, 1363,  671,  775, 1363,  775,  676, 1363,
      676,  779, 1363,  779,  689, 1363,  689,  793, 1363,  793,
      794,  794, 1363,  794,  802,  802,  802, 1363, 1363,  802,
      798,  798, 1363,  798,  805, 1363, 1363,  805,  809, 1363,
     1363,  809,  813, 1363, 1363,  813,  817, 1363, 1363,  817,
      821, 1363, 1363,  821,  823,  823, 1363,  823,  824,  824,
     1363,  824,  831,  831, 1363,  831,  838,  838, 1363,  838,
      845,  845, 1363,  845,  856, 1363,  856,  859, 1363,  859,
      861, 1363,  861,  864, 1363,  864,  865, 1363,  865,  865,
     1363,  865,  869,  869, 1363,  869,  873,  873,  873,  876,

      876,  876,  878, 1363,  878,  881, 1363,  881,  883, 1363,
      883,  886, 1363,  886,  887,  887,  887,  887, 1363,  887,
      896, 1363,  896,  899, 1363,  899,  905,  905, 1363,  905,
      904,  904, 1363,  904,  908,  908,  908, 1363, 1363,  908,
      909,  909,  909,  909, 1363,  909,  910,  910,  910, 1363,
     1363,  910,  911,  911,  911,  911, 1363,  911,  912,  912,
      912, 1363, 1363,  912,  913,  913,  913,  913, 1363,  913,
      914,  914,  914, 1363, 1363,  914,  915,  915,  915,  915,
     1363,  915,  916,  916,  916, 1363, 1363,  916,  917,  917,
      917,  917, 1363,  917,  918,  918,  918, 1363, 1363,  918,

      919,  919, 1363,  919,  920,  920, 1363,  920,  924,  924,
     1363,  924,  928, 1363,  928,  928, 1363,  928,  931,  931,
     1363,  931,  935, 1363,  935,  935, 1363,  935,  938,  938,
     1363,  938,  942, 1363,  942,  942, 1363,  942,  945,  945,
     1363,  945,  859, 1363,  859,  953, 1363,  953,  864, 1363,
      864,  957, 1363,  957,  962,  962, 1363,  962,  876,  876,
      876,  968,  968,  968,  881, 1363,  881,  972, 1363,  972,
      886, 1363,  886,  976, 1363,  976,  982, 1363, 1363,  982,
      899, 1363,  899,  987, 1363,  987,  989, 1363,  989,  992,
     1363,  992,  993, 1363,  993,  993, 1363,  993,  994,  994,

      994, 1363, 1363,  994,  995,  995,  995, 1363, 1363,  995,
      996,  996,  996, 1363, 1363,  996,  997,  997,  997, 1363,
     1363,  997,  998,  998,  998, 1363, 1363,  998,  999,  999,
      999, 1363, 1363,  999, 1000, 1000, 1000, 1363, 1363, 1000,
     1001, 1001, 1363, 1001, 1002, 1002, 1363, 1002, 1009, 1009,
     1363, 1009, 1016, 1016, 1363, 1016, 1023, 1023, 1363, 1023,
     1030, 1030, 1363, 1030, 1041, 1363, 1041, 1044, 1363, 1044,
     1046, 1363, 1046, 1049, 1363, 1049, 1050, 1363, 1050, 1050,
     1363, 1050, 1054, 1054, 1363, 1054, 1058, 1058, 1058, 1061,
     1061, 1061, 1063, 1363, 1063, 1066, 1363, 1066, 1068, 1363,

     1068, 1071, 1363, 1071, 1072, 1072, 1072, 1072, 1363, 1072,
     1073, 1073, 1073, 1363, 1363, 1073,  992, 1363,  992, 1081,
     1363, 1081, 1082, 1082, 1082, 1363, 1363, 1082, 1083, 1083,
     1083, 1363, 1363, 1083, 1084, 1084, 1084, 1363, 1363, 1084,
     1085, 1085, 1085, 1363, 1363, 1085, 1086, 1086, 1086, 1363,
     1363, 1086, 1087, 1087, 1087, 1363, 1363, 1087, 1088, 1088,
     1088, 1363, 1363, 1088, 1089, 1089, 1363, 1089, 1097, 1097,
     1363, 1097, 1101, 1363, 1101, 1101, 1363, 1101, 1104, 1104,
     1363, 1104, 1108, 1363, 1108, 1108, 1363, 1108, 1111, 1111,
     1363, 1111, 1115, 1363, 1115, 1115, 1363, 1115, 1118, 1118,

     1363, 1118, 1122, 1363, 1122, 1122, 1363, 1122, 1125, 1125,
     1363, 1125, 1044, 1363, 1044, 1133, 1363, 1133, 1049, 1363,
     1049, 1137, 1363, 1137, 1142, 1142, 1363, 1142, 1061, 1061,
     1061, 1148, 1148, 1148, 1066, 1363, 1066, 1152, 1363, 1152,
     1071, 1363, 1071, 1156, 1363, 1156, 1157, 1157, 1157, 1363,
     1363, 1157, 1160, 1363, 1160, 1163, 1363, 1163,  906,  906,
      906, 1363, 1363,  906, 1164, 1164, 1363, 1164, 1172, 1363,
     1363, 1172, 1168, 1168, 1363, 1168, 1175, 1363, 1363, 1175,
     1174, 1174, 1363, 1174, 1179, 1363, 1363, 1179, 1178, 1178,
     1363, 1178, 1183, 1363, 1363, 1183, 1182, 1182, 1363, 1182,

     1187, 1363, 1363, 1187, 1186, 1186, 1363, 1186, 1191, 1363,
     1363, 1191, 1190, 1190, 1363, 1190, 1198, 1363, 1198, 1201,
     1363, 1201, 1203, 1363, 1203, 1206, 1363, 1206, 1207, 1363,
     1207, 1207, 1363, 1207, 1211, 1211, 1363, 1211, 1215, 1215,
     1215, 1218, 1218, 1218, 1220, 1363, 1220, 1223, 1363, 1223,
     1224, 1224, 1224, 1363, 1363, 1224, 1163, 1363, 1163, 1228,
     1363, 1228, 1234, 1234, 1363, 1234, 1233, 1233, 1363, 1233,
     1237, 1363, 1363, 1237, 1238, 1363, 1238, 1238, 1363, 1238,
     1239, 1363, 1363, 1239, 1240, 1363, 1240, 1240, 1363, 1240,
     1241, 1363, 1363, 1241, 1242, 1363, 1242, 1242, 1363, 1242,

     1243, 1363, 1363, 1243, 1244, 1363, 1244, 1244, 1363, 1244,
     1245, 1363, 1363, 1245, 1246, 1363, 1246, 1246, 1363, 1246,
     1247, 1363, 1363, 1247, 1252, 1363, 1252, 1256, 1363, 1256,
     1262, 1363, 1363, 1262, 1261, 1261, 1363, 1261, 1264, 1264,
     1264, 1268, 1363, 1268, 1269, 1269, 1269, 1272, 1272, 1272,
     1274, 1363, 1274, 1277, 1363, 1277, 1278, 1363, 1278, 1278,
     1363, 1278, 1279, 1363, 1363, 1279, 1280, 1363, 1363, 1280,
     1281, 1363, 1363, 1281, 1282, 1363, 1363, 1282, 1283, 1363,
     1363, 1283, 1284, 1363, 1363, 1284, 1285, 1363, 1363, 1285,
     1291, 1363, 1291, 1294, 1363, 1294, 1296, 1363, 1296, 1299,

     1363, 1299, 1300, 1363, 1300, 1300, 1363, 1300, 1301, 1363,
     1363, 1301, 1302, 1302, 1302, 1305, 1305, 1305, 1306, 1306,
     1306, 1310, 1363, 1310, 1311, 1363, 1363, 1311, 1312, 1363,
     1363, 1312, 1313, 1363, 1363, 1313, 1314, 1363, 1363, 1314,
     1315, 1363, 1363, 1315, 1316, 1363, 1363, 1316, 1317, 1363,
     1363, 1317, 1322, 1363, 1322, 1326, 1363, 1326, 1327, 1363,
     1363, 1327, 1328, 1328, 1328, 1330, 1363, 1330, 1333, 1363,
     1333, 1235, 1363, 1363, 1235, 1339, 1363, 1339, 1342, 1363,
     1342, 1343, 1363, 1363, 1343, 1347, 1363, 1347, 1352, 1363,
     1352,    5, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,

     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363
    } ;

static yyconst short int yy_chk[8748] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    3,    3,    4,    4,   16,
     1352,   16,   16,   16,   16,   16,   16,   16,   16,   16,
       36,  148,   36, 1347,   16,   16,   18,   18,   18,   18,
       18,   18, 1342,   16,   16,   16,   16,   16,   16,   17,
       17,   17,   17,   17,   17,   17,   17,   24,  148,   38,

       24,   24,   24,   24,   24,   24,   24,   24,   24,   38,
       53,   53, 1340,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   28,   28,   34,   73,   25,   25,  248,  248,   73,
       28,   34,  250,  250,   25,   25,   25,   25,   25,   25,
       46,   46,   46,   46,   46,   46,   46,   46,   48, 1339,
       48,   48,   48,   48,   48,   48,   48,   48,   49,   71,
       49,   49,   49,   49,   49,   49,   49,   49,   49,  127,

      166,  184,  184,   49,   49,  295,  295, 1333,   71,  127,
      166,  184,   49,   49,   49,   49,   49,   49,   52,   52,
       52,   52,   52,   52,   52,   52,   54,   54,   54,   54,
       54,   54,   54,   54,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,  296,  296, 1331,  185,  185,   55,
       55,   96,   96,   96,   96,   96,   96,  185,   55,   55,
       55,   55,   55,   55,   60,   60,   60,   60,   60,   60,
       60,   60,  298,  298, 1330,  190,  190,   60,   60,  133,
      133,  133,  133,  133,  133,  190,   60,   60,   60,   60,
       60,   60,   82,   82,   82,   82,   82,   82,   82,   82,

       84,  333,   84,   84,   84,   84,   84,   84,   84,   84,
       86,  333,   86,   86,   86,   86,   86,   86,   86,   86,
       86,  357,  357,  357, 1326,   86,   86,  180,  180,  180,
      180,  180,  180,  180,   86,   86,   86,   86,   86,   86,
       89,   89,   89,   89,   89,   89,   89,   89,   89,   89,
      359,  359, 1325,  215,  215,   89,   89,  188,  188,  188,
      188,  188,  188,  215,   89,   89,   89,   89,   89,   89,
       93,   93,   93,   93,   93,   93,   93,   93,   94,   94,
       94,   94,   94,   94,   94,   94,   94,   94,   94,  402,
      402,  216,  216,   94,   94,  213,  213,  213,  213,  213,

      213,  216,   94,   94,   94,   94,   94,   94,   95,   95,
       95,   95,   95,   95,   95,   95,   97, 1323,   97,   97,
       97,   97,   97,   97,   97,   97,   98,   98,   98,   98,
       98,   98,   98,   98,  404,  404, 1322,  221,  221,   98,
       98,  219,  219,  219,  219,  219,  219,  221,   98,   98,
       98,   98,   98,   98,  121,  121,  121,  121,  121,  121,
      121,  121,  122,  122,  122,  122,  122,  122,  122,  122,
      125, 1310,  125,  125,  125,  125,  125,  125,  131,  131,
      131,  131,  131,  131,  131,  131,  131,  131,  131,  231,
      231,  261,  261,  131,  131,  479,  479,  480,  480,  231,

     1309,  261,  131,  131,  131,  131,  131,  131,  132,  132,
      132,  132,  132,  132,  132,  132,  134, 1307,  134,  134,
      134,  134,  134,  134,  134,  134,  137,  137,  137,  137,
      137,  137,  137,  137,  138,  138,  138,  138,  138,  138,
      138,  138,  139, 1300,  139,  139,  139,  139,  139,  139,
      139,  139,  140,  140,  140,  140,  140,  140,  140,  140,
      140,  140,  140,  482,  482,  282,  282,  140,  140,  273,
      273,  273,  273,  273,  273,  282,  140,  140,  140,  140,
      140,  140,  141,  141,  141,  141,  141,  141,  141,  141,
      283,  283,  288,  288, 1299,  141,  141,  566,  566, 1297,

      283,  391,  288, 1296,  141,  141,  141,  141,  141,  141,
      142,  391,  142,  142,  142,  142,  142,  142,  142,  142,
      143,  143,  143,  143,  143,  143,  143,  143,  144, 1294,
      144,  144,  144,  144,  144,  144,  163, 1292,  163,  163,
      163,  163,  163,  163,  163,  163,  169,  169,  169,  169,
      169,  169,  169,  169,  169,  169,  567,  567, 1291,  306,
      306,  169,  169,  286,  286,  286,  286,  286,  286,  306,
      169,  169,  169,  169,  169,  169,  170,  170,  170,  170,
      170,  170,  170,  170,  170,  170,  170,  569,  569,  307,
      307,  170,  170,  304,  304,  304,  304,  304,  304,  307,

      170,  170,  170,  170,  170,  170,  171,  171,  171,  171,
      171,  171,  171,  171,  663,  663, 1278,  312,  312,  171,
      171,  310,  310,  310,  310,  310,  310,  312,  171,  171,
      171,  171,  171,  171,  172, 1277,  172,  172,  172,  172,
      172,  172,  172,  172,  173,  173,  173,  173,  173,  173,
      173,  173,  174, 1275,  174,  174,  174,  174,  174,  174,
      179,  179,  179,  179,  179,  179,  179,  179,  182, 1274,
      182,  182,  182,  182,  182,  182,  182,  182,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,  313,
      313,  314,  314,  186,  186,  664,  664,  666,  666,  313,

     1268,  314,  186,  186,  186,  186,  186,  186,  187,  187,
      187,  187,  187,  187,  187,  187,  189, 1259,  189,  189,
      189,  189,  189,  189,  189,  189,  203,  203,  203,  203,
      203,  203,  203,  203,  206, 1257,  206,  206,  206,  206,
      206,  206,  211,  211,  211,  211,  211,  211,  211,  211,
      211,  211,  211,  694,  694,  319,  319,  211,  211,  317,
      317,  317,  317,  317,  317,  319,  211,  211,  211,  211,
      211,  211,  212,  212,  212,  212,  212,  212,  212,  212,
      214, 1256,  214,  214,  214,  214,  214,  214,  214,  214,
      217,  217,  217,  217,  217,  217,  217,  217,  217,  217,

      217,  771,  771,  344,  344,  217,  217,  325,  325,  325,
      325,  325,  325,  344,  217,  217,  217,  217,  217,  217,
      218,  218,  218,  218,  218,  218,  218,  218,  220, 1255,
      220,  220,  220,  220,  220,  220,  220,  220,  224,  224,
      224,  224,  224,  224,  224,  224,  369,  369,  376,  376,
     1253,  224,  224,  772,  772, 1252,  369, 1246,  376, 1244,
      224,  224,  224,  224,  224,  224,  226,  226,  226,  226,
      226,  226,  226,  226,  229, 1242,  229,  229,  229,  229,
      229,  229,  232, 1240,  232,  232,  232,  232,  232,  232,
      232,  232,  233,  233,  233,  233,  233,  233,  233,  233,

      233,  233,  233,  395,  396,  401, 1238,  233,  233,  774,
      774,  802,  802,  395,  396,  401,  233,  233,  233,  233,
      233,  233,  234,  234,  234,  234,  234,  234,  234,  234,
      805,  805, 1231,  413,  413,  234,  234,  399,  399,  399,
      399,  399,  399,  413,  234,  234,  234,  234,  234,  234,
      235, 1229,  235,  235,  235,  235,  235,  235,  235,  235,
      236,  236,  236,  236,  236,  236,  236,  236,  237, 1228,
      237,  237,  237,  237,  237,  237,  249,  249,  249,  249,
      249,  249,  249,  249,  249,  249,  254,  254,  254,  254,
      254,  254,  254,  254,  254,  254,  414,  414,  419,  419,

     1223,  254,  254,  809,  809, 1221,  414, 1220,  419, 1211,
      254,  254,  254,  254,  254,  254,  255,  255,  255,  255,
      255,  255,  255,  255,  255,  255,  255,  813,  813,  431,
      431,  255,  255,  417,  417,  417,  417,  417,  417,  431,
      255,  255,  255,  255,  255,  255,  256,  256,  256,  256,
      256,  256,  256,  256,  817,  817, 1207,  432,  432,  256,
      256,  429,  429,  429,  429,  429,  429,  432,  256,  256,
      256,  256,  256,  256,  257, 1206,  257,  257,  257,  257,
      257,  257,  257,  257,  258,  258,  258,  258,  258,  258,
      258,  258,  259, 1204,  259,  259,  259,  259,  259,  259,

      262,  262,  262,  262,  262,  262,  262,  262,  262,  262,
      262,  821,  821,  437,  437,  262,  262,  435,  435,  435,
      435,  435,  435,  437,  262,  262,  262,  262,  262,  262,
      263,  263,  263,  263,  263,  263,  263,  263,  438,  438,
      439,  439, 1203,  263,  263,  873,  873, 1201,  438,  459,
      439, 1199,  263,  263,  263,  263,  263,  263,  264,  459,
      264,  264,  264,  264,  264,  264,  264,  264,  265,  265,
      265,  265,  265,  265,  265,  265,  266, 1198,  266,  266,
      266,  266,  266,  266,  270,  270,  270,  270,  270,  270,
      270,  270,  874,  874, 1168,  444,  444,  270,  270,  442,

      442,  442,  442,  442,  442,  444,  270,  270,  270,  270,
      270,  270,  271, 1167,  271,  271,  271,  271,  271,  271,
      271,  271,  271,  445,  445,  446,  446,  271,  271,  876,
      876,  905,  905,  445, 1164,  446,  271,  271,  271,  271,
      271,  271,  272,  272,  272,  272,  272,  272,  272,  272,
      276,  460,  276,  276,  276,  276,  276,  276,  276,  276,
      280,  460,  280,  280,  280,  280,  280,  280,  280,  280,
      284,  284,  284,  284,  284,  284,  284,  284,  284,  284,
      284,  906,  906,  451,  451,  284,  284,  449,  449,  449,
      449,  449,  449,  451,  284,  284,  284,  284,  284,  284,

      285,  285,  285,  285,  285,  285,  285,  285,  287, 1163,
      287,  287,  287,  287,  287,  287,  287,  287,  294,  294,
      294,  294,  294,  294,  294,  294,  297,  297,  297,  297,
      297,  297,  297,  297,  302,  302,  302,  302,  302,  302,
      302,  302,  302,  302,  302,  908,  908,  465, 1161,  302,
      302,  457,  457,  457,  457,  457,  457,  465,  302,  302,
      302,  302,  302,  302,  303,  303,  303,  303,  303,  303,
      303,  303,  305, 1160,  305,  305,  305,  305,  305,  305,
      305,  305,  308,  308,  308,  308,  308,  308,  308,  308,
      308,  308,  308,  910,  910,  478, 1156,  308,  308,  463,

      463,  463,  463,  463,  463,  478,  308,  308,  308,  308,
      308,  308,  309,  309,  309,  309,  309,  309,  309,  309,
      311, 1155,  311,  311,  311,  311,  311,  311,  311,  311,
      315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
      315,  493,  493,  515,  515,  315,  315,  912,  912,  914,
      914,  493, 1153,  515,  315,  315,  315,  315,  315,  315,
      316,  316,  316,  316,  316,  316,  316,  316,  318,  544,
      318,  318,  318,  318,  318,  318,  318,  318,  323,  544,
      323,  323,  323,  323,  323,  323,  323,  323,  323,  522,
      522,  529,  529,  323,  323,  916,  916,  918,  918,  522,

     1152,  529,  323,  323,  323,  323,  323,  323,  324,  324,
      324,  324,  324,  324,  324,  324,  327,  327,  327,  327,
      327,  327,  327,  327,  328,  551,  328,  328,  328,  328,
      328,  328,  328,  328,  328,  551,  559,  560, 1146,  328,
      328,  968,  968,  969,  969, 1140,  559,  560,  328,  328,
      328,  328,  328,  328,  329,  329,  329,  329,  329,  329,
      329,  329,  971,  971, 1138,  565, 1137,  329,  329,  563,
      563,  563,  563,  563,  563,  565,  329,  329,  329,  329,
      329,  329,  331,  331,  331,  331,  331,  331,  331,  331,
      332, 1136,  332,  332,  332,  332,  332,  332,  982,  982,

      332,  334,  334,  334,  334,  334,  334,  334,  334,  337,
     1134,  337,  337,  337,  337,  337,  337,  339,  339,  339,
      339,  339,  339,  339,  339,  342, 1133,  342,  342,  342,
      342,  342,  342,  345, 1125,  345,  345,  345,  345,  345,
      345,  345,  345,  346,  346,  346,  346,  346,  346,  346,
      346,  346,  346,  346,  578,  578,  579,  579,  346,  346,
      994,  994,  995,  995,  578, 1122,  579,  346,  346,  346,
      346,  346,  346,  347,  347,  347,  347,  347,  347,  347,
      347,  996,  996, 1118,  584,  584,  347,  347,  582,  582,
      582,  582,  582,  582,  584,  347,  347,  347,  347,  347,

      347,  348, 1115,  348,  348,  348,  348,  348,  348,  348,
      348,  349,  349,  349,  349,  349,  349,  349,  349,  350,
     1111,  350,  350,  350,  350,  350,  350,  355,  355,  355,
      355,  355,  355,  355,  355,  356,  356,  356,  356,  356,
      356,  356,  356,  362,  362,  362,  362,  362,  362,  362,
      362,  362,  362,  997,  997, 1108,  596,  596,  362,  362,
      594,  594,  594,  594,  594,  594,  596,  362,  362,  362,
      362,  362,  362,  363,  363,  363,  363,  363,  363,  363,
      363,  363,  363,  363,  597,  597,  602,  602,  363,  363,
      998,  998,  999,  999,  597, 1104,  602,  363,  363,  363,

      363,  363,  363,  364,  364,  364,  364,  364,  364,  364,
      364, 1000, 1000, 1101,  603,  603,  364,  364,  600,  600,
      600,  600,  600,  600,  603,  364,  364,  364,  364,  364,
      364,  365, 1097,  365,  365,  365,  365,  365,  365,  365,
      365,  366,  366,  366,  366,  366,  366,  366,  366,  367,
     1094,  367,  367,  367,  367,  367,  367,  370,  370,  370,
      370,  370,  370,  370,  370,  370,  370,  370,  604,  604,
      609,  609,  370,  370, 1058, 1058, 1059, 1059,  604, 1089,
      609,  370,  370,  370,  370,  370,  370,  371,  371,  371,
      371,  371,  371,  371,  371, 1061, 1061, 1081,  610,  610,

      371,  371,  607,  607,  607,  607,  607,  607,  610,  371,
      371,  371,  371,  371,  371,  372, 1080,  372,  372,  372,
      372,  372,  372,  372,  372,  373,  373,  373,  373,  373,
      373,  373,  373,  374, 1078,  374,  374,  374,  374,  374,
      374,  377,  377,  377,  377,  377,  377,  377,  377,  377,
      377,  377,  611,  611,  616,  616,  377,  377, 1073, 1073,
     1082, 1082,  611, 1071,  616,  377,  377,  377,  377,  377,
      377,  378,  378,  378,  378,  378,  378,  378,  378, 1083,
     1083, 1069,  617,  617,  378,  378,  614,  614,  614,  614,
      614,  614,  617,  378,  378,  378,  378,  378,  378,  379,

     1068,  379,  379,  379,  379,  379,  379,  379,  379,  380,
      380,  380,  380,  380,  380,  380,  380,  381, 1066,  381,
      381,  381,  381,  381,  381,  385,  385,  385,  385,  385,
      385,  385,  385,  618,  618,  623,  623, 1064,  385,  385,
     1084, 1084, 1063,  618,  631,  623, 1054,  385,  385,  385,
      385,  385,  385,  386,  631,  386,  386,  386,  386,  386,
      386,  386,  386,  386, 1085, 1085,  632, 1050,  386,  386,
      621,  621,  621,  621,  621,  621,  632,  386,  386,  386,
      386,  386,  386,  387,  387,  387,  387,  387,  387,  387,
      387, 1086, 1086, 1049,  637, 1047,  387,  387,  629,  629,

      629,  629,  629,  629,  637,  387,  387,  387,  387,  387,
      387,  389,  389,  389,  389,  389,  389,  389,  389,  390,
     1046,  390,  390,  390,  390,  390,  390, 1087, 1087,  390,
      393,  638,  393,  393,  393,  393,  393,  393,  393,  393,
      397,  638,  397,  397,  397,  397,  397,  397,  397,  397,
      397, 1088, 1088,  639, 1044,  397,  397,  635,  635,  635,
      635,  635,  635,  639,  397,  397,  397,  397,  397,  397,
      398,  398,  398,  398,  398,  398,  398,  398,  403,  403,
      403,  403,  403,  403,  403,  403,  403,  403,  407,  644,
      407,  407,  407,  407,  407,  407,  407,  407,  411,  644,

      411,  411,  411,  411,  411,  411,  411,  411,  415,  415,
      415,  415,  415,  415,  415,  415,  415,  415,  415, 1148,
     1148,  662, 1042,  415,  415,  642,  642,  642,  642,  642,
      642,  662,  415,  415,  415,  415,  415,  415,  416,  416,
      416,  416,  416,  416,  416,  416,  418,  738,  418,  418,
      418,  418,  418,  418,  418,  418,  422,  738,  422,  422,
      422,  422,  422,  422,  422,  422,  427,  427,  427,  427,
      427,  427,  427,  427,  427,  427,  427,  677,  677,  702,
      702,  427,  427, 1149, 1149, 1151, 1151,  677, 1041,  702,
      427,  427,  427,  427,  427,  427,  428,  428,  428,  428,

      428,  428,  428,  428,  430, 1034,  430,  430,  430,  430,
      430,  430,  430,  430,  433,  433,  433,  433,  433,  433,
      433,  433,  433,  433,  433, 1157, 1157,  709,  709,  433,
      433,  693,  693,  693,  693,  693,  693,  709,  433,  433,
      433,  433,  433,  433,  434,  434,  434,  434,  434,  434,
      434,  434,  436, 1027,  436,  436,  436,  436,  436,  436,
      436,  436,  440,  440,  440,  440,  440,  440,  440,  440,
      440,  440,  440,  716,  716,  723,  723,  440,  440, 1215,
     1215, 1216, 1216,  716, 1020,  723,  440,  440,  440,  440,
      440,  440,  441,  441,  441,  441,  441,  441,  441,  441,

      443, 1013,  443,  443,  443,  443,  443,  443,  443,  443,
      447,  447,  447,  447,  447,  447,  447,  447,  447,  447,
      447,  745,  752,  764, 1007,  447,  447, 1218, 1218, 1224,
     1224,  745,  752,  764,  447,  447,  447,  447,  447,  447,
      448,  448,  448,  448,  448,  448,  448,  448,  450,  765,
      450,  450,  450,  450,  450,  450,  450,  450,  455,  765,
      455,  455,  455,  455,  455,  455,  455,  455,  455, 1225,
     1225,  770, 1002,  455,  455,  768,  768,  768,  768,  768,
      768,  770,  455,  455,  455,  455,  455,  455,  456,  456,
      456,  456,  456,  456,  456,  456,  461, 1001,  461,  461,

      461,  461,  461,  461,  461,  461,  461,  783,  783,  784,
      784,  461,  461, 1227, 1227, 1264, 1264,  783,  993,  784,
      461,  461,  461,  461,  461,  461,  462,  462,  462,  462,
      462,  462,  462,  462,  466,  466,  466,  466,  466,  466,
      466,  466,  469,  992,  469,  469,  469,  469,  469,  469,
      472,  472,  472,  472,  472,  472,  472,  472,  473,  801,
      473,  473,  473,  473,  473,  473,  473,  473,  473,  801,
      990,  789,  789,  473,  473,  787,  787,  787,  787,  787,
      787,  789,  473,  473,  473,  473,  473,  473,  474,  474,
      474,  474,  474,  474,  474,  474,  803,  803,  804,  804,

      989,  474,  474, 1265, 1265,  987,  803,  979,  804,  977,
      474,  474,  474,  474,  474,  474,  476,  476,  476,  476,
      476,  476,  476,  476,  477,  976,  477,  477,  477,  477,
      477,  477, 1267, 1267,  477,  481,  481,  481,  481,  481,
      481,  481,  481,  483,  483,  483,  483,  483,  483,  483,
      483,  486,  975,  486,  486,  486,  486,  486,  486,  488,
      488,  488,  488,  488,  488,  488,  488,  491,  973,  491,
      491,  491,  491,  491,  491,  494,  972,  494,  494,  494,
      494,  494,  494,  494,  494,  495,  495,  495,  495,  495,
      495,  495,  495,  495,  495,  495,  806,  806,  807,  807,

      495,  495, 1269, 1269, 1270, 1270,  806,  966,  807,  495,
      495,  495,  495,  495,  495,  496,  496,  496,  496,  496,
      496,  496,  496,  808,  808,  810,  810,  960,  496,  496,
     1272, 1272,  958,  808,  830,  810,  957,  496,  496,  496,
      496,  496,  496,  497,  830,  497,  497,  497,  497,  497,
      497,  497,  497,  498,  498,  498,  498,  498,  498,  498,
      498,  499,  956,  499,  499,  499,  499,  499,  499,  501,
      501,  501,  501,  501,  501,  501,  501,  504,  954,  504,
      504,  504,  504,  504,  504,  508,  508,  508,  508,  508,
      508,  508,  508,  508,  508,  811,  811,  812,  812,  953,

      508,  508, 1302, 1302,  945,  811,  942,  812,  938,  508,
      508,  508,  508,  508,  508,  509,  509,  509,  509,  509,
      509,  509,  509,  509,  509,  509,  814,  814,  815,  815,
      509,  509, 1303, 1303, 1305, 1305,  814,  935,  815,  509,
      509,  509,  509,  509,  509,  510,  510,  510,  510,  510,
      510,  510,  510,  816,  816,  818,  818,  931,  510,  510,
     1306, 1306,  928,  816,  831,  818,  924,  510,  510,  510,
      510,  510,  510,  511,  831,  511,  511,  511,  511,  511,
      511,  511,  511,  512,  512,  512,  512,  512,  512,  512,
      512,  513,  920,  513,  513,  513,  513,  513,  513,  516,

      516,  516,  516,  516,  516,  516,  516,  516,  516,  516,
      819,  819,  820,  820,  516,  516, 1328, 1328,  919,  902,
      819,  900,  820,  516,  516,  516,  516,  516,  516,  517,
      517,  517,  517,  517,  517,  517,  517,  822,  822,  836,
      837,  899,  517,  517,  897,  896,  894,  822,  838,  836,
      837,  517,  517,  517,  517,  517,  517,  518,  838,  518,
      518,  518,  518,  518,  518,  518,  518,  519,  519,  519,
      519,  519,  519,  519,  519,  520,  886,  520,  520,  520,
      520,  520,  520,  523,  523,  523,  523,  523,  523,  523,
      523,  523,  523,  523,  884,  883,  843,  881,  523,  523,

      828,  828,  828,  828,  828,  828,  843,  523,  523,  523,
      523,  523,  523,  524,  524,  524,  524,  524,  524,  524,
      524,  879,  878,  869,  844,  865,  524,  524,  834,  834,
      834,  834,  834,  834,  844,  524,  524,  524,  524,  524,
      524,  525,  864,  525,  525,  525,  525,  525,  525,  525,
      525,  526,  526,  526,  526,  526,  526,  526,  526,  527,
      862,  527,  527,  527,  527,  527,  527,  530,  530,  530,
      530,  530,  530,  530,  530,  530,  530,  530,  861,  859,
      845,  857,  530,  530,  841,  841,  841,  841,  841,  841,
      845,  530,  530,  530,  530,  530,  530,  531,  531,  531,

      531,  531,  531,  531,  531,  856,  849,  842,  850,  835,
      531,  531,  848,  848,  848,  848,  848,  848,  850,  531,
      531,  531,  531,  531,  531,  532,  829,  532,  532,  532,
      532,  532,  532,  532,  532,  533,  533,  533,  533,  533,
      533,  533,  533,  534,  825,  534,  534,  534,  534,  534,
      534,  538,  538,  538,  538,  538,  538,  538,  538,  824,
      823,  798,  872,  797,  538,  538,  853,  853,  853,  853,
      853,  853,  872,  538,  538,  538,  538,  538,  538,  539,
      794,  539,  539,  539,  539,  539,  539,  539,  539,  539,
      887,  887,  903,  793,  539,  539,  792,  790,  782,  780,

      887,  779,  903,  539,  539,  539,  539,  539,  539,  540,
      540,  540,  540,  540,  540,  540,  540,  904,  907,  909,
      909,  778,  540,  540,  776,  775,  769,  904,  907,  909,
      763,  540,  540,  540,  540,  540,  540,  542,  542,  542,
      542,  542,  542,  542,  542,  543,  761,  543,  543,  543,
      543,  543,  543,  760,  759,  543,  546,  757,  546,  546,
      546,  546,  546,  546,  546,  546,  546,  911,  911,  913,
      913,  546,  546,  756,  749,  746,  742,  911,  739,  913,
      546,  546,  546,  546,  546,  546,  547,  547,  547,  547,
      547,  547,  547,  547,  915,  915,  917,  917,  735,  547,

      547,  731,  730,  729,  915,  722,  917,  715,  547,  547,
      547,  547,  547,  547,  549,  549,  549,  549,  549,  549,
      549,  549,  550,  708,  550,  550,  550,  550,  550,  550,
      701,  695,  550,  553,  927,  553,  553,  553,  553,  553,
      553,  553,  553,  557,  927,  557,  557,  557,  557,  557,
      557,  557,  557,  561,  934,  561,  561,  561,  561,  561,
      561,  561,  561,  561,  934,  941,  948,  690,  561,  561,
      689,  687,  686,  684,  676,  941,  948,  561,  561,  561,
      561,  561,  561,  562,  562,  562,  562,  562,  562,  562,
      562,  568,  568,  568,  568,  568,  568,  568,  568,  568,

      568,  572,  961,  572,  572,  572,  572,  572,  572,  572,
      572,  576,  961,  576,  576,  576,  576,  576,  576,  576,
      576,  580,  580,  580,  580,  580,  580,  580,  580,  580,
      580,  580,  962,  967,  980,  980,  580,  580,  674,  673,
      671,  669,  962,  967,  980,  580,  580,  580,  580,  580,
      580,  581,  581,  581,  581,  581,  581,  581,  581,  583,
     1008,  583,  583,  583,  583,  583,  583,  583,  583,  586,
     1008,  586,  586,  586,  586,  586,  586,  586,  586,  591,
      591,  591,  591,  591,  591,  591,  591,  591,  668,  659,
      981,  981,  591,  591,  965,  965,  965,  965,  965,  965,

      981,  591,  591,  591,  591,  591,  591,  592,  592,  592,
      592,  592,  592,  592,  592,  592,  592,  592,  983,  983,
     1009,  655,  592,  592,  654,  652,  651,  649,  983,  647,
     1009,  592,  592,  592,  592,  592,  592,  593,  593,  593,
      593,  593,  593,  593,  593,  595,  646,  595,  595,  595,
      595,  595,  595,  595,  595,  598,  598,  598,  598,  598,
      598,  598,  598,  598,  598,  598,  643,  636, 1014,  630,
      598,  598, 1006, 1006, 1006, 1006, 1006, 1006, 1014,  598,
      598,  598,  598,  598,  598,  599,  599,  599,  599,  599,
      599,  599,  599,  601,  626,  601,  601,  601,  601,  601,

      601,  601,  601,  605,  605,  605,  605,  605,  605,  605,
      605,  605,  605,  605,  625,  624, 1015,  590,  605,  605,
     1012, 1012, 1012, 1012, 1012, 1012, 1015,  605,  605,  605,
      605,  605,  605,  606,  606,  606,  606,  606,  606,  606,
      606,  608,  589,  608,  608,  608,  608,  608,  608,  608,
      608,  612,  612,  612,  612,  612,  612,  612,  612,  612,
      612,  612, 1016, 1021, 1022,  588,  612,  612,  587,  585,
      577,  575, 1016, 1021, 1022,  612,  612,  612,  612,  612,
      612,  613,  613,  613,  613,  613,  613,  613,  613,  615,
      574,  615,  615,  615,  615,  615,  615,  615,  615,  619,

      619,  619,  619,  619,  619,  619,  619,  619,  619,  619,
      573,  571, 1023,  570,  619,  619, 1019, 1019, 1019, 1019,
     1019, 1019, 1023,  619,  619,  619,  619,  619,  619,  620,
      620,  620,  620,  620,  620,  620,  620,  622, 1028,  622,
      622,  622,  622,  622,  622,  622,  622,  627, 1028,  627,
      627,  627,  627,  627,  627,  627,  627,  627,  564,  558,
     1029,  556,  627,  627, 1026, 1026, 1026, 1026, 1026, 1026,
     1029,  627,  627,  627,  627,  627,  627,  628,  628,  628,
      628,  628,  628,  628,  628,  633, 1030,  633,  633,  633,
      633,  633,  633,  633,  633,  633, 1030,  555, 1035,  554,

      633,  633, 1033, 1033, 1033, 1033, 1033, 1033, 1035,  633,
      633,  633,  633,  633,  633,  634,  634,  634,  634,  634,
      634,  634,  634,  640, 1057,  640,  640,  640,  640,  640,
      640,  640,  640,  640, 1057,  552, 1072, 1072,  640,  640,
     1038, 1038, 1038, 1038, 1038, 1038, 1072,  640,  640,  640,
      640,  640,  640,  641,  641,  641,  641,  641,  641,  641,
      641,  645,  645,  645,  645,  645,  645,  645,  645,  648,
      548,  648,  648,  648,  648,  648,  648,  650,  650,  650,
      650,  650,  650,  650,  650,  653,  545,  653,  653,  653,
      653,  653,  653,  656,  656,  656,  656,  656,  656,  656,

      656,  657, 1100,  657,  657,  657,  657,  657,  657,  657,
      657,  657, 1100,  541, 1107,  537,  657,  657, 1076, 1076,
     1076, 1076, 1076, 1076, 1107,  657,  657,  657,  657,  657,
      657,  658,  658,  658,  658,  658,  658,  658,  658,  536,
      535,  528, 1114,  521,  658,  658, 1092, 1092, 1092, 1092,
     1092, 1092, 1114,  658,  658,  658,  658,  658,  658,  660,
      660,  660,  660,  660,  660,  660,  660,  661,  514,  661,
      661,  661,  661,  661,  661,  507,  506,  661,  665,  665,
      665,  665,  665,  665,  665,  665,  667,  667,  667,  667,
      667,  667,  667,  667,  670,  505,  670,  670,  670,  670,

      670,  670,  672,  672,  672,  672,  672,  672,  672,  672,
      675,  503,  675,  675,  675,  675,  675,  675,  678,  502,
      678,  678,  678,  678,  678,  678,  678,  678,  679,  679,
      679,  679,  679,  679,  679,  679,  679,  679,  679, 1121,
     1128, 1141,  500,  679,  679,  492,  490,  489,  487, 1121,
     1128, 1141,  679,  679,  679,  679,  679,  679,  680,  680,
      680,  680,  680,  680,  680,  680, 1142, 1147, 1171, 1173,
      485,  680,  680,  484,  475,  471, 1142, 1147, 1171, 1173,
      680,  680,  680,  680,  680,  680,  681,  470,  681,  681,
      681,  681,  681,  681,  681,  681,  682,  682,  682,  682,

      682,  682,  682,  682,  683,  468,  683,  683,  683,  683,
      683,  683,  685,  685,  685,  685,  685,  685,  685,  685,
      688,  467,  688,  688,  688,  688,  688,  688,  691, 1174,
      691,  691,  691,  691,  691,  691,  691,  691,  691, 1174,
      464, 1176,  458,  691,  691, 1145, 1145, 1145, 1145, 1145,
     1145, 1176,  691,  691,  691,  691,  691,  691,  692,  692,
      692,  692,  692,  692,  692,  692,  696,  696,  696,  696,
      696,  696,  696,  696,  696,  696,  696, 1177, 1178, 1180,
      454,  696,  696,  453,  452,  426,  425, 1177, 1178, 1180,
      696,  696,  696,  696,  696,  696,  698,  424,  698,  698,

      698,  698,  698,  698,  698,  698,  699,  699,  699,  699,
      699,  699,  699,  699,  700,  423,  700,  700,  700,  700,
      700,  700,  703,  703,  703,  703,  703,  703,  703,  703,
      703,  703,  703, 1181, 1182, 1184,  421,  703,  703,  412,
      410,  409,  408, 1181, 1182, 1184,  703,  703,  703,  703,
      703,  703,  705,  406,  705,  705,  705,  705,  705,  705,
      705,  705,  706,  706,  706,  706,  706,  706,  706,  706,
      707,  405,  707,  707,  707,  707,  707,  707,  710,  710,
      710,  710,  710,  710,  710,  710,  710,  710,  710, 1185,
     1186, 1188,  400,  710,  710,  394,  392,  388,  384, 1185,

     1186, 1188,  710,  710,  710,  710,  710,  710,  712,  383,
      712,  712,  712,  712,  712,  712,  712,  712,  713,  713,
      713,  713,  713,  713,  713,  713,  714,  382,  714,  714,
      714,  714,  714,  714,  717,  717,  717,  717,  717,  717,
      717,  717,  717,  717,  717, 1189, 1190, 1192,  375,  717,
      717,  368,  361,  360,  353, 1189, 1190, 1192,  717,  717,
      717,  717,  717,  717,  719,  351,  719,  719,  719,  719,
      719,  719,  719,  719,  720,  720,  720,  720,  720,  720,
      720,  720,  721,  343,  721,  721,  721,  721,  721,  721,
      724,  724,  724,  724,  724,  724,  724,  724,  724,  724,

      724,  341,  340, 1214,  338,  724,  724, 1195, 1195, 1195,
     1195, 1195, 1195, 1214,  724,  724,  724,  724,  724,  724,
      726,  336,  726,  726,  726,  726,  726,  726,  726,  726,
      727,  727,  727,  727,  727,  727,  727,  727,  728,  335,
      728,  728,  728,  728,  728,  728,  732,  732,  732,  732,
      732,  732,  732,  732, 1232, 1233, 1236, 1260,  330,  732,
      732,  326,  322,  321, 1232, 1233, 1236, 1260,  732,  732,
      732,  732,  732,  732,  733, 1261,  733,  733,  733,  733,
      733,  733,  733,  733,  733, 1261, 1263,  320,  301,  733,
      733,  300,  299,  293,  291,  290, 1263,  289,  733,  733,

      733,  733,  733,  733,  734,  734,  734,  734,  734,  734,
      734,  734,  281,  279,  278,  277,  275,  734,  734, 1288,
     1288, 1288, 1288, 1288, 1288,  274,  734,  734,  734,  734,
      734,  734,  736,  736,  736,  736,  736,  736,  736,  736,
      737,  269,  737,  737,  737,  737,  737,  737,  268,  267,
      737,  740,  260,  740,  740,  740,  740,  740,  740,  740,
      740,  740,  253,  252,  251,  247,  740,  740, 1336, 1336,
     1336, 1336, 1336, 1336,  245,  740,  740,  740,  740,  740,
      740,  741,  741,  741,  741,  741,  741,  741,  741,  243,
      242,  238,  230,  228,  741,  741, 1355, 1355, 1355, 1355,

     1355, 1355,  227,  741,  741,  741,  741,  741,  741,  743,
      743,  743,  743,  743,  743,  743,  743,  744,  223,  744,
      744,  744,  744,  744,  744,  222,  210,  744,  747,  209,
      747,  747,  747,  747,  747,  747,  747,  747,  747,  208,
      207,  205,  204,  747,  747, 1359, 1359, 1359, 1359, 1359,
     1359,  202,  747,  747,  747,  747,  747,  747,  748,  748,
      748,  748,  748,  748,  748,  748,  201,  200,  199,  198,
      197,  748,  748,  196,  195,  192,  183,  181,  177,  176,
      748,  748,  748,  748,  748,  748,  750,  750,  750,  750,
      750,  750,  750,  750,  751,  175,  751,  751,  751,  751,

      751,  751,  168,  167,  751,  753,  753,  753,  753,  753,
      753,  753,  753,  754,  754,  754,  754,  754,  754,  754,
      754,  755,  755,  755,  755,  755,  755,  755,  755,  758,
      165,  758,  758,  758,  758,  758,  758,  758,  758,  762,
      164,  762,  762,  762,  762,  762,  762,  762,  762,  766,
      162,  766,  766,  766,  766,  766,  766,  766,  766,  766,
      160,  159,  158,  157,  766,  766,  156,  155,  153,  152,
      150,  149,  147,  766,  766,  766,  766,  766,  766,  767,
      767,  767,  767,  767,  767,  767,  767,  773,  773,  773,
      773,  773,  773,  773,  773,  773,  773,  777,  146,  777,

      777,  777,  777,  777,  777,  777,  777,  781,  145,  781,
      781,  781,  781,  781,  781,  781,  781,  785,  785,  785,
      785,  785,  785,  785,  785,  785,  785,  785,  136,  135,
      130,  129,  785,  785,  128,  126,  124,  123,  119,  117,
      116,  785,  785,  785,  785,  785,  785,  786,  786,  786,
      786,  786,  786,  786,  786,  788,  115,  788,  788,  788,
      788,  788,  788,  788,  788,  791,  114,  791,  791,  791,
      791,  791,  791,  791,  791,  795,  795,  795,  795,  795,
      795,  795,  795,  796,  113,  796,  796,  796,  796,  796,
      796,  796,  796,  796,  112,  110,  109,  108,  796,  796,

      107,  106,  105,  101,   99,   92,   91,  796,  796,  796,
      796,  796,  796,  799,  799,  799,  799,  799,  799,  799,
      799,  800,   88,  800,  800,  800,  800,  800,  800,   87,
       85,  800,  826,   83,  826,  826,  826,  826,  826,  826,
      826,  826,  826,   80,   79,   78,   77,  826,  826,   76,
       75,   74,   72,   70,   69,   68,  826,  826,  826,  826,
      826,  826,  827,  827,  827,  827,  827,  827,  827,  827,
      832,   67,  832,  832,  832,  832,  832,  832,  832,  832,
      832,   66,   65,   64,   63,  832,  832,   62,   61,   51,
       50,   43,   40,   39,  832,  832,  832,  832,  832,  832,

      833,  833,  833,  833,  833,  833,  833,  833,  839,   37,
      839,  839,  839,  839,  839,  839,  839,  839,  839,   35,
       33,   32,   31,  839,  839,   30,   29,   27,   26,   23,
       22,   21,  839,  839,  839,  839,  839,  839,  840,  840,
      840,  840,  840,  840,  840,  840,  846,   19,  846,  846,
      846,  846,  846,  846,  846,  846,  846,   15,   14,    9,
        7,  846,  846,    5,    0,    0,    0,    0,    0,    0,
      846,  846,  846,  846,  846,  846,  847,  847,  847,  847,
      847,  847,  847,  847,  851,  851,  851,  851,  851,  851,
      851,  851,  852,  852,  852,  852,  852,  852,  852,  852,

      855,  855,  855,  855,  855,  855,  855,  855,  858,    0,
      858,  858,  858,  858,  858,  858,  860,  860,  860,  860,
      860,  860,  860,  860,  863,    0,  863,  863,  863,  863,
      863,  863,  866,  866,  866,  866,  866,  866,  866,  866,
      867,    0,  867,  867,  867,  867,  867,  867,  867,  867,
      867,    0,    0,    0,    0,  867,  867,    0,    0,    0,
        0,    0,    0,    0,  867,  867,  867,  867,  867,  867,
      868,  868,  868,  868,  868,  868,  868,  868,    0,    0,
        0,    0,    0,  868,  868,    0,    0,    0,    0,    0,
        0,    0,  868,  868,  868,  868,  868,  868,  870,  870,

      870,  870,  870,  870,  870,  870,  871,    0,  871,  871,
      871,  871,  871,  871,    0,    0,  871,  875,  875,  875,
      875,  875,  875,  875,  875,  877,  877,  877,  877,  877,
      877,  877,  877,  880,    0,  880,  880,  880,  880,  880,
      880,  882,  882,  882,  882,  882,  882,  882,  882,  885,
        0,  885,  885,  885,  885,  885,  885,  888,    0,  888,
      888,  888,  888,  888,  888,  888,  888,  889,  889,  889,
      889,  889,  889,  889,  889,  889,  889,  889,    0,    0,
        0,    0,  889,  889,    0,    0,    0,    0,    0,    0,
        0,  889,  889,  889,  889,  889,  889,  891,    0,  891,

      891,  891,  891,  891,  891,  891,  891,  892,  892,  892,
      892,  892,  892,  892,  892,  893,    0,  893,  893,  893,
      893,  893,  893,  895,  895,  895,  895,  895,  895,  895,
      895,  898,    0,  898,  898,  898,  898,  898,  898,  901,
        0,  901,  901,  901,  901,  901,  901,  901,  901,  921,
      921,  921,  921,  921,  921,  921,  921,    0,    0,    0,
        0,    0,  921,  921,    0,    0,    0,    0,    0,    0,
        0,  921,  921,  921,  921,  921,  921,  922,    0,  922,
      922,  922,  922,  922,  922,  922,  922,  922,    0,    0,
        0,    0,  922,  922,    0,    0,    0,    0,    0,    0,

        0,  922,  922,  922,  922,  922,  922,  923,  923,  923,
      923,  923,  923,  923,  923,    0,    0,    0,    0,    0,
      923,  923,    0,    0,    0,    0,    0,    0,    0,  923,
      923,  923,  923,  923,  923,  925,  925,  925,  925,  925,
      925,  925,  925,  926,    0,  926,  926,  926,  926,  926,
      926,    0,    0,  926,  929,    0,  929,  929,  929,  929,
      929,  929,  929,  929,  929,    0,    0,    0,    0,  929,
      929,    0,    0,    0,    0,    0,    0,    0,  929,  929,
      929,  929,  929,  929,  930,  930,  930,  930,  930,  930,
      930,  930,    0,    0,    0,    0,    0,  930,  930,    0,

        0,    0,    0,    0,    0,    0,  930,  930,  930,  930,
      930,  930,  932,  932,  932,  932,  932,  932,  932,  932,
      933,    0,  933,  933,  933,  933,  933,  933,    0,    0,
      933,  936,    0,  936,  936,  936,  936,  936,  936,  936,
      936,  936,    0,    0,    0,    0,  936,  936,    0,    0,
        0,    0,    0,    0,    0,  936,  936,  936,  936,  936,
      936,  937,  937,  937,  937,  937,  937,  937,  937,    0,
        0,    0,    0,    0,  937,  937,    0,    0,    0,    0,
        0,    0,    0,  937,  937,  937,  937,  937,  937,  939,
      939,  939,  939,  939,  939,  939,  939,  940,    0,  940,

      940,  940,  940,  940,  940,    0,    0,  940,  943,    0,
      943,  943,  943,  943,  943,  943,  943,  943,  943,    0,
        0,    0,    0,  943,  943,    0,    0,    0,    0,    0,
        0,    0,  943,  943,  943,  943,  943,  943,  944,  944,
      944,  944,  944,  944,  944,  944,    0,    0,    0,    0,
        0,  944,  944,    0,    0,    0,    0,    0,    0,    0,
      944,  944,  944,  944,  944,  944,  946,  946,  946,  946,
      946,  946,  946,  946,  947,    0,  947,  947,  947,  947,
      947,  947,    0,    0,  947,  950,  950,  950,  950,  950,
      950,  950,  950,  951,  951,  951,  951,  951,  951,  951,

      951,  952,  952,  952,  952,  952,  952,  952,  952,  955,
        0,  955,  955,  955,  955,  955,  955,  955,  955,  959,
        0,  959,  959,  959,  959,  959,  959,  959,  959,  963,
        0,  963,  963,  963,  963,  963,  963,  963,  963,  963,
        0,    0,    0,    0,  963,  963,    0,    0,    0,    0,
        0,    0,    0,  963,  963,  963,  963,  963,  963,  964,
      964,  964,  964,  964,  964,  964,  964,  970,  970,  970,
      970,  970,  970,  970,  970,  970,  970,  974,    0,  974,
      974,  974,  974,  974,  974,  974,  974,  978,    0,  978,
      978,  978,  978,  978,  978,  978,  978,  984,  984,  984,

      984,  984,  984,  984,  984,  985,  985,  985,  985,  985,
      985,  985,  985,  986,  986,  986,  986,  986,  986,  986,
      986,  988,  988,  988,  988,  988,  988,  988,  988,  991,
        0,  991,  991,  991,  991,  991,  991, 1003, 1003, 1003,
     1003, 1003, 1003, 1003, 1003, 1003,    0,    0,    0,    0,
     1003, 1003,    0,    0,    0,    0,    0,    0,    0, 1003,
     1003, 1003, 1003, 1003, 1003, 1004,    0, 1004, 1004, 1004,
     1004, 1004, 1004, 1004, 1004, 1004,    0,    0,    0,    0,
     1004, 1004,    0,    0,    0,    0,    0,    0,    0, 1004,
     1004, 1004, 1004, 1004, 1004, 1005, 1005, 1005, 1005, 1005,

     1005, 1005, 1005, 1010,    0, 1010, 1010, 1010, 1010, 1010,
     1010, 1010, 1010, 1010,    0,    0,    0,    0, 1010, 1010,
        0,    0,    0,    0,    0,    0,    0, 1010, 1010, 1010,
     1010, 1010, 1010, 1011, 1011, 1011, 1011, 1011, 1011, 1011,
     1011, 1017,    0, 1017, 1017, 1017, 1017, 1017, 1017, 1017,
     1017, 1017,    0,    0,    0,    0, 1017, 1017,    0,    0,
        0,    0,    0,    0,    0, 1017, 1017, 1017, 1017, 1017,
     1017, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1024,
        0, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024,
        0,    0,    0,    0, 1024, 1024,    0,    0,    0,    0,

        0,    0,    0, 1024, 1024, 1024, 1024, 1024, 1024, 1025,
     1025, 1025, 1025, 1025, 1025, 1025, 1025, 1031,    0, 1031,
     1031, 1031, 1031, 1031, 1031, 1031, 1031, 1031,    0,    0,
        0,    0, 1031, 1031,    0,    0,    0,    0,    0,    0,
        0, 1031, 1031, 1031, 1031, 1031, 1031, 1032, 1032, 1032,
     1032, 1032, 1032, 1032, 1032, 1036, 1036, 1036, 1036, 1036,
     1036, 1036, 1036, 1037, 1037, 1037, 1037, 1037, 1037, 1037,
     1037, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1043,
        0, 1043, 1043, 1043, 1043, 1043, 1043, 1045, 1045, 1045,
     1045, 1045, 1045, 1045, 1045, 1048,    0, 1048, 1048, 1048,

     1048, 1048, 1048, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
     1051, 1052,    0, 1052, 1052, 1052, 1052, 1052, 1052, 1052,
     1052, 1052,    0,    0,    0,    0, 1052, 1052,    0,    0,
        0,    0,    0,    0,    0, 1052, 1052, 1052, 1052, 1052,
     1052, 1053, 1053, 1053, 1053, 1053, 1053, 1053, 1053,    0,
        0,    0,    0,    0, 1053, 1053,    0,    0,    0,    0,
        0,    0,    0, 1053, 1053, 1053, 1053, 1053, 1053, 1055,
     1055, 1055, 1055, 1055, 1055, 1055, 1055, 1056,    0, 1056,
     1056, 1056, 1056, 1056, 1056,    0,    0, 1056, 1060, 1060,
     1060, 1060, 1060, 1060, 1060, 1060, 1062, 1062, 1062, 1062,

     1062, 1062, 1062, 1062, 1065,    0, 1065, 1065, 1065, 1065,
     1065, 1065, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
     1070,    0, 1070, 1070, 1070, 1070, 1070, 1070, 1074, 1074,
     1074, 1074, 1074, 1074, 1074, 1074, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1075, 1079,    0, 1079, 1079, 1079, 1079,
     1079, 1079, 1079, 1079, 1090,    0, 1090, 1090, 1090, 1090,
     1090, 1090, 1090, 1090, 1090,    0,    0,    0,    0, 1090,
     1090,    0,    0,    0,    0,    0,    0,    0, 1090, 1090,
     1090, 1090, 1090, 1090, 1091, 1091, 1091, 1091, 1091, 1091,
     1091, 1091, 1095,    0, 1095, 1095, 1095, 1095, 1095, 1095,

     1095, 1095, 1095,    0,    0,    0,    0, 1095, 1095,    0,
        0,    0,    0,    0,    0,    0, 1095, 1095, 1095, 1095,
     1095, 1095, 1098, 1098, 1098, 1098, 1098, 1098, 1098, 1098,
     1099,    0, 1099, 1099, 1099, 1099, 1099, 1099,    0,    0,
     1099, 1102,    0, 1102, 1102, 1102, 1102, 1102, 1102, 1102,
     1102, 1102,    0,    0,    0,    0, 1102, 1102,    0,    0,
        0,    0,    0,    0,    0, 1102, 1102, 1102, 1102, 1102,
     1102, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1105, 1106,
        0, 1106, 1106, 1106, 1106, 1106, 1106,    0,    0, 1106,
     1109,    0, 1109, 1109, 1109, 1109, 1109, 1109, 1109, 1109,

     1109,    0,    0,    0,    0, 1109, 1109,    0,    0,    0,
        0,    0,    0,    0, 1109, 1109, 1109, 1109, 1109, 1109,
     1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1113,    0,
     1113, 1113, 1113, 1113, 1113, 1113,    0,    0, 1113, 1116,
        0, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116, 1116,
        0,    0,    0,    0, 1116, 1116,    0,    0,    0,    0,
        0,    0,    0, 1116, 1116, 1116, 1116, 1116, 1116, 1119,
     1119, 1119, 1119, 1119, 1119, 1119, 1119, 1120,    0, 1120,
     1120, 1120, 1120, 1120, 1120,    0,    0, 1120, 1123,    0,
     1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123, 1123,    0,

        0,    0,    0, 1123, 1123,    0,    0,    0,    0,    0,
        0,    0, 1123, 1123, 1123, 1123, 1123, 1123, 1126, 1126,
     1126, 1126, 1126, 1126, 1126, 1126, 1127,    0, 1127, 1127,
     1127, 1127, 1127, 1127,    0,    0, 1127, 1130, 1130, 1130,
     1130, 1130, 1130, 1130, 1130, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1132, 1132, 1132, 1132, 1132, 1132, 1132,
     1132, 1135,    0, 1135, 1135, 1135, 1135, 1135, 1135, 1135,
     1135, 1139,    0, 1139, 1139, 1139, 1139, 1139, 1139, 1139,
     1139, 1143,    0, 1143, 1143, 1143, 1143, 1143, 1143, 1143,
     1143, 1143,    0,    0,    0,    0, 1143, 1143,    0,    0,

        0,    0,    0,    0,    0, 1143, 1143, 1143, 1143, 1143,
     1143, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1150,
     1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1154,
        0, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1154, 1159,
     1159, 1159, 1159, 1159, 1159, 1159, 1159, 1162,    0, 1162,
     1162, 1162, 1162, 1162, 1162, 1165, 1165, 1165, 1165, 1165,
     1165, 1165, 1165, 1166,    0, 1166, 1166, 1166, 1166, 1166,
     1166, 1166, 1166, 1166,    0,    0,    0,    0, 1166, 1166,
        0,    0,    0,    0,    0,    0,    0, 1166, 1166, 1166,
     1166, 1166, 1166, 1169, 1169, 1169, 1169, 1169, 1169, 1169,

     1169, 1170,    0, 1170, 1170, 1170, 1170, 1170, 1170,    0,
        0, 1170, 1193, 1193, 1193, 1193, 1193, 1193, 1193, 1193,
     1194, 1194, 1194, 1194, 1194, 1194, 1194, 1194, 1197, 1197,
     1197, 1197, 1197, 1197, 1197, 1197, 1200,    0, 1200, 1200,
     1200, 1200, 1200, 1200, 1202, 1202, 1202, 1202, 1202, 1202,
     1202, 1202, 1205,    0, 1205, 1205, 1205, 1205, 1205, 1205,
     1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1209,    0,
     1209, 1209, 1209, 1209, 1209, 1209, 1209, 1209, 1209,    0,
        0,    0,    0, 1209, 1209,    0,    0,    0,    0,    0,
        0,    0, 1209, 1209, 1209, 1209, 1209, 1209, 1212, 1212,

     1212, 1212, 1212, 1212, 1212, 1212, 1213,    0, 1213, 1213,
     1213, 1213, 1213, 1213,    0,    0, 1213, 1217, 1217, 1217,
     1217, 1217, 1217, 1217, 1217, 1219, 1219, 1219, 1219, 1219,
     1219, 1219, 1219, 1222,    0, 1222, 1222, 1222, 1222, 1222,
     1222, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1230,    0, 1230, 1230, 1230, 1230, 1230, 1230, 1230,
     1230, 1249, 1249, 1249, 1249, 1249, 1249, 1249, 1249, 1250,
     1250, 1250, 1250, 1250, 1250, 1250, 1250, 1251, 1251, 1251,
     1251, 1251, 1251, 1251, 1251, 1254,    0, 1254, 1254, 1254,
     1254, 1254, 1254, 1254, 1254, 1258,    0, 1258, 1258, 1258,

     1258, 1258, 1258, 1258, 1258, 1266, 1266, 1266, 1266, 1266,
     1266, 1266, 1266, 1266, 1266, 1271, 1271, 1271, 1271, 1271,
     1271, 1271, 1271, 1273, 1273, 1273, 1273, 1273, 1273, 1273,
     1273, 1276,    0, 1276, 1276, 1276, 1276, 1276, 1276, 1286,
     1286, 1286, 1286, 1286, 1286, 1286, 1286, 1287, 1287, 1287,
     1287, 1287, 1287, 1287, 1287, 1290, 1290, 1290, 1290, 1290,
     1290, 1290, 1290, 1293,    0, 1293, 1293, 1293, 1293, 1293,
     1293, 1295, 1295, 1295, 1295, 1295, 1295, 1295, 1295, 1298,
        0, 1298, 1298, 1298, 1298, 1298, 1298, 1304, 1304, 1304,
     1304, 1304, 1304, 1304, 1304, 1308,    0, 1308, 1308, 1308,

     1308, 1308, 1308, 1308, 1308, 1319, 1319, 1319, 1319, 1319,
     1319, 1319, 1319, 1320, 1320, 1320, 1320, 1320, 1320, 1320,
     1320, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1324,
        0, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1324, 1329,
     1329, 1329, 1329, 1329, 1329, 1329, 1329, 1332,    0, 1332,
     1332, 1332, 1332, 1332, 1332, 1334, 1334, 1334, 1334, 1334,
     1334, 1334, 1334, 1335, 1335, 1335, 1335, 1335, 1335, 1335,
     1335, 1338, 1338, 1338, 1338, 1338, 1338, 1338, 1338, 1341,
        0, 1341, 1341, 1341, 1341, 1341, 1341, 1344, 1344, 1344,
     1344, 1344, 1344, 1344, 1344, 1345, 1345, 1345, 1345, 1345,

     1345, 1345, 1345, 1346, 1346, 1346, 1346, 1346, 1346, 1346,
     1346, 1349, 1349, 1349, 1349, 1349, 1349, 1349, 1349, 1350,
     1350, 1350, 1350, 1350, 1350, 1350, 1350, 1351, 1351, 1351,
     1351, 1351, 1351, 1351, 1351, 1353, 1353, 1353, 1353, 1353,
     1353, 1353, 1353, 1354, 1354, 1354, 1354, 1354, 1354, 1354,
     1354, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1357, 1358,
     1358, 1358, 1358, 1358, 1358, 1358, 1358, 1364, 1364, 1364,
     1364, 1364, 1364, 1364, 1364, 1364, 1365,    0, 1365, 1366,
        0, 1366, 1366, 1366, 1366, 1366, 1366, 1366, 1367, 1367,
        0, 1367, 1368, 1368,    0, 1368, 1369,    0, 1369, 1370,

        0, 1370, 1371, 1371,    0, 1371, 1372, 1372,    0, 1372,
     1373,    0, 1373, 1374,    0, 1374, 1374, 1375, 1375,    0,
     1375, 1376, 1376,    0, 1376, 1377, 1377,    0, 1377, 1378,
        0, 1378, 1379,    0, 1379, 1380, 1380,    0, 1380, 1381,
     1381,    0, 1381, 1382, 1382,    0, 1382, 1383,    0, 1383,
     1384,    0, 1384, 1385, 1385, 1385, 1385,    0, 1385, 1386,
        0, 1386, 1387, 1387,    0, 1387, 1388, 1388,    0, 1388,
     1389, 1389, 1389, 1389,    0, 1389, 1390, 1390,    0, 1390,
     1391, 1391,    0, 1391, 1392,    0, 1392, 1393, 1393, 1393,
     1394, 1394, 1394, 1395, 1395,    0, 1395, 1396, 1396,    0,

     1396, 1397, 1397,    0, 1397, 1398, 1398,    0, 1398, 1399,
     1399,    0, 1399, 1400,    0, 1400, 1401,    0, 1401, 1402,
        0, 1402, 1403,    0, 1403, 1404, 1404, 1404, 1404,    0,
     1404, 1405, 1405, 1405, 1406, 1406,    0, 1406, 1407, 1407,
        0, 1407, 1408, 1408, 1408, 1408,    0, 1408, 1409, 1409,
     1409, 1409,    0, 1409, 1410, 1410,    0, 1410, 1411, 1411,
        0, 1411, 1412, 1412,    0, 1412, 1413, 1413,    0, 1413,
     1414,    0, 1414, 1415,    0, 1415, 1416,    0, 1416, 1417,
        0, 1417, 1418,    0,    0, 1418,    0,    0, 1418, 1419,
     1419,    0, 1419, 1420, 1420,    0, 1420, 1421, 1421,    0,

     1421, 1422, 1422,    0, 1422, 1423, 1423,    0, 1423, 1424,
        0, 1424, 1425,    0, 1425, 1426,    0, 1426, 1426,    0,
     1426, 1427, 1427,    0, 1427, 1428, 1428, 1428, 1429, 1429,
     1429, 1430,    0, 1430, 1431,    0, 1431, 1432,    0, 1432,
     1433,    0, 1433, 1434, 1434, 1434, 1434,    0, 1434, 1435,
        0,    0, 1435,    0,    0, 1435, 1436,    0, 1436, 1437,
        0, 1437, 1438, 1438,    0, 1438, 1439, 1439,    0, 1439,
     1440, 1440, 1440, 1440,    0, 1440, 1441, 1441, 1441, 1441,
        0, 1441, 1442, 1442, 1442, 1442,    0, 1442, 1443, 1443,
        0, 1443, 1444, 1444,    0, 1444, 1445, 1445,    0, 1445,

     1446,    0, 1446, 1446,    0, 1446, 1447, 1447,    0, 1447,
     1448,    0, 1448, 1449,    0, 1449, 1450, 1450,    0, 1450,
     1451, 1451, 1451, 1452, 1452, 1452, 1453,    0, 1453, 1454,
        0, 1454, 1455,    0, 1455, 1456,    0, 1456, 1457,    0,
     1457, 1458,    0, 1458, 1459, 1459,    0, 1459, 1460, 1460,
        0, 1460, 1461, 1461,    0, 1461, 1462, 1462,    0, 1462,
     1463, 1463,    0, 1463, 1464, 1464,    0, 1464, 1465,    0,
     1465, 1466,    0, 1466, 1467,    0, 1467, 1468,    0, 1468,
     1469,    0, 1469, 1469,    0, 1469, 1470, 1470,    0, 1470,
     1471, 1471, 1471, 1472, 1472, 1472, 1473,    0, 1473, 1474,

        0, 1474, 1475,    0, 1475, 1476,    0, 1476, 1477, 1477,
     1477, 1477,    0, 1477, 1478,    0, 1478, 1479,    0, 1479,
     1480, 1480,    0, 1480, 1481, 1481, 1481, 1481,    0, 1481,
     1482, 1482, 1482, 1482,    0, 1482, 1483, 1483, 1483, 1483,
        0, 1483, 1484, 1484, 1484, 1484,    0, 1484, 1485, 1485,
        0, 1485, 1486, 1486,    0, 1486, 1487, 1487,    0, 1487,
     1488,    0, 1488, 1488,    0, 1488, 1489, 1489,    0, 1489,
     1490,    0, 1490, 1490,    0, 1490, 1491, 1491,    0, 1491,
     1492,    0, 1492, 1493,    0, 1493, 1494,    0, 1494, 1495,
        0, 1495, 1496, 1496,    0, 1496, 1497, 1497, 1497, 1498,

     1498, 1498, 1499,    0, 1499, 1500,    0, 1500, 1501,    0,
     1501, 1502,    0, 1502, 1503,    0, 1503, 1504,    0, 1504,
     1505, 1505,    0, 1505, 1506, 1506, 1506,    0,    0, 1506,
     1507, 1507,    0, 1507, 1508,    0,    0, 1508, 1509,    0,
        0, 1509, 1510,    0,    0, 1510, 1511,    0,    0, 1511,
     1512,    0,    0, 1512, 1513, 1513,    0, 1513, 1514, 1514,
        0, 1514, 1515, 1515,    0, 1515, 1516, 1516,    0, 1516,
     1517, 1517,    0, 1517, 1518,    0, 1518, 1519,    0, 1519,
     1520,    0, 1520, 1521,    0, 1521, 1522,    0, 1522, 1522,
        0, 1522, 1523, 1523,    0, 1523, 1524, 1524, 1524, 1525,

     1525, 1525, 1526,    0, 1526, 1527,    0, 1527, 1528,    0,
     1528, 1529,    0, 1529, 1530, 1530, 1530, 1530,    0, 1530,
     1531,    0, 1531, 1532,    0, 1532, 1533, 1533,    0, 1533,
     1534, 1534,    0, 1534, 1535, 1535, 1535,    0,    0, 1535,
     1536, 1536, 1536, 1536,    0, 1536, 1537, 1537, 1537,    0,
        0, 1537, 1538, 1538, 1538, 1538,    0, 1538, 1539, 1539,
     1539,    0,    0, 1539, 1540, 1540, 1540, 1540,    0, 1540,
     1541, 1541, 1541,    0,    0, 1541, 1542, 1542, 1542, 1542,
        0, 1542, 1543, 1543, 1543,    0,    0, 1543, 1544, 1544,
     1544, 1544,    0, 1544, 1545, 1545, 1545,    0,    0, 1545,

     1546, 1546,    0, 1546, 1547, 1547,    0, 1547, 1548, 1548,
        0, 1548, 1549,    0, 1549, 1549,    0, 1549, 1550, 1550,
        0, 1550, 1551,    0, 1551, 1551,    0, 1551, 1552, 1552,
        0, 1552, 1553,    0, 1553, 1553,    0, 1553, 1554, 1554,
        0, 1554, 1555,    0, 1555, 1556,    0, 1556, 1557,    0,
     1557, 1558,    0, 1558, 1559, 1559,    0, 1559, 1560, 1560,
     1560, 1561, 1561, 1561, 1562,    0, 1562, 1563,    0, 1563,
     1564,    0, 1564, 1565,    0, 1565, 1566,    0,    0, 1566,
     1567,    0, 1567, 1568,    0, 1568, 1569,    0, 1569, 1570,
        0, 1570, 1571,    0, 1571, 1571,    0, 1571, 1572, 1572,

     1572,    0,    0, 1572, 1573, 1573, 1573,    0,    0, 1573,
     1574, 1574, 1574,    0,    0, 1574, 1575, 1575, 1575,    0,
        0, 1575, 1576, 1576, 1576,    0,    0, 1576, 1577, 1577,
     1577,    0,    0, 1577, 1578, 1578, 1578,    0,    0, 1578,
     1579, 1579,    0, 1579, 1580, 1580,    0, 1580, 1581, 1581,
        0, 1581, 1582, 1582,    0, 1582, 1583, 1583,    0, 1583,
     1584, 1584,    0, 1584, 1585,    0, 1585, 1586,    0, 1586,
     1587,    0, 1587, 1588,    0, 1588, 1589,    0, 1589, 1589,
        0, 1589, 1590, 1590,    0, 1590, 1591, 1591, 1591, 1592,
     1592, 1592, 1593,    0, 1593, 1594,    0, 1594, 1595,    0,

     1595, 1596,    0, 1596, 1597, 1597, 1597, 1597,    0, 1597,
     1598, 1598, 1598,    0,    0, 1598, 1599,    0, 1599, 1600,
        0, 1600, 1601, 1601, 1601,    0,    0, 1601, 1602, 1602,
     1602,    0,    0, 1602, 1603, 1603, 1603,    0,    0, 1603,
     1604, 1604, 1604,    0,    0, 1604, 1605, 1605, 1605,    0,
        0, 1605, 1606, 1606, 1606,    0,    0, 1606, 1607, 1607,
     1607,    0,    0, 1607, 1608, 1608,    0, 1608, 1609, 1609,
        0, 1609, 1610,    0, 1610, 1610,    0, 1610, 1611, 1611,
        0, 1611, 1612,    0, 1612, 1612,    0, 1612, 1613, 1613,
        0, 1613, 1614,    0, 1614, 1614,    0, 1614, 1615, 1615,

        0, 1615, 1616,    0, 1616, 1616,    0, 1616, 1617, 1617,
        0, 1617, 1618,    0, 1618, 1619,    0, 1619, 1620,    0,
     1620, 1621,    0, 1621, 1622, 1622,    0, 1622, 1623, 1623,
     1623, 1624, 1624, 1624, 1625,    0, 1625, 1626,    0, 1626,
     1627,    0, 1627, 1628,    0, 1628, 1629, 1629, 1629,    0,
        0, 1629, 1630,    0, 1630, 1631,    0, 1631, 1632, 1632,
     1632,    0,    0, 1632, 1633, 1633,    0, 1633, 1634,    0,
        0, 1634, 1635, 1635,    0, 1635, 1636,    0,    0, 1636,
     1637, 1637,    0, 1637, 1638,    0,    0, 1638, 1639, 1639,
        0, 1639, 1640,    0,    0, 1640, 1641, 1641,    0, 1641,

     1642,    0,    0, 1642, 1643, 1643,    0, 1643, 1644,    0,
        0, 1644, 1645, 1645,    0, 1645, 1646,    0, 1646, 1647,
        0, 1647, 1648,    0, 1648, 1649,    0, 1649, 1650,    0,
     1650, 1650,    0, 1650, 1651, 1651,    0, 1651, 1652, 1652,
     1652, 1653, 1653, 1653, 1654,    0, 1654, 1655,    0, 1655,
     1656, 1656, 1656,    0,    0, 1656, 1657,    0, 1657, 1658,
        0, 1658, 1659, 1659,    0, 1659, 1660, 1660,    0, 1660,
     1661,    0,    0, 1661, 1662,    0, 1662, 1662,    0, 1662,
     1663,    0,    0, 1663, 1664,    0, 1664, 1664,    0, 1664,
     1665,    0,    0, 1665, 1666,    0, 1666, 1666,    0, 1666,

     1667,    0,    0, 1667, 1668,    0, 1668, 1668,    0, 1668,
     1669,    0,    0, 1669, 1670,    0, 1670, 1670,    0, 1670,
     1671,    0,    0, 1671, 1672,    0, 1672, 1673,    0, 1673,
     1674,    0,    0, 1674, 1675, 1675,    0, 1675, 1676, 1676,
     1676, 1677,    0, 1677, 1678, 1678, 1678, 1679, 1679, 1679,
     1680,    0, 1680, 1681,    0, 1681, 1682,    0, 1682, 1682,
        0, 1682, 1683,    0,    0, 1683, 1684,    0,    0, 1684,
     1685,    0,    0, 1685, 1686,    0,    0, 1686, 1687,    0,
        0, 1687, 1688,    0,    0, 1688, 1689,    0,    0, 1689,
     1690,    0, 1690, 1691,    0, 1691, 1692,    0, 1692, 1693,

        0, 1693, 1694,    0, 1694, 1694,    0, 1694, 1695,    0,
        0, 1695, 1696, 1696, 1696, 1697, 1697, 1697, 1698, 1698,
     1698, 1699,    0, 1699, 1700,    0,    0, 1700, 1701,    0,
        0, 1701, 1702,    0,    0, 1702, 1703,    0,    0, 1703,
     1704,    0,    0, 1704, 1705,    0,    0, 1705, 1706,    0,
        0, 1706, 1707,    0, 1707, 1708,    0, 1708, 1709,    0,
        0, 1709, 1710, 1710, 1710, 1711,    0, 1711, 1712,    0,
     1712, 1713,    0,    0, 1713, 1714,    0, 1714, 1715,    0,
     1715, 1716,    0,    0, 1716, 1717,    0, 1717, 1718,    0,
     1718, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,

     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363, 1363,
     1363, 1363, 1363, 1363, 1363, 1363, 1363
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "policy.l"
#define INITIAL 0
#line 2 "policy.l"

#include <vector>
#include <string>
#include <sstream>

#include "policy_module.h"
#include "libxorp/xorp.h"
#include "policy/common/policy_utils.hh"
#include "policy_parser.hh"
#include "yacc.yy_policy_parser.cc.h"

#define yylval yy_policy_parserlval
#define yyerror yy_policy_parsererror
#define yyparse yy_policy_parserparse

void yyerror(const char *m);
extern int yyparse(void);

using namespace policy_parser;

// instantiate the globals here.
vector<Node*>* policy_parser::_parser_nodes;
unsigned policy_parser::_parser_lineno;

// try not to pollute
namespace {
	string _last_error;
	Term::BLOCKS _block;
}

#define YY_NO_UNPUT 1
#define YY_NEVER_INTERACTIVE 1
#define STR 1

#line 2878 "lex.yy_policy_parser.cc"

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

#line 62 "policy.l"


#line 3032 "lex.yy_policy_parser.cc"

	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1364 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 8692 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 64 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINTRANGE;
		}  
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 68 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINT;
		}  
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 72 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_INT;
		}  
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 76 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 80 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 84 "policy.l"
BEGIN(STR);
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 86 "policy.l"
BEGIN(INITIAL);
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 88 "policy.l"
{ yylval.c_str = strdup(yytext); 
		  _parser_lineno += policy_utils::count_nl(yytext);
		  /* XXX: a string can be started with " but terminated with '
		   * and vice versa...
		   */ 
		  return YY_STR;
		}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 96 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4RANGE;
		}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 101 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4;
		}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 106 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4NET;
		}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 112 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6RANGE;
		}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 117 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6;
		}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 122 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6NET;
		}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 127 "policy.l"
{
		  // the colon is an alias for asignment in action and equality
		  // in the source / dest blocks.
		  if (_block == Term::ACTION)
		  	return YY_ASSIGN;
		  else
		  	return YY_EQ;
		}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 136 "policy.l"
return YY_LPAR;
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 137 "policy.l"
return YY_RPAR;
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 138 "policy.l"
return YY_EQ; 
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 139 "policy.l"
return YY_NE;
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 140 "policy.l"
return YY_LE;
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 141 "policy.l"
return YY_GE;
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 142 "policy.l"
return YY_LT;
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 143 "policy.l"
return YY_GT;
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 144 "policy.l"
return YY_ADD;
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 145 "policy.l"
return YY_MUL;
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 146 "policy.l"
return YY_SUB;
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 147 "policy.l"
return YY_ASSIGN;
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 148 "policy.l"
return YY_PLUS_EQUALS;
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 149 "policy.l"
return YY_MINUS_EQUALS;
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 151 "policy.l"
return YY_IPNET_EQ;
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 152 "policy.l"
return YY_IPNET_LT;
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 153 "policy.l"
return YY_IPNET_GT;
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 154 "policy.l"
return YY_IPNET_LE;
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 155 "policy.l"
return YY_IPNET_GE;
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 156 "policy.l"
return YY_AND;
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 157 "policy.l"
return YY_OR;
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 158 "policy.l"
return YY_XOR;
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 159 "policy.l"
return YY_NOT;
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 160 "policy.l"
return YY_PLUS_EQUALS;
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 161 "policy.l"
return YY_MINUS_EQUALS;
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 162 "policy.l"
return YY_HEAD;
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 163 "policy.l"
return YY_CTR;
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 164 "policy.l"
return YY_NE_INT;
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 165 "policy.l"
return YY_ACCEPT;
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 166 "policy.l"
return YY_REJECT;
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 167 "policy.l"
return YY_SET;
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 168 "policy.l"
return YY_REGEX;
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 169 "policy.l"
return YY_PROTOCOL;
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 170 "policy.l"
return YY_NEXT;
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 171 "policy.l"
return YY_POLICY;
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 173 "policy.l"
{ yylval.c_str = strdup(yytext);
					  return YY_ID;
					}  
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 177 "policy.l"
return YY_SEMICOLON;
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 179 "policy.l"
/* eat blanks */
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 181 "policy.l"
_parser_lineno++;
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 183 "policy.l"
{ yyerror("Unknown character"); }
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 185 "policy.l"
ECHO;
	YY_BREAK
#line 3438 "lex.yy_policy_parser.cc"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(STR):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1364 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1364 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1363);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;


	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 185 "policy.l"


void yyerror(const char *m)
{
        ostringstream oss;
        oss << "Error on line " <<  _parser_lineno << " near (";

	for(int i = 0; i < yyleng; i++)
		oss << yytext[i];
	oss << "): " << m;

        _last_error = oss.str();
}

// Everything is put in the lexer because of YY_BUFFER_STATE...
int 
policy_parser::policy_parse(vector<Node*>& outnodes, const Term::BLOCKS& block, 
			    const string& conf, string& outerr)
{

        YY_BUFFER_STATE yybuffstate = yy_scan_string(conf.c_str());

        _last_error = "No error";
        _parser_nodes = &outnodes;
        _parser_lineno = 1;
	_block = block;

        int res = yyparse();
        
        yy_delete_buffer(yybuffstate);
        outerr = _last_error;
        
        return res;
}
