#define yy_create_buffer yy_policy_parser_create_buffer
#define yy_delete_buffer yy_policy_parser_delete_buffer
#define yy_scan_buffer yy_policy_parser_scan_buffer
#define yy_scan_string yy_policy_parser_scan_string
#define yy_scan_bytes yy_policy_parser_scan_bytes
#define yy_flex_debug yy_policy_parser_flex_debug
#define yy_init_buffer yy_policy_parser_init_buffer
#define yy_flush_buffer yy_policy_parser_flush_buffer
#define yy_load_buffer_state yy_policy_parser_load_buffer_state
#define yy_switch_to_buffer yy_policy_parser_switch_to_buffer
#define yyin yy_policy_parserin
#define yyleng yy_policy_parserleng
#define yylex yy_policy_parserlex
#define yyout yy_policy_parserout
#define yyrestart yy_policy_parserrestart
#define yytext yy_policy_parsertext

#line 19 "lex.yy_policy_parser.cc"
/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header$
 * $FreeBSD: src/usr.bin/lex/flex.skl,v 1.4 1999/10/27 07:56:44 obrien Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include <unistd.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t )) __unused;
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)


#define yywrap() 1
#define YY_SKIP_YYWRAP
typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 53
#define YY_END_OF_BUFFER 54
static yyconst short int yy_accept[1360] =
    {   0,
        0,    0,    0,    0,   54,   52,   50,   51,   52,    6,
       16,   17,   25,   24,   26,    2,    2,    2,   15,   49,
       22,   27,   23,   48,   48,   48,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
        8,    7,   50,   19,    3,    0,    2,    0,    0,    2,
        2,    2,   13,   20,   18,   21,   48,   48,   48,   48,
       48,   48,   48,   48,   48,   48,   48,   48,   48,   48,
       34,   48,   48,   48,   48,   48,   48,    8,    0,    0,
        0,    0,    2,    0,    0,   13,    2,    2,    0,    0,
       13,   13,   13,   13,   48,   48,   43,   48,   37,   33,

       39,   48,   48,   48,   48,   48,   48,   36,   48,   48,
       48,   48,   48,   48,   48,   35,    1,    0,    0,    0,
        0,    0,    2,    0,    0,    0,   13,   13,   13,   13,
        0,    0,   14,   14,    0,   13,    0,   13,   13,   13,
       13,   48,   48,   48,   48,   48,   38,   48,   48,   46,
       48,   48,   48,   48,   48,   48,    4,    0,    0,    0,
        0,    2,    0,    0,   13,   13,    0,   13,   13,   13,
       13,    0,    0,   14,   14,   14,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,   44,   48,   28,    5,
       48,   48,   48,   48,   48,   48,   48,   48,    0,    0,

        0,    0,    0,    0,    0,    0,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,    0,    0,   12,
       14,    0,    0,    0,    0,    0,   13,    0,   13,    0,
       13,   13,   13,   13,   41,   29,   40,   48,   48,   47,
       48,   42,   48,   10,   10,   10,    0,    0,    0,   13,
       13,    0,   13,   13,   13,   13,   13,   13,    0,   13,
       13,   13,   13,    0,    0,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,   13,   13,   13,
       13,   13,   13,   13,   48,   48,   48,   30,    0,    0,
       10,   10,   10,   10,    0,    0,    0,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,    0,    0,    0,   12,   12,
       12,   12,    0,   12,    0,   12,   12,   12,   12,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   13,
        0,   13,    0,   13,   13,   13,   13,   31,   48,   45,
        0,   11,   11,   11,   10,    0,    0,   13,   13,    0,
       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,   13,   13,    0,   13,   13,   13,   13,    0,    0,
       12,   12,    0,   12,   12,   12,   12,    0,    0,    0,
       12,   12,   12,   12,   12,   12,   12,   13,   13,   13,

        0,    0,    0,    0,    0,    0,    0,    0,   13,   13,
       13,   13,   13,   13,   13,   32,    0,    0,    0,    0,
        0,    0,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,    0,    0,    0,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,    0,    0,    0,    0,    0,   12,    0,   12,    0,
       12,   12,   12,   12,   13,   13,   13,   13,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   13,    0,
       13,    0,   13,   13,   13,   13,    0,    0,    0,    0,

        0,    0,    0,   13,   13,    0,   13,   13,   13,   13,
       13,   13,    0,   13,   13,   13,   13,   13,   13,    0,
       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,    0,    0,   12,   12,    0,   12,   12,   12,   12,
       12,   12,    0,   12,   12,   12,   12,    0,    0,    0,
        0,    0,    0,    0,   12,   12,   12,   12,   12,   12,
       12,   13,   13,   13,   13,    0,    0,    0,    0,    0,
        0,    0,    0,   13,   13,   13,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,    0,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
        0,    0,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       12,    0,   12,    0,   12,   12,   12,   12,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   13,    0,   13,    0,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   13,
        0,   13,    0,   13,   13,   13,   13,   13,   13,    0,

       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,   13,   13,    0,   13,   13,   13,   13,   13,   13,
        0,   13,   13,   13,   13,    0,    0,   12,   12,    0,
       12,   12,   12,   12,   12,   12,    0,   12,   12,   12,
       12,   12,   12,    0,   12,   12,   12,   12,   12,   12,
       12,    0,    0,    0,    0,    0,    0,    0,    0,   12,
       12,   12,   12,   12,   12,   12,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,    0,    0,   13,   13,
       13,   13,   13,   13,   13,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,    0,    0,
        0,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       12,    0,   12,    0,   12,   12,   12,   12,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   13,    0,   13,    0,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

       13,   13,    0,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,    0,    0,   12,   12,    0,   12,
       12,   12,   12,   12,   12,    0,   12,   12,   12,   12,
       12,   12,    0,   12,   12,   12,   12,   12,   12,    0,
       12,   12,   12,   12,   12,   12,   12,   12,    0,    0,
        0,    0,    0,    0,    0,    0,   12,   12,   12,   12,
       12,   12,   12,   13,   13,   13,   13,    0,    0,    0,
        0,    0,    0,    0,    0,   13,   13,   13,   13,    9,
        9,    9,    0,    0,    0,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,    0,    0,    0,   12,

       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   12,    0,   12,    0,   12,
       12,   12,   12,   13,   13,   13,   13,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   13,   13,    9,
        9,    9,    9,    0,    0,    0,    0,   13,   13,   13,
       13,   13,   13,   13,    0,    0,    0,    0,   12,    0,
       12,    0,   12,   12,   12,   12,   12,   12,    0,   12,

       12,   12,   12,   12,   12,    0,   12,   12,   12,   12,
       12,   12,    0,   12,   12,   12,   12,   12,   12,    0,
       12,   12,   12,   12,   12,   12,   12,   12,    0,    0,
        0,    0,    0,    0,    0,    0,   12,   12,   12,   12,
       12,   12,   12,   13,   13,   13,   13,    0,    0,    0,
        0,    0,   13,    9,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,   12,    0,   12,    0,   12,   12,   12,   12,
       13,   13,   13,   13,    0,    0,    0,    0,    0,   13,
       13,   13,   13,    0,    0,    0,    0,    0,    0,   12,
       12,    0,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,    0,    0,    0,
        0,    0,    0,    0,    0,   12,   12,   12,   12,   13,
       13,   13,   13,    0,   13,   13,   13,   13,    0,    0,
        0,    0,    0,    0,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   12,   12,   13,   13,   13,

       13,   13,    0,    0,    0,    0,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,    0,    0,    0,
        0,    0,   12,   13,    0,    0,    0,    0,    0,   12,
       12,   12,   12,    0,    0,    0,    0,    0,   12,   12,
       12,   12,    0,   12,   12,   12,   12,    0,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,    0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    1,    1,    1,    1,    6,    7,
        8,    9,   10,    1,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   20,   20,   21,   22,   23,   24,
       25,   26,    1,    1,   27,   27,   27,   27,   28,   27,
       29,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   31,   32,   33,   30,   30,   30,   34,   30,   30,
        1,    1,    1,    1,   35,    1,   36,   27,   37,   38,

       39,   40,   41,   42,   43,   44,   30,   45,   30,   46,
       47,   48,   30,   49,   50,   51,   52,   30,   30,   53,
       54,   30,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst int yy_meta[55] =
    {   0,
        1,    1,    1,    1,    2,    2,    1,    1,    1,    1,
        3,    4,    5,    6,    6,    6,    6,    6,    6,    6,
        6,    7,    1,    1,    1,    1,    8,    8,    3,    3,
        3,    3,    3,    3,    3,    8,    8,    8,    8,    8,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3
    } ;

static yyconst short int yy_base[1714] =
    {   0,
        0,    0,   50,   52, 5192, 8185, 5187, 8185, 5163, 8185,
     8185, 8185, 8185, 8185,   45,   55,   82,   70, 5165, 8185,
     5161, 5160, 5143,   93,  134, 5132, 5106,  120, 5076, 5073,
     5089, 5085, 5076,  120, 5073,   31, 5082, 5076, 5068, 5069,
        0, 8185, 5113, 8185,  161,  171,  181, 5073, 5065,  208,
       85,  216,  226, 8185, 8185, 8185,    0,  253, 5042, 5019,
     5014, 5006, 4991, 4979, 4991, 4981, 4989, 4978,  159, 4972,
      115, 4975, 4972, 4974, 4970, 4964, 4953,    0,  280, 4989,
      290, 4988,  300, 4977, 4976,  329,    0, 4985, 4984,  356,
      366,  393,  241,  403,  411, 4965,    0, 4953,    0,    0,

        0, 4954, 4940, 4942, 4923, 4905, 4858,    0, 4861, 4865,
     4863, 4854, 4865, 4854, 4861,    0,  438,  446, 4887, 4886,
      456, 4885,  192, 4865, 4850, 4849,  464,  491,  268,  501,
     4858, 4847,  509,  517,  527,  537,  564,  593,  601,   96,
     4856, 4845, 4832,  162, 4812, 4823,    0, 4822, 4814,    0,
     4804, 4788, 4797, 4786, 4795, 4780,    0, 4818,  611, 4817,
     4814,  193, 4803, 4802,  621,  650,  677,  706,  714,   98,
     4811, 4791, 4776, 8185,  722,  315, 4785,  732, 4784,  194,
      239,  742,  769,  344,  779,  266,    0, 4744,    0,    0,
     4745, 4742, 4751, 4740, 4734, 4750, 4735, 4737,  787, 4761,

     4760,  797, 4753, 4728, 4727, 4726,  805,  832,  381,  842,
      342,  379,  852,  879,  426,  889,  424, 4725, 4724,  897,
     8185,  924, 4733, 4732,  934, 4729,  475,  942,  952,  979,
     1008, 1016,  143, 4728,    0,    0,    0, 4700, 4687,    0,
     4681,    0, 4661,  156, 1026,  236, 4688, 4663, 4662, 1036,
     1065, 1092, 1121, 1129,  255, 4671,  477, 1139, 1166, 1195,
     1203,  303, 4670, 4659, 4658, 1211, 1240, 1267,  552, 4657,
     4664, 1277, 4663, 4662, 4661, 1287, 4641,  550,  574, 1297,
     1324,  636, 1334,  576, 4594, 4579, 4572,    0, 4604, 1342,
      313,  339, 1352,  377, 4593, 4592, 4591, 1360, 1387,  665,

     1397,  634,  663, 1407, 1434,  692, 1444,  690,  753,  755,
     1454, 1481,  820, 1491,  818, 4590, 4587, 4586, 1501, 1528,
      867, 4585, 1536, 1546, 1573, 4584, 1600, 1610,  291, 1619,
     4584, 4574, 1629, 4564, 1635, 4537, 4536, 1645, 4529,  865,
     1653, 1663, 1690, 1719, 1727,  413, 4514,    0, 4476,    0,
     1735, 1743,  479, 8185,  548, 4502, 4501, 1753, 1782, 1809,
     1838, 1846,  573, 4510,  907, 1856, 1883, 1912, 1920,  623,
     4509,  909, 1930, 1957, 1986, 1994,  653, 4508, 4495, 4494,
     2002, 2031, 2058, 4493, 2085, 2095,  963, 4502, 2106, 4501,
      964,  965, 2116, 2143,  994, 4477,  992,  687, 2153,  759,

     4486, 4485, 2163, 4484, 4483, 4482, 2173, 4481, 1046, 1048,
     2183, 2210, 1080, 2220, 1078,    0, 4478, 2230, 4477, 4466,
     4465, 4455, 2240, 2267, 1107, 2277, 1105, 1150, 2287, 2314,
     1181, 2324, 1152, 1179, 1221, 2334, 2361, 1255, 2371, 1223,
     1253, 1308, 2381, 2408, 1375, 2418, 1310, 4452, 4451, 4444,
     2428, 2455, 1422, 4429, 1241, 1278, 2465, 2492, 1469, 4420,
     1373, 2500, 4429, 4428, 2510, 4427, 4416, 2516, 2526, 2553,
     4402, 2580, 2590, 1420,  761,  816, 2601,  863, 2607, 4403,
     4402, 2617, 4401, 2623, 4400, 4390, 2633, 4387, 1467, 2641,
     2651, 2678, 2707, 2715,  906, 4386, 2723, 4379, 4364, 2733,

     4355, 4344, 4343, 2741, 2770, 2797, 2826, 2834,  961, 4352,
     1512, 2844, 2871, 2900, 2908,  963, 4351, 1514, 2918, 2945,
     2974, 2982,  981, 4337, 1557, 2992, 3019, 3048, 3056, 1045,
     4328, 4317, 4316, 3064, 3093, 3120, 4315, 3147, 3157, 1492,
     4305, 3168, 3195, 4298, 3222, 3232, 1559, 4307, 3243, 4304,
     4303, 4302, 3253, 4299, 1583, 1584, 3263, 3290, 1678, 4288,
     1585, 1076, 1102, 3300, 1156, 4297, 4259, 3310, 4258, 4257,
     4254, 3320, 4223, 1586, 1676, 3330, 3357, 1705, 3367, 1703,
     4207, 3377, 4205, 4204, 4155, 4154, 3385, 3414, 3441, 1768,
     3451, 1766, 1793, 3461, 3488, 1824, 3498, 1795, 1822, 1867,

     3508, 3535, 1898, 3545, 1869, 1896, 1941, 3555, 3582, 1972,
     3592, 1943, 1970, 2012, 3602, 3629, 2046, 3639, 2014, 4153,
     4150, 4108, 3649, 3676, 2073, 4107, 2032, 2044, 3686, 3713,
     2131, 4106, 2071, 2107, 2129, 3723, 3750, 2198, 4103, 2164,
     3758, 4071, 4070, 3768, 4069, 3774, 4066, 4029, 3784, 4027,
     3998, 3790, 3800, 3827, 3972, 3854, 3864, 2196, 1158, 1176,
     3875, 1228, 3881, 3971, 3970, 3891, 3969, 3897, 3966, 3945,
     3907, 3944, 2251, 3915, 3925, 3952, 3981, 3989, 1306, 3943,
     3997, 3942, 3939, 4007, 3916, 3898, 4015, 4042, 2302, 1316,
     3882, 4052,    0, 4081, 4089, 1363, 3873, 2253, 4099,    0,

     4128, 4136, 1410, 3872, 2300, 4146,    0, 4175, 4183, 1457,
     3865, 2345, 4193,    0, 4222, 4230, 1510, 3841, 2347, 4240,
        0, 4269, 4277, 1512, 3839, 3828, 3827, 4285, 4314, 4341,
     3804, 4368, 4378, 2221, 3802, 4389, 4416, 3775, 4443, 4453,
     2392, 3759, 4464, 4491, 3725, 4518, 4528, 2393, 4537, 4545,
     4553, 3700, 3698, 4563, 3663, 3661, 3660, 4573, 3616, 2394,
     2419, 4583, 4610, 2443, 3604, 2441, 1563, 1565, 4620, 1590,
     3613, 3593, 4630, 3575, 3574, 3573, 4640, 3572, 2476, 2478,
     4650, 4677, 2541, 4687, 2539, 3569, 4697, 3546, 3522, 3489,
     4705, 4715, 3465, 3442, 4742, 4752, 2527, 1618, 2563, 2565,

     1674, 2662, 2664, 2688, 1700, 2690, 2751, 2753, 1763, 2781,
     2783, 2807, 1799, 2809, 2855, 2857, 1801, 2881, 3426, 3418,
     3274, 4763, 4790, 2933, 3267, 2883, 2884, 4800, 4827, 2960,
     3223, 2931, 2958, 3003, 4837, 4864, 3034, 3208, 3004, 3005,
     3032, 4874, 4901, 3079, 3206, 3077, 4909, 4917, 3108, 8185,
     4925, 3214, 3209, 4935, 3190, 4941, 3169, 3158, 4951, 3139,
     3095, 4957, 4967, 4994, 3068, 5021, 5031, 3094, 1819, 1873,
     5042, 1875, 5048, 3076, 3049, 5058, 3033, 5064, 3031, 3006,
     5074, 2975, 3106, 5082, 5092,    0, 5121, 5129, 1885, 2959,
     5137, 2957, 2932, 5147, 2901, 2892, 5155, 2890, 3130, 3131,

     1947, 1949, 3132, 1967, 3133, 2019, 3179, 2068, 3181, 2103,
     3205, 2127, 3207, 2194, 2875, 2856, 5163, 5192, 5219, 2817,
     5246, 5256, 3244, 2810, 5267, 5294, 2808, 5321, 5331, 3264,
     2806, 5342, 5369, 2801, 5396, 5406, 3275, 2782, 5417, 5444,
     2754, 5471, 5481, 3276, 8185, 5490, 5498, 5506, 2762, 2760,
     5516, 2755, 2734, 2708, 5526, 2701, 3311, 3341, 5536, 5563,
     3400, 2689, 3342, 2257, 2259, 5573, 2298, 2697, 2692, 5583,
     2673, 2642, 2634, 5593, 2618, 3343, 3398, 2351, 3425, 5601,
     5609, 5617, 2591, 5625, 2576, 2574, 5635, 2572, 2557, 2353,
     2398, 2400, 2439, 2482, 2484, 2570, 2528, 2501, 5641, 5670,

     5697, 3476, 2477, 3368, 3427, 5707, 5734, 3523, 2456, 3474,
     3521, 3566, 5744, 5771, 3617, 2432, 3567, 3568, 3615, 5781,
     5808, 3664, 2385, 3640, 3662, 3687, 5818, 5845, 3701, 2362,
     3699, 5853, 5861, 3738, 8185, 5869, 2356, 2325, 5879, 2278,
     5885, 2262, 2197, 5895, 2130, 2086, 5901, 5911, 5938, 2062,
     5965, 5975, 3724, 2598, 2668, 5986, 2670, 5992, 2070, 2045,
     6002, 2043, 6008, 2025, 2023, 6018, 2021, 3736, 2695, 6024,
     6032, 3815, 8185, 2016, 6042, 1987, 1969, 2758, 2787, 2789,
     2814, 2861, 2863, 2888, 1942, 6052, 6079, 3842,    0, 1903,
     6089,    0, 1885, 6116, 6126, 3801, 1868, 6137,    0, 1829,

     6164, 6174, 3813, 1811, 6185,    0, 1794, 6212, 6222, 3840,
     1755, 6233,    0, 1710, 6260, 6270, 3936, 1692, 6281,    0,
     1644, 6308, 6318, 3937, 8185, 6327, 6335, 6343, 1646, 1630,
     6353, 1611, 1592, 1568, 6363, 1560, 3938, 3962, 6373, 6400,
     4030, 1537, 3963, 2929, 2955, 6410, 3009, 1523, 1445, 6420,
     1421, 1398, 3011, 8185, 6428, 1374, 1335, 6438, 1319, 1242,
     6444, 6454, 1224, 1222, 6481, 6491, 3964,    0, 3965, 4016,
        0, 4028, 4063, 4064,    0, 4065, 4072, 4110,    0, 4111,
     4112, 4119,    0, 4157, 4158, 4159,    0, 4166, 6500, 6508,
     4208, 8185, 6516, 1230, 1225, 6526, 1196, 6532, 1178, 1161,

     6542, 1122, 1094, 6548, 6558,    0, 1049, 6585, 6595, 4206,
     3029, 3074, 6606, 3137, 6612, 1057, 1055, 6622, 1050, 3165,
     3185, 6630, 3187, 1009,  993, 6640,  991, 4251, 4252,    0,
     8185, 4253,    0,  956,    0,  933,    0,  925,    0,  910,
        0,  908,    0, 8185, 6648, 6656, 6664,  916,  911, 6674,
      890,  843,  798, 6684,  780, 4260, 4295,    0, 4296, 3212,
     3240, 6694, 3280,  764, 3282, 3347, 6704, 3349, 6710,  733,
      707, 6720,  689,  623,    0,    0,    0,    0,    0,    0,
        0, 6726, 6734, 4329, 8185, 6742,  612,  594, 6752,  587,
     6758,  585,  583, 6768,  578,  518,    0, 3396, 3431, 6776,

     3433, 3472,  502, 6784,  486,  484,    0, 8185, 8185, 8185,
     8185, 8185, 8185, 8185, 6792, 6800, 6808,  457,  423, 6818,
      404,  341,    0, 3519, 6826,  265,  238, 6836,  201, 6842,
     6850, 4356, 8185, 6858,  199,   78, 6868,   69, 8185, 6874,
     6882, 6890,   67, 8185, 6898, 6906, 6914,   56, 6922, 6930,
     4404, 8185, 6938, 6946, 4431, 8185, 8185, 8185, 8185, 6967,
     6975, 6978, 6981, 6986, 6989, 6990, 6993, 6998, 7001, 7003,
     7006, 7009, 7014, 7017, 7018, 7021, 7024, 7029, 7032, 7035,
     7040, 7041, 7044, 7049, 7052, 7055, 7060, 7063, 7066, 7067,
     7070, 7073, 7076, 7079, 7084, 7087, 7090, 7093, 7096, 7101,

     7102, 7105, 7110, 7115, 7118, 7121, 7124, 7127, 7132, 7135,
     7138, 7141, 7145, 7148, 7151, 7154, 7157, 7160, 7165, 7168,
     7171, 7174, 7179, 7182, 7185, 7188, 7191, 7194, 7197, 7203,
     7208, 7211, 7212, 7215, 7220, 7225, 7230, 7233, 7236, 7239,
     7244, 7247, 7252, 7255, 7256, 7261, 7264, 7267, 7270, 7273,
     7276, 7279, 7282, 7283, 7286, 7289, 7292, 7295, 7298, 7303,
     7306, 7309, 7312, 7315, 7318, 7323, 7326, 7329, 7332, 7335,
     7338, 7341, 7346, 7349, 7350, 7355, 7360, 7365, 7370, 7373,
     7376, 7379, 7384, 7387, 7392, 7395, 7400, 7403, 7406, 7409,
     7410, 7415, 7418, 7421, 7424, 7427, 7430, 7433, 7436, 7437,

     7442, 7445, 7448, 7451, 7454, 7457, 7460, 7463, 7466, 7469,
     7472, 7475, 7480, 7483, 7486, 7489, 7492, 7495, 7500, 7503,
     7506, 7509, 7512, 7515, 7518, 7523, 7526, 7527, 7530, 7535,
     7540, 7545, 7550, 7555, 7560, 7565, 7570, 7575, 7580, 7585,
     7588, 7591, 7594, 7599, 7602, 7607, 7610, 7615, 7618, 7623,
     7626, 7629, 7632, 7633, 7638, 7641, 7644, 7647, 7650, 7653,
     7654, 7659, 7662, 7665, 7668, 7671, 7676, 7681, 7686, 7691,
     7696, 7701, 7706, 7709, 7712, 7715, 7718, 7721, 7724, 7729,
     7732, 7735, 7738, 7741, 7744, 7749, 7752, 7755, 7758, 7761,
     7764, 7767, 7772, 7777, 7780, 7783, 7788, 7793, 7798, 7803,

     7808, 7813, 7816, 7819, 7824, 7827, 7832, 7835, 7840, 7843,
     7848, 7851, 7856, 7859, 7862, 7865, 7866, 7871, 7874, 7877,
     7880, 7883, 7886, 7889, 7894, 7897, 7900, 7903, 7906, 7909,
     7912, 7915, 7918, 7921, 7924, 7927, 7930, 7933, 7936, 7939,
     7944, 7947, 7950, 7953, 7956, 7959, 7964, 7967, 7970, 7973,
     7976, 7981, 7984, 7985, 7988, 7991, 7996, 7999, 8004, 8007,
     8012, 8015, 8020, 8023, 8028, 8031, 8036, 8039, 8040, 8043,
     8048, 8051, 8054, 8057, 8060, 8063, 8066, 8069, 8072, 8075,
     8078, 8081, 8084, 8087, 8092, 8095, 8098, 8101, 8104, 8107,
     8112, 8115, 8118, 8121, 8122, 8125, 8128, 8131, 8134, 8137,

     8140, 8145, 8148, 8149, 8154, 8157, 8160, 8161, 8166, 8169,
     8170, 8175, 8178
    } ;

static yyconst short int yy_def[1714] =
    {   0,
     1359,    1, 1360, 1360, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359,   16,   17, 1359, 1359,
     1359, 1359, 1359, 1359,   24,   25,   25,   24,   24,   24,
       24,   25,   25,   25,   25,   25,   25,   25,   25,   25,
     1361, 1359, 1359, 1359, 1359, 1359, 1359, 1362, 1363,   47,
       50,   50, 1359, 1359, 1359, 1359,   25,   24,   25,   25,
       58,   58,   25,   25,   25,   58,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25, 1361, 1359, 1364,
     1359, 1365, 1359, 1366, 1367, 1359,   83,   83, 1359, 1359,
     1359,   91,   92,   92,   58,   25,   25,   95,   95,   25,

       25,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25, 1359, 1359, 1365, 1368,
     1359, 1359, 1369, 1359, 1370, 1371, 1359,  127,  128,  128,
     1359, 1372, 1359, 1359, 1359, 1359, 1359,  136,  136,  139,
      138,   25,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25, 1373, 1359, 1374,
     1359, 1369, 1375, 1376, 1359, 1359, 1359,  166,  166,  169,
      168, 1377, 1359, 1359, 1359, 1359, 1378, 1359, 1379, 1380,
     1380, 1359,  182,  183,  183, 1380,   25,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25, 1359, 1374,

     1381, 1359, 1359, 1359, 1382, 1383, 1359,  207,  208,  208,
     1384, 1384, 1359,  213,  214,  214, 1384, 1385, 1386, 1359,
     1359, 1359, 1379, 1387, 1359, 1359, 1359, 1359, 1359, 1359,
      229,  229,  232,  231,   25,   25,   25,   25,   25,   25,
       25,   25,   25, 1388, 1359, 1389, 1359, 1390, 1391, 1359,
     1359, 1359,  251,  251,  254,  253, 1359, 1359, 1359,  258,
      258,  261,  260, 1392, 1393, 1359, 1359,  267,  268, 1394,
     1395, 1359, 1396, 1359, 1397, 1359, 1398, 1399, 1399, 1359,
      280,  281,  281, 1399,   25,   25,   25,   25, 1359, 1359,
     1389, 1400, 1359, 1359, 1359, 1401, 1402, 1359,  298,  299,

      299, 1403, 1403, 1359,  304,  305,  305, 1403, 1404, 1404,
     1359,  311,  312,  312, 1404, 1359, 1405, 1406, 1359,  319,
      320, 1407, 1359, 1359, 1359, 1408,  324, 1408, 1408, 1359,
     1409, 1410, 1359, 1359, 1359, 1411, 1412, 1359, 1359, 1359,
     1359, 1359, 1359,  342,  342,  345,  344, 1413, 1413, 1413,
     1359, 1359, 1359, 1359, 1359, 1414, 1415, 1359, 1359, 1359,
      359,  359,  362,  361, 1359, 1359, 1359,  366,  366,  369,
      368, 1359, 1359, 1359,  373,  373,  376,  375, 1416, 1417,
     1359, 1359, 1359, 1418,  382, 1418, 1418, 1419, 1359, 1420,
     1421, 1421, 1359,  393,  394, 1422, 1421, 1423, 1359, 1424,

     1359, 1425, 1359, 1426, 1359, 1427, 1359, 1428, 1429, 1429,
     1359,  411,  412,  412, 1429, 1430, 1431, 1359, 1432, 1359,
     1433, 1434, 1359,  423,  424,  424, 1435, 1435, 1359,  429,
      430,  430, 1435, 1436, 1436, 1359,  436,  437,  437, 1436,
     1437, 1437, 1359,  443,  444,  444, 1437, 1359, 1438, 1439,
     1359,  451,  452, 1440, 1441, 1441, 1359,  457,  458, 1442,
     1441, 1359, 1443, 1444, 1359, 1359, 1359, 1359, 1359, 1359,
     1445,  469, 1445, 1445, 1446, 1447, 1359, 1359, 1359, 1448,
     1449, 1359, 1359, 1359, 1450, 1451, 1359, 1359, 1359, 1359,
     1359, 1359,  491,  491,  494,  493, 1359, 1452, 1453, 1359,

     1359, 1454, 1455, 1359, 1359, 1359,  505,  505,  508,  507,
     1359, 1359, 1359,  512,  512,  515,  514, 1359, 1359, 1359,
      519,  519,  522,  521, 1359, 1359, 1359,  526,  526,  529,
      528, 1456, 1457, 1359, 1359, 1359, 1458,  535, 1458, 1458,
     1359, 1359, 1359, 1459,  542, 1459, 1459, 1460, 1359, 1461,
     1359, 1462, 1359, 1463, 1464, 1464, 1359,  557,  558, 1465,
     1464, 1359, 1466, 1359, 1467, 1359, 1468, 1359, 1469, 1359,
     1470, 1359, 1471, 1472, 1472, 1359,  576,  577,  577, 1472,
     1473, 1359, 1474, 1359, 1359, 1475, 1359, 1359,  588,  589,
      589, 1476, 1476, 1359,  594,  595,  595, 1476, 1477, 1477,

     1359,  601,  602,  602, 1477, 1478, 1478, 1359,  608,  609,
      609, 1478, 1479, 1479, 1359,  615,  616,  616, 1479, 1359,
     1480, 1481, 1359,  623,  624, 1482, 1483, 1483, 1359,  629,
      630, 1484, 1483, 1485, 1485, 1359,  636,  637, 1486, 1485,
     1359, 1487, 1488, 1359, 1359, 1359, 1489, 1490, 1359, 1359,
     1359, 1359, 1359, 1359, 1491,  653, 1491, 1491, 1492, 1493,
     1359, 1359, 1359, 1494, 1495, 1359, 1359, 1359, 1496, 1497,
     1359, 1359, 1359, 1359, 1359, 1359,  675,  675,  678,  677,
     1359, 1498, 1499, 1359, 1359, 1500, 1359,  687,  688, 1501,
     1502, 1359, 1503,  692,  692,  695,  694, 1359, 1359, 1504,

      699,  699,  702,  701, 1359, 1359, 1505,  706,  706,  709,
      708, 1359, 1359, 1506,  713,  713,  716,  715, 1359, 1359,
     1507,  720,  720,  723,  722, 1508, 1509, 1359, 1359, 1359,
     1510,  729, 1510, 1510, 1359, 1359, 1359, 1511,  736, 1511,
     1511, 1359, 1359, 1359, 1512,  743, 1512, 1512, 1359, 1359,
     1359, 1359, 1513, 1359, 1514, 1359, 1515, 1359, 1516, 1517,
     1517, 1359,  762,  763, 1518, 1517, 1359, 1519, 1359, 1520,
     1359, 1521, 1359, 1522, 1359, 1523, 1359, 1524, 1525, 1525,
     1359,  781,  782,  782, 1525, 1526, 1359, 1527, 1359, 1359,
     1359, 1359, 1528, 1529,  792, 1529, 1529, 1530, 1531, 1531,

     1532, 1531, 1533, 1533, 1534, 1533, 1535, 1535, 1536, 1535,
     1537, 1537, 1538, 1537, 1539, 1539, 1540, 1539, 1359, 1541,
     1542, 1359,  822,  823, 1543, 1544, 1544, 1359,  828,  829,
     1545, 1544, 1546, 1546, 1359,  835,  836, 1547, 1546, 1548,
     1548, 1359,  842,  843, 1549, 1548, 1359, 1359, 1359, 1359,
     1359, 1550, 1551, 1359, 1359, 1359, 1552, 1553, 1359, 1359,
     1359, 1359, 1359, 1359, 1554,  863, 1554, 1554, 1555, 1556,
     1359, 1359, 1359, 1557, 1558, 1359, 1359, 1359, 1559, 1560,
     1359, 1359, 1359, 1359, 1359, 1561,  885,  885,  888,  887,
     1359, 1562, 1563, 1359, 1359, 1564, 1359, 1565, 1566, 1566,

     1567, 1359, 1566, 1568, 1359, 1569, 1359, 1570, 1359, 1571,
     1359, 1572, 1359, 1573, 1574, 1575, 1359, 1359, 1359, 1576,
      918, 1576, 1576, 1359, 1359, 1359, 1577,  925, 1577, 1577,
     1359, 1359, 1359, 1578,  932, 1578, 1578, 1359, 1359, 1359,
     1579,  939, 1579, 1579, 1359, 1359, 1359, 1359, 1359, 1580,
     1359, 1581, 1359, 1582, 1359, 1583, 1584, 1584, 1359,  959,
      960, 1585, 1584, 1359, 1586, 1359, 1587, 1359, 1588, 1359,
     1589, 1359, 1590, 1359, 1591, 1592, 1592, 1593, 1592, 1359,
     1359, 1359, 1359, 1359, 1594, 1595, 1359, 1359, 1359, 1596,
     1597, 1598, 1599, 1600, 1601, 1602, 1359, 1603, 1359, 1359,

     1000, 1001, 1604, 1605, 1605, 1359, 1006, 1007, 1606, 1605,
     1607, 1607, 1359, 1013, 1014, 1608, 1607, 1609, 1609, 1359,
     1020, 1021, 1610, 1609, 1611, 1611, 1359, 1027, 1028, 1612,
     1611, 1359, 1359, 1359, 1359, 1359, 1613, 1614, 1359, 1359,
     1359, 1615, 1616, 1359, 1359, 1359, 1359, 1359, 1359, 1617,
     1048, 1617, 1617, 1618, 1619, 1359, 1359, 1359, 1620, 1621,
     1359, 1359, 1359, 1622, 1623, 1359, 1359, 1359, 1624, 1359,
     1359, 1359, 1359, 1625, 1359, 1626, 1359, 1627, 1359, 1359,
     1359, 1359, 1359, 1359, 1628, 1359, 1086, 1087, 1629, 1630,
     1359, 1631, 1632, 1091, 1632, 1632, 1359, 1359, 1633, 1634,

     1098, 1634, 1634, 1359, 1359, 1635, 1636, 1105, 1636, 1636,
     1359, 1359, 1637, 1638, 1112, 1638, 1638, 1359, 1359, 1639,
     1640, 1119, 1640, 1640, 1359, 1359, 1359, 1359, 1359, 1641,
     1359, 1642, 1359, 1643, 1359, 1644, 1645, 1645, 1359, 1139,
     1140, 1646, 1645, 1359, 1647, 1359, 1648, 1359, 1649, 1359,
     1650, 1359, 1651, 1359, 1359, 1652, 1653, 1359, 1359, 1359,
     1359, 1359, 1654, 1655, 1162, 1655, 1655, 1656, 1657, 1657,
     1658, 1657, 1659, 1659, 1660, 1659, 1661, 1661, 1662, 1661,
     1663, 1663, 1664, 1663, 1665, 1665, 1666, 1665, 1359, 1359,
     1359, 1359, 1359, 1642, 1667, 1359, 1359, 1359, 1644, 1668,

     1359, 1359, 1359, 1359, 1359, 1669, 1670, 1205, 1670, 1670,
     1648, 1671, 1359, 1359, 1359, 1650, 1672, 1359, 1359, 1359,
     1673, 1359, 1674, 1359, 1675, 1359, 1676, 1677, 1677, 1678,
     1359, 1677, 1679, 1359, 1680, 1359, 1681, 1359, 1682, 1359,
     1683, 1359, 1684, 1359, 1359, 1359, 1359, 1359, 1685, 1359,
     1686, 1359, 1687, 1359, 1688, 1689, 1689, 1690, 1689, 1359,
     1691, 1359, 1692, 1359, 1674, 1693, 1359, 1359, 1359, 1676,
     1694, 1359, 1359, 1359, 1695, 1696, 1697, 1698, 1699, 1700,
     1701, 1359, 1359, 1359, 1359, 1359, 1686, 1702, 1359, 1359,
     1359, 1688, 1703, 1359, 1359, 1359, 1704, 1692, 1705, 1359,

     1359, 1359, 1706, 1359, 1707, 1359, 1708, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1709, 1359,
     1710, 1359, 1711, 1359, 1359, 1707, 1712, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1710, 1713, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,    0, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,

     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,

     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,

     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,

     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359
    } ;

static yyconst short int yy_nxt[8240] =
    {   0,
        6,    7,    8,    9,   10,   10,   11,   12,   13,   14,
       15,    6,    6,   16,   16,   17,   18,   18,   18,   18,
       18,   19,   20,   21,   22,   23,   24,   24,   25,   25,
       26,   27,   25,   25,    6,   28,   29,   24,   30,   31,
       25,   32,   25,   25,   33,   34,   35,   36,   37,   38,
       39,   25,   40,   25,   42,   42,   42,   42,   45,   45,
       45,   45,   45,   45,   45,   45,   46, 1334,   47,   47,
       47,   47,   47,   47,   47,   47,   48,   72, 1325,   73,
     1334,   49,   49,   52,   52,   52,   52,   52,   52, 1334,
       49,   49,   49,   49,   49,   50,   50,   50,   50,   50,

       51,   52,   52,   57,   88,   88,   58,   58,   58,   58,
       58,   58,   58,   58,   48,  181,  181,  212,  212,   58,
       58,   57,   57,   57,   57,   57,   57,   57,   58,   58,
       58,   58,   58,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57,   57,   57,   57,   57,   57,
       57,   57,   57,   57,   57, 1359,   61,   62,   69,  109,
       57,   57,  279,  279,  110,   63,   70,  289,  290,   57,
       57,   57,   57,   57,   45,   45,   45,   45,   45,   45,
       45,   45,   79,   48,   80,   80,   81,   82,   82,   82,
       82,   82,   46,  106,   83,   83,   83,   83,   83,   83,

       83,   83,   48,  131,  131,  135,   90,   84,   84,  188,
     1334,  107, 1325,   48, 1359,  137,   84,   84,   84,   84,
       84,   87,   87,   87,   87,   87,   87,   87,   87,   88,
       88,   88,   88,   88,   88,   88,   88,   89,   90,   91,
       91,   92,   93,   93,   93,   93,   93,  289,  290, 1325,
       89,   90,   94,   94,  141,  141,  141,  141,  141,  141,
      137,   94,   94,   94,   94,   94,   95,   95,   95,   95,
       95,   95,   95,   95,  303,  303, 1325,  135,   90,   95,
       95,  171,  171,  171,  171,  171,  171,  137,   95,   95,
       95,   95,   95,  117,  117,  117,  117,  117,  117,  117,

      117,  118,  323,  120,  120,  120,  120,  120,  121,  122,
      122,   46,  325,  123,  123,  123,  123,  123,  123,  123,
      123,   48,  310,  310,  289,  290,  124,  124,  221,  221,
      221,  221,  221,  221,  221,  124,  124,  124,  124,  124,
       89,   90,  127,  127,  128,  129,  129,  129,  129,  129,
      289,  290, 1291,  135,   90,  130,  130,  234,  234,  234,
      234,  234,  234,  167,  130,  130,  130,  130,  130,  133,
      134,  133,  133,  133,  133,  133,  133,  135,   90,  136,
      136,  136,  136,  136,  136,  136,  136,  137,  289,  290,
       89,   90,  138,  138,  256,  256,  256,  256,  256,  256,

      167,  138,  138,  138,  138,  138,  139,  139,  139,  139,
      139,  140,  141,  141,   89, 1334,  138,  138,  138,  138,
      138,  138,  138,  138,  142,  142,  142,  142,  142,  142,
      142,  142,  410,  410, 1334,  135,   90,  142,  142,  263,
      263,  263,  263,  263,  263,  167,  142,  142,  142,  142,
      142,  117,  117,  117,  117,  117,  117,  117,  117,  158,
      158,  159,  160,  160,  160,  160,  160,  118, 1286,  161,
      161,  161,  161,  161,  161,  135,   90,  166,  166,  166,
      166,  166,  166,  166,  166,  167,   89,   90,   89,   90,
      168,  168,  354,  354,  354, 1269,  137, 1325,  167,  168,

      168,  168,  168,  168,  169,  169,  169,  169,  169,  170,
      171,  171,   89, 1325,  168,  168,  168,  168,  168,  168,
      168,  168,  174,  174,  174,  174,  174,  174,  174,  174,
      175,  175,  176,  174,  174,  174,  174,  174,  132, 1206,
      177,  177,  178,  179,  179,  179,  179,  179,  135,   90,
      180,  180,  180,  180,  180,  180,  180,  180,  137,  289,
      290,  228,   90,  181,  181,  329,  329,  329,  329,  329,
      329,  230,  181,  181,  181,  181,  181,  182,  182,  183,
      184,  184,  184,  184,  184,   89,   90,  228,   90, 1291,
      185,  185,  428,  428, 1291,  230, 1291,  230, 1286,  185,

      185,  185,  185,  185,   89, 1286,  181,  181,  181,  181,
      181,  181,  181,  181,  186,  186,  186,  186,  186,  186,
      186,  186,  199, 1286,  201,  201,  201,  201,  201,  202,
      203,  203,   89,   90,  207,  207,  208,  209,  209,  209,
      209,  209,  435,  435, 1163,  135,   90,  210,  210,  347,
      347,  347,  347,  347,  347,  252,  210,  210,  210,  210,
      210,  135,   90,  211,  211,  211,  211,  211,  211,  211,
      211,  167,  442,  442,   89,   90,  212,  212,  364,  364,
      364,  364,  364,  364,  252,  212,  212,  212,  212,  212,
      213,  213,  214,  215,  215,  215,  215,  215,   89,   90,

     1269,  135,   90,  216,  216,  371,  371,  371,  371,  371,
      371,  252,  216,  216,  216,  216,  216,   89, 1269,  212,
      212,  212,  212,  212,  212,  212,  212,  217,  217,  217,
      217,  217,  217,  217,  217,  221,  221,  221,  221,  221,
      221,  221,  221,  222, 1269,  224,  224,  224,  224,  224,
      225,  226,  226,  228,   90,  229,  229,  229,  229,  229,
      229,  229,  229,  230,  228,   90,   89,   90,  231,  231,
       89,   90,   89,   90,  259, 1215,  259,  231,  231,  231,
      231,  231,  232,  232,  232,  232,  232,  233,  234,  234,
       89, 1291,  231,  231,  231,  231,  231,  231,  231,  231,

      244,  244,  245,  246,  246,  246,  246,  246,  199, 1291,
      247,  247,  247,  247,  247,  247,  135,   90,  251,  251,
      251,  251,  251,  251,  251,  251,  252,   89,   90,  228,
       90,  253,  253,  378,  378,  378,  378,  378,  378,  259,
      253,  253,  253,  253,  253,  254,  254,  254,  254,  254,
      255,  256,  256,   89, 1198,  253,  253,  253,  253,  253,
      253,  253,  253,  228,   90,  258,  258,  258,  258,  258,
      258,  258,  258,  259,   89,   90,   89,   90,  260,  260,
      387,  387,  387,  387,  387,  387,  230,  260,  260,  260,
      260,  260,  261,  261,  261,  261,  261,  262,  263,  263,

       89, 1286,  260,  260,  260,  260,  260,  260,  260,  260,
      267,  267,  268,  269,  269,  269,  269,  269,   89,   90,
       89,   90, 1286,  270,  270,  575,  575, 1193,  252, 1120,
      259, 1113,  270,  270,  270,  270,  270,  271,  271,  272,
      273,  273,  273,  273,  273,  222, 1106,  274,  274,  274,
      274,  274,  274,  132, 1099,  275,  275,  276,  277,  277,
      277,  277,  277,  228,   90,  278,  278,  278,  278,  278,
      278,  278,  278,  230,  323,  323, 1359, 1092,  279,  279,
      593,  593,  600,  600,  383,  325,  325,  279,  279,  279,
      279,  279,  280,  280,  281,  282,  282,  282,  282,  282,

      607,  607, 1269,  323, 1269,  283,  283,  474,  474,  474,
      474,  474,  474,  325,  283,  283,  283,  283,  283,   89,
     1155,  279,  279,  279,  279,  279,  279,  279,  279,  284,
      284,  284,  284,  284,  284,  284,  284,  289,  290,  292,
      292,  292,  292,  292,  293,  294,  294,   89,   90,  298,
      298,  299,  300,  300,  300,  300,  300,  341,   90,   89,
       90, 1215,  301,  301,  614,  614, 1215,  343, 1215,  343,
     1206,  301,  301,  301,  301,  301,  135,   90,  302,  302,
      302,  302,  302,  302,  302,  302,  252,   89,   90,  341,
       90,  303,  303,  496,  496,  496,  496,  496,  496,  343,

      303,  303,  303,  303,  303,  304,  304,  305,  306,  306,
      306,  306,  306,   89,   90, 1049,  135,   90,  307,  307,
      510,  510,  510,  510,  510,  510,  360,  307,  307,  307,
      307,  307,   89, 1198,  303,  303,  303,  303,  303,  303,
      303,  303,  308,  308,  308,  308,  308,  308,  308,  308,
      228,   90,  309,  309,  309,  309,  309,  309,  309,  309,
      259,   89,   90,  135,   90,  310,  310,   89,   90,   89,
       90,  360, 1198,  360,  310,  310,  310,  310,  310,  311,
      311,  312,  313,  313,  313,  313,  313,   89,   90, 1198,
      228,   90,  314,  314,  517,  517,  517,  517,  517,  517,

      367,  314,  314,  314,  314,  314,   89, 1193,  310,  310,
      310,  310,  310,  310,  310,  310,  315,  315,  315,  315,
      315,  315,  315,  315,  319,  319,  320,  321,  321,  321,
      321,  321,   89,   90,  228,   90, 1193,  322,  322,   89,
       90, 1193,  367, 1163,  367, 1231,  322,  322,  322,  322,
      322,  323,  323,  324,  324,  324,  324,  324,  324,  324,
      324,  325,  383,  999,  341,   90,  326,  326,  524,  524,
      524,  524,  524,  524,  374,  326,  326,  326,  326,  326,
      327,  327,  327,  327,  327,  328,  329,  329,  330, 1359,
      332,  332,  332,  332,  332,  333,  334,  334,  335,  383,

      337,  337,  337,  337,  337,  338,  339,  339,  341,   90,
      342,  342,  342,  342,  342,  342,  342,  342,  343,   89,
       90,  341,   90,  344,  344,  780,  780,   89,   90,  374,
     1155,  374,  344,  344,  344,  344,  344,  345,  345,  345,
      345,  345,  346,  347,  347,   89, 1155,  344,  344,  344,
      344,  344,  344,  344,  344,  352,  352,  352,  353,  354,
      354,  354,  354,  289,  290,  355,  355,  355,  355,  355,
      355,  135,   90,  359,  359,  359,  359,  359,  359,  359,
      359,  360,  800,  800,  323, 1155,  361,  361,  531,  531,
      531,  531,  531,  531,  383,  361,  361,  361,  361,  361,

      362,  362,  362,  362,  362,  363,  364,  364,   89, 1063,
      361,  361,  361,  361,  361,  361,  361,  361,  228,   90,
      366,  366,  366,  366,  366,  366,  366,  366,  367,  804,
      804,  468, 1215,  368,  368,  540,  540,  540,  540,  540,
      540,  470,  368,  368,  368,  368,  368,  369,  369,  369,
      369,  369,  370,  371,  371,   89, 1215,  368,  368,  368,
      368,  368,  368,  368,  368,  341,   90,  373,  373,  373,
      373,  373,  373,  373,  373,  374,  808,  808,   89,   90,
      375,  375,  547,  547,  547,  547,  547,  547,  343,  375,
      375,  375,  375,  375,  376,  376,  376,  376,  376,  377,

      378,  378,   89,  323,  375,  375,  375,  375,  375,  375,
      375,  375,  323,  536,  382,  382,  382,  382,  382,  382,
      382,  382,  383,   89,   90,   89,   90,  384,  384,  812,
      812,  816,  816,  360, 1058,  367,  384,  384,  384,  384,
      384,  385,  385,  385,  385,  385,  386,  387,  387,  388,
      388,  389,  390,  390,  390,  390,  390,  323, 1206,  391,
      391,  391,  391,  391,  391,  391,  391,  325,   89,   90,
      468, 1198,  392,  392,   89,   90,   89,   90,  374, 1198,
      543,  392,  392,  392,  392,  392,  393,  393,  394,  395,
      395,  395,  395,  395,  468, 1359,  468,  490,   90,  396,

      396,   89,   90, 1041,  470,  470,  470,  492,  396,  396,
      396,  396,  396,  397,  397,  397,  397,  397,  397,  397,
      397,  323, 1193,  397,  397,  397,  397,  397,  397,   89,
       90,  325,  398,  398,  399,  400,  400,  400,  400,  400,
      330, 1193,  401,  401,  401,  401,  401,  401,  402,  402,
      403,  404,  404,  404,  404,  404,  335, 1036,  405,  405,
      405,  405,  405,  405,  132, 1120,  406,  406,  407,  408,
      408,  408,  408,  408,  341,   90,  409,  409,  409,  409,
      409,  409,  409,  409,  343,   89,   90,   89,   90,  410,
      410,  658,  658,  658,  658,  658,  658,  492,  410,  410,

      410,  410,  410,  411,  411,  412,  413,  413,  413,  413,
      413,   89,   90,  940,  490,   90,  414,  414,  680,  680,
      680,  680,  680,  680,  492,  414,  414,  414,  414,  414,
       89, 1113,  410,  410,  410,  410,  410,  410,  410,  410,
      415,  415,  415,  415,  415,  415,  415,  415,  417,  417,
      418,  419,  419,  419,  419,  419,  354,  354,  354,  354,
      354,  354,  354,  354,   89,   90,  423,  423,  424,  425,
      425,  425,  425,  425,   89,   90,  933,  135,   90,  426,
      426,  697,  697,  697,  697,  697,  697,  506,  426,  426,
      426,  426,  426,  135,   90,  427,  427,  427,  427,  427,

      427,  427,  427,  360,   89,   90,  135,   90,  428,  428,
       89,   90,   89,   90,  506, 1106,  506,  428,  428,  428,
      428,  428,  429,  429,  430,  431,  431,  431,  431,  431,
       89,   90,  926,  228,   90,  432,  432,  704,  704,  704,
      704,  704,  704,  513,  432,  432,  432,  432,  432,   89,
     1099,  428,  428,  428,  428,  428,  428,  428,  428,  433,
      433,  433,  433,  433,  433,  433,  433,  228,   90,  434,
      434,  434,  434,  434,  434,  434,  434,  367,   89,   90,
      228,   90,  435,  435,   89,   90,   89,   90,  513,  919,
      513,  435,  435,  435,  435,  435,  436,  436,  437,  438,

      438,  438,  438,  438,  977,  977, 1092,  341,   90,  439,
      439,  711,  711,  711,  711,  711,  711,  520,  439,  439,
      439,  439,  439,   89, 1163,  435,  435,  435,  435,  435,
      435,  435,  435,  440,  440,  440,  440,  440,  440,  440,
      440,  341,   90,  441,  441,  441,  441,  441,  441,  441,
      441,  374,   89,   90,  341,   90,  442,  442,   89,   90,
       89,   90,  520,  999,  520,  442,  442,  442,  442,  442,
      443,  443,  444,  445,  445,  445,  445,  445,   89,   90,
      984,  490,   90,  446,  446,  718,  718,  718,  718,  718,
      718,  527,  446,  446,  446,  446,  446,   89, 1155,  442,

      442,  442,  442,  442,  442,  442,  442,  447,  447,  447,
      447,  447,  447,  447,  447,  451,  451,  452,  453,  453,
      453,  453,  453,   89,   90,  490,   90, 1155,  454,  454,
       89,   90, 1063,  527, 1063,  527, 1063,  454,  454,  454,
      454,  454,  323,  323,  455,  455,  455,  455,  455,  455,
      455,  455,  383,  536, 1058, 1359, 1058,  456,  456,  725,
      725,  725,  725,  725,  725,  536,  456,  456,  456,  456,
      456,  457,  457,  458,  459,  459,  459,  459,  459,   89,
       90, 1058,  323, 1049,  460,  460,  734,  734,  734,  734,
      734,  734,  536,  460,  460,  460,  460,  460,  461,  461,

      461,  461,  461,  461,  461,  461,  323,  864,  461,  461,
      461,  461,  461,  461,   89,   90,  383,  462,  468,  464,
      464,  464,  464,  464,  465,  466,  466,  468,  543,  469,
      469,  469,  469,  469,  469,  469,  469,  470,   89,   90,
     1359, 1041,  471,  471,  741,  741,  741,  741,  741,  741,
      543,  471,  471,  471,  471,  471,  472,  472,  472,  472,
      472,  473,  474,  474,   89,   90,  476,  476,  476,  476,
      476,  477,  478,  478,  479,  468,  481,  481,  481,  481,
      481,  482,  483,  483,  484,  543,  486,  486,  486,  486,
      486,  487,  488,  488,  490,   90,  491,  491,  491,  491,

      491,  491,  491,  491,  492,   89,   90,  652, 1041,  493,
      493,  748,  748,  748,  748,  748,  748,  654,  493,  493,
      493,  493,  493,  494,  494,  494,  494,  494,  495,  496,
      496,   89,  323,  493,  493,  493,  493,  493,  493,  493,
      493,  497,  730,  499,  499,  499,  499,  499,  500,  501,
      501,  135,   90,  505,  505,  505,  505,  505,  505,  505,
      505,  506,   89,   90,   89,   90,  507,  507,   89,   90,
       89,   90,  492, 1041,  506,  507,  507,  507,  507,  507,
      508,  508,  508,  508,  508,  509,  510,  510,   89, 1036,
      507,  507,  507,  507,  507,  507,  507,  507,  228,   90,

      512,  512,  512,  512,  512,  512,  512,  512,  513,   89,
       90,   89,   90,  514,  514,  797,  797,  797,  797,  797,
      797,  513,  514,  514,  514,  514,  514,  515,  515,  515,
      515,  515,  516,  517,  517,   89, 1036,  514,  514,  514,
      514,  514,  514,  514,  514,  341,   90,  519,  519,  519,
      519,  519,  519,  519,  519,  520,   89,   90,   89,   90,
      521,  521,   89,   90,   89,   90,  520, 1036,  527,  521,
      521,  521,  521,  521,  522,  522,  522,  522,  522,  523,
      524,  524,   89, 1120,  521,  521,  521,  521,  521,  521,
      521,  521,  490,   90,  526,  526,  526,  526,  526,  526,

      526,  526,  527,  468,  652,  652, 1113,  528,  528,   89,
       90,   89,   90,  737,  744,  654,  528,  528,  528,  528,
      528,  529,  529,  529,  529,  529,  530,  531,  531,   89,
     1359,  528,  528,  528,  528,  528,  528,  528,  528,  323,
      654,  535,  535,  535,  535,  535,  535,  535,  535,  536,
       89,   90,  652, 1106,  537,  537,  868,  868,  868,  868,
      868,  868,  654,  537,  537,  537,  537,  537,  538,  538,
      538,  538,  538,  539,  540,  540,  468, 1099,  542,  542,
      542,  542,  542,  542,  542,  542,  543,  674,   90,   89,
       90,  544,  544,   89,   90,   89,   90,  676, 1092,  676,

      544,  544,  544,  544,  544,  545,  545,  545,  545,  545,
      546,  547,  547,  548,  548,  549,  550,  550,  550,  550,
      550,  462,  999,  551,  551,  551,  551,  551,  551,  552,
      552,  553,  554,  554,  554,  554,  554,  468,  791,  555,
      555,  555,  555,  555,  555,  555,  555,  470,  793,  821,
      674,   90,  556,  556,  890,  890,  890,  890,  890,  890,
      676,  556,  556,  556,  556,  556,  557,  557,  558,  559,
      559,  559,  559,  559,  135,   90,   89,   90,  793,  560,
      560,   89,   90,  984,  693,  984,  693,  984,  560,  560,
      560,  560,  560,  561,  561,  561,  561,  561,  561,  561,

      561,  468,  891,  561,  561,  561,  561,  561,  561,   89,
       90,  470,   89,   90,  562,  562,  562,  562,  562,  562,
      563,  563,  564,  565,  565,  565,  565,  565,  479, 1063,
      566,  566,  566,  566,  566,  566,  567,  567,  568,  569,
      569,  569,  569,  569,  484, 1063,  570,  570,  570,  570,
      570,  570,  132,  878,  571,  571,  572,  573,  573,  573,
      573,  573,  490,   90,  574,  574,  574,  574,  574,  574,
      574,  574,  492,  135,   90,  228,   90,  575,  575,   89,
       90,   89,   90,  693, 1058,  700,  575,  575,  575,  575,
      575,  576,  576,  577,  578,  578,  578,  578,  578,   89,

       90,  228,   90, 1058,  579,  579,   89,   90,  873,  700,
     1049,  700, 1041,  579,  579,  579,  579,  579,   89, 1041,
      575,  575,  575,  575,  575,  575,  575,  575,  580,  580,
      580,  580,  580,  580,  580,  580,  581,  581,  582,  583,
      583,  583,  583,  583,  497,  856,  584,  584,  584,  584,
      584,  584,   89,   90,  588,  588,  589,  590,  590,  590,
      590,  590,  341,   90,   89,   90, 1036,  591,  591,   89,
       90, 1036,  707,  851,  707,  940,  591,  591,  591,  591,
      591,  135,   90,  592,  592,  592,  592,  592,  592,  592,
      592,  506,  341,   90,  490,   90,  593,  593,   89,   90,

       89,   90,  707,  744,  714,  593,  593,  593,  593,  593,
      594,  594,  595,  596,  596,  596,  596,  596,   89,   90,
      490,   90,  933,  597,  597,   89,   90,  737,  714,  926,
      714,  730,  597,  597,  597,  597,  597,   89,  919,  593,
      593,  593,  593,  593,  593,  593,  593,  598,  598,  598,
      598,  598,  598,  598,  598,  228,   90,  599,  599,  599,
      599,  599,  599,  599,  599,  513,  674,   90,   89,   90,
      600,  600,   89,   90,   89,   90,  721,  999,  721,  600,
      600,  600,  600,  600,  601,  601,  602,  603,  603,  603,
      603,  603,  674,   90,  323, 1359,  821,  604,  604,   89,

       90,  984,  721,  984,  730,  730,  604,  604,  604,  604,
      604,   89,  891,  600,  600,  600,  600,  600,  600,  600,
      600,  605,  605,  605,  605,  605,  605,  605,  605,  341,
       90,  606,  606,  606,  606,  606,  606,  606,  606,  520,
       89,   90,  323,  891,  607,  607,  923,  923,  923,  923,
      923,  923,  730,  607,  607,  607,  607,  607,  608,  608,
      609,  610,  610,  610,  610,  610,   89,   90,  891,  468,
      884,  611,  611,  930,  930,  930,  930,  930,  930,  737,
      611,  611,  611,  611,  611,   89,  878,  607,  607,  607,
      607,  607,  607,  607,  607,  612,  612,  612,  612,  612,

      612,  612,  612,  490,   90,  613,  613,  613,  613,  613,
      613,  613,  613,  527, 1359,  468,  652,  878,  614,  614,
       89,   90,   89,   90,  737,  737,  744,  614,  614,  614,
      614,  614,  615,  615,  616,  617,  617,  617,  617,  617,
       89,   90,  878, 1359,  873,  618,  618,  937,  937,  937,
      937,  937,  937,  744,  618,  618,  618,  618,  618,   89,
      873,  614,  614,  614,  614,  614,  614,  614,  614,  619,
      619,  619,  619,  619,  619,  619,  619,  623,  623,  624,
      625,  625,  625,  625,  625,   89,   90,  873,  652,  864,
      626,  626,  944,  944,  944,  944,  944,  944,  744,  626,

      626,  626,  626,  626,  323,  862,  627,  627,  627,  627,
      627,  627,  627,  627,  536,  864,  654,   89,   90,  628,
      628,  945,  945,  945,  945,  945,  945,  676,  628,  628,
      628,  628,  628,  629,  629,  630,  631,  631,  631,  631,
      631,  791, 1359,  791,   89,   90,  632,  632,   89,   90,
      856,  793,  793,  793,  693,  632,  632,  632,  632,  632,
      633,  633,  633,  633,  633,  633,  633,  633,  323,  856,
      633,  633,  633,  633,  633,  633,   89,   90,  536,  468,
      856,  634,  634,  634,  634,  634,  634,  634,  634,  543,
       89,   90,   89,   90,  635,  635,   89,   90,   89,   90,

      700,  851,  707,  635,  635,  635,  635,  635,  636,  636,
      637,  638,  638,  638,  638,  638,   89,   90,   89,   90,
      851,  639,  639,   89,   90,  851,  714,  940,  721,  933,
      639,  639,  639,  639,  639,  640,  640,  640,  640,  640,
      640,  640,  640,  468,  926,  640,  640,  640,  640,  640,
      640,   89,   90,  543,  641,  323,  643,  643,  643,  643,
      643,  644,  645,  645,  646,  919,  648,  648,  648,  648,
      648,  649,  650,  650,  652,  468,  653,  653,  653,  653,
      653,  653,  653,  653,  654,  926,  652,  862,  919,  655,
      655,   89,   90,   89,   90,  917,  933,  940,  655,  655,

      655,  655,  655,  656,  656,  656,  656,  656,  657,  658,
      658,   89,   90,  660,  660,  660,  660,  660,  661,  662,
      662,  663,  862,  665,  665,  665,  665,  665,  666,  667,
      667,  668,  864,  670,  670,  670,  670,  670,  671,  672,
      672,  674,   90,  675,  675,  675,  675,  675,  675,  675,
      675,  676, 1359,  862,  884,   90,  677,  677,   89,   90,
       89,   90,  864,  864,  886,  677,  677,  677,  677,  677,
      678,  678,  678,  678,  678,  679,  680,  680,   89,  323,
      677,  677,  677,  677,  677,  677,  677,  677,  681,  919,
      683,  683,  683,  683,  683,  684,  685,  685,  687,  687,

      688,  689,  689,  689,  689,  689,  690,   89,   90,   89,
       90,  691,  691, 1053, 1053, 1053, 1053, 1053, 1053,  886,
      691,  691,  691,  691,  691,  135,   90,  692,  692,  692,
      692,  692,  692,  692,  692,  693,  884,   90, 1359,  821,
      694,  694,   89,   90,   89,   90,  886,  622,  919,  694,
      694,  694,  694,  694,  695,  695,  695,  695,  695,  696,
      697,  697,   89,  793,  694,  694,  694,  694,  694,  694,
      694,  694,  228,   90,  699,  699,  699,  699,  699,  699,
      699,  699,  700,   89,   90,  323,  902,  701,  701, 1096,
     1096, 1096, 1096, 1096, 1096,  919,  701,  701,  701,  701,

      701,  702,  702,  702,  702,  702,  703,  704,  704,   89,
      587,  701,  701,  701,  701,  701,  701,  701,  701,  341,
       90,  706,  706,  706,  706,  706,  706,  706,  706,  707,
       89,   90,  468,  681,  708,  708, 1103, 1103, 1103, 1103,
     1103, 1103,  926,  708,  708,  708,  708,  708,  709,  709,
      709,  709,  709,  710,  711,  711,   89,  891,  708,  708,
      708,  708,  708,  708,  708,  708,  490,   90,  713,  713,
      713,  713,  713,  713,  713,  713,  714, 1359,  468,  652,
      891,  715,  715,  878,  878,  668,  873,  926,  926,  933,
      715,  715,  715,  715,  715,  716,  716,  716,  716,  716,

      717,  718,  718,   89,  873,  715,  715,  715,  715,  715,
      715,  715,  715,  674,   90,  720,  720,  720,  720,  720,
      720,  720,  720,  721,  663,  864, 1359,  856,  722,  722,
     1110, 1110, 1110, 1110, 1110, 1110,  933,  722,  722,  722,
      722,  722,  723,  723,  723,  723,  723,  724,  725,  725,
       89,  652,  722,  722,  722,  722,  722,  722,  722,  722,
      323,  933,  729,  729,  729,  729,  729,  729,  729,  729,
      730,  856,  646,  862,  851,  731,  731, 1117, 1117, 1117,
     1117, 1117, 1117,  940,  731,  731,  731,  731,  731,  732,
      732,  732,  732,  732,  733,  734,  734,  468, 1359,  736,

      736,  736,  736,  736,  736,  736,  736,  737,  940,  851,
      862,  641,  738,  738, 1124, 1124, 1124, 1124, 1124, 1124,
      940,  738,  738,  738,  738,  738,  739,  739,  739,  739,
      739,  740,  741,  741,  652, 1047,  743,  743,  743,  743,
      743,  743,  743,  743,  744, 1049,  744,   89,   90,  745,
      745, 1125, 1125, 1125, 1125, 1125, 1125,  886,  745,  745,
      745,  745,  745,  746,  746,  746,  746,  746,  747,  748,
      748,  749,  749,  750,  751,  751,  751,  751,  751,  641,
      543,  752,  752,  752,  752,  752,  752,  753,  753,  754,
      755,  755,  755,  755,  755,  646,  737,  756,  756,  756,

      756,  756,  756,  757,  757,  758,  759,  759,  759,  759,
      759,  652,  323,  760,  760,  760,  760,  760,  760,  760,
      760,  654, 1092,  536,  468,  730,  761,  761, 1154, 1154,
     1154, 1154, 1154, 1154, 1099,  761,  761,  761,  761,  761,
      762,  762,  763,  764,  764,  764,  764,  764,  821,  622,
      674,  652,  490,  765,  765, 1167, 1167, 1167, 1167, 1167,
     1167, 1106,  765,  765,  765,  765,  765,  766,  766,  766,
      766,  766,  766,  766,  766,  652,  341,  766,  766,  766,
      766,  766,  766,  228,  135,  654,   89,   90,  767,  767,
      767,  767,  767,  767,  768,  768,  769,  770,  770,  770,

      770,  770,  663,  793,  771,  771,  771,  771,  771,  771,
      772,  772,  773,  774,  774,  774,  774,  774,  668,  587,
      775,  775,  775,  775,  775,  775,  132,  681,  776,  776,
      777,  778,  778,  778,  778,  778,  674,   90,  779,  779,
      779,  779,  779,  779,  779,  779,  676,  862, 1047, 1047,
      681,  780,  780,  681,  674,  668,  668, 1113, 1120, 1049,
      780,  780,  780,  780,  780,  781,  781,  782,  783,  783,
      783,  783,  783, 1359, 1047, 1161,  323,  668,  784,  784,
      663,  663,  663, 1049, 1049, 1163, 1092,  784,  784,  784,
      784,  784,   89,  654,  780,  780,  780,  780,  780,  780,

      780,  780,  785,  785,  785,  785,  785,  785,  785,  785,
      786,  786,  787,  788,  788,  788,  788,  788,  681,  470,
      789,  789,  789,  789,  789,  789,  791, 1359,  792,  792,
      792,  792,  792,  792,  792,  792,  793, 1092,  646,  323,
      646,  794,  794, 1210, 1210, 1210, 1210, 1210, 1210, 1092,
      794,  794,  794,  794,  794,  795,  795,  795,  795,  795,
      796,  797,  797,  135,   90,  799,  799,  799,  799,  799,
      799,  799,  799,  693,  468, 1359,  468,  646,  800,  800,
      641,  641,  641,  652, 1099, 1099, 1099,  800,  800,  800,
      800,  800,   89, 1106,  800,  800,  800,  800,  800,  800,

      800,  800,  802,  802,  802,  802,  802,  802,  802,  802,
      228,   90,  803,  803,  803,  803,  803,  803,  803,  803,
      700, 1359,  652,  862,  744,  804,  804,  737,  730,  728,
     1359, 1106, 1106, 1113,  804,  804,  804,  804,  804,   89,
     1113,  804,  804,  804,  804,  804,  804,  804,  804,  806,
      806,  806,  806,  806,  806,  806,  806,  341,   90,  807,
      807,  807,  807,  807,  807,  807,  807,  707,  862, 1047,
     1359,  622,  808,  808,  450,  587,  422, 1047, 1113, 1120,
     1120,  808,  808,  808,  808,  808,   89, 1120,  808,  808,
      808,  808,  808,  808,  808,  808,  810,  810,  810,  810,

      810,  810,  810,  810,  490,   90,  811,  811,  811,  811,
      811,  811,  811,  811,  714,  497,  681, 1204,  681,  812,
      812, 1244, 1244, 1244, 1244, 1244, 1244, 1206,  812,  812,
      812,  812,  812,   89,  668,  812,  812,  812,  812,  812,
      812,  812,  812,  814,  814,  814,  814,  814,  814,  814,
      814,  674,   90,  815,  815,  815,  815,  815,  815,  815,
      815,  721, 1161, 1359, 1161,  668,  816,  816,  484,  663,
      663, 1204, 1163, 1163, 1163,  816,  816,  816,  816,  816,
       89, 1206,  816,  816,  816,  816,  816,  816,  816,  816,
      818,  818,  818,  818,  818,  818,  818,  818,  822,  822,

      823,  824,  824,  824,  824,  824, 1359, 1204,  479,  654,
      646,  825,  825,  646,  462,  641, 1206, 1206,  641,  543,
      825,  825,  825,  825,  825,  323,  383,  826,  826,  826,
      826,  826,  826,  826,  826,  730,  536,  622,  450,  490,
      827,  827, 1314, 1314, 1314, 1314, 1314, 1314,  341,  827,
      827,  827,  827,  827,  828,  828,  829,  830,  830,  830,
      830,  830,  228,  135,  587,  422,  497,  831,  831, 1344,
     1344, 1344, 1344, 1344, 1344,  497,  831,  831,  831,  831,
      831,  832,  832,  832,  832,  832,  832,  832,  832,  323,
      497,  832,  832,  832,  832,  832,  832,  490,  484,  730,

      468,  484,  833,  833,  833,  833,  833,  833,  833,  833,
      737,  484,  479,  479,  479,  834,  834, 1357, 1357, 1357,
     1357, 1357, 1357,  470,  834,  834,  834,  834,  834,  835,
      835,  836,  837,  837,  837,  837,  837,  325,  462,  462,
      462,  543,  838,  838, 1358, 1358, 1358, 1358, 1358, 1358,
      536,  838,  838,  838,  838,  838,  839,  839,  839,  839,
      839,  839,  839,  839,  468,  534,  839,  839,  839,  839,
      839,  839,  450,  318,  737,  652,  504,  840,  840,  840,
      840,  840,  840,  840,  840,  744,  422,  297,  497,  497,
      841,  841,  484,  484,  335,  479,  479,  330,  470,  841,

      841,  841,  841,  841,  842,  842,  843,  844,  844,  844,
      844,  844,  462,  462,  383,  450,  318,  845,  845,  341,
      228,  135,  422,  297,  416,  341,  845,  845,  845,  845,
      845,  846,  846,  846,  846,  846,  846,  846,  846,  652,
      335,  846,  846,  846,  846,  846,  846,  335,  335,  744,
      847,  847,  847,  847,  847,  847,  847,  847,  848,  848,
      848,  848,  848,  849,  850,  850,  850,  850,  850,  850,
      850,  850,  850,  850,  851,  330,  853,  853,  853,  853,
      853,  854,  855,  855,  856,  330,  858,  858,  858,  858,
      858,  859,  860,  860,  862,  330,  863,  863,  863,  863,

      863,  863,  863,  863,  864,  325,  383,  381,  318,  865,
      865,  219,  358,  297,  206,  351,  350,  349,  865,  865,
      865,  865,  865,  866,  866,  866,  866,  866,  867,  868,
      868,   89,   90,  870,  870,  870,  870,  870,  871,  872,
      872,  873,  348,  875,  875,  875,  875,  875,  876,  877,
      877,  878,  335,  880,  880,  880,  880,  880,  881,  882,
      882,  884,   90,  885,  885,  885,  885,  885,  885,  885,
      885,  886,  335,  222,  330,  330,  887,  887,  325,  318,
      219,  228,  135,  297,  206,  887,  887,  887,  887,  887,
      888,  888,  888,  888,  888,  889,  890,  890,   89,  199,

      887,  887,  887,  887,  887,  887,  887,  887,  891,  288,
      893,  893,  893,  893,  893,  894,  895,  895,  896,  896,
      897,  898,  898,  898,  898,  898,  791,  287,  899,  899,
      899,  899,  899,  899,  899,  899,  793,  286,  285,  228,
      222,  900,  900,  222,  222,  266,  219,  250,  206,  126,
      900,  900,  900,  900,  900,  903,  903,  903,  903,  903,
      903,  903,  903,  791,  199,  903,  903,  903,  903,  903,
      903,  199,  199,  793,  323,  243,  918,  918,  918,  918,
      918,  918,  918,  918,  919,  242,  241,  240,  239,  920,
      920,  238,  237,  236,  235,  222,  222,  220,  920,  920,

      920,  920,  920,  921,  921,  921,  921,  921,  922,  923,
      923,  468,  219,  925,  925,  925,  925,  925,  925,  925,
      925,  926,  135,  206,  126,  118,  927,  927,  199,  199,
      198,  197,  196,  195,  194,  927,  927,  927,  927,  927,
      928,  928,  928,  928,  928,  929,  930,  930,  652,  193,
      932,  932,  932,  932,  932,  932,  932,  932,  933,  192,
      191,  190,  189,  934,  934,  187,   48,  135,  173,   79,
      165,  126,  934,  934,  934,  934,  934,  935,  935,  935,
      935,  935,  936,  937,  937,  862,   48,  939,  939,  939,
      939,  939,  939,  939,  939,  940,  118,  118,  118,  157,

      941,  941,  156,  155,  154,  153,  152,  151,  150,  941,
      941,  941,  941,  941,  942,  942,  942,  942,  942,  943,
      944,  944,  850,  850,  850,  850,  850,  850,  850,  850,
      945,  945,  945,  945,  945,  945,  945,  945,  946,  946,
      947,  948,  948,  948,  948,  948,  851,  149,  949,  949,
      949,  949,  949,  949,  950,  950,  951,  952,  952,  952,
      952,  952,  856,  148,  953,  953,  953,  953,  953,  953,
      954,  954,  955,  956,  956,  956,  956,  956,  862,  147,
      957,  957,  957,  957,  957,  957,  957,  957,  864,  146,
      145,  144,  143,  958,  958,  132,  131,  126,   48,  118,

      118,  116,  958,  958,  958,  958,  958,  959,  959,  960,
      961,  961,  961,  961,  961,  115,  114,  113,  112,  111,
      962,  962,  108,  105,  104,  103,  102,  101,  100,  962,
      962,  962,  962,  962,  963,  963,  963,  963,  963,  963,
      963,  963,  862,   99,  963,  963,  963,  963,  963,  963,
       98,   97,  864,   89,   90,  964,  964,  964,  964,  964,
      964,  965,  965,  966,  967,  967,  967,  967,  967,  873,
       96,  968,  968,  968,  968,  968,  968,  969,  969,  970,
      971,  971,  971,  971,  971,  878,   48,  972,  972,  972,
      972,  972,  972,  132,   86,  973,  973,  974,  975,  975,

      975,  975,  975,  884,   90,  976,  976,  976,  976,  976,
      976,  976,  976,  886,   43,   77,   76,   75,  977,  977,
       74,   71,   68,   67,   66,   65,   64,  977,  977,  977,
      977,  977,   89,   60,  977,  977,  977,  977,  977,  977,
      977,  977,  979,  979,  979,  979,  979,  979,  979,  979,
      980,  980,  981,  982,  982,  982,  982,  982,  891,   59,
      983,  983,  983,  983,  983,  983,  984,   56,  986,  986,
      986,  986,  986,  987,  988,  988, 1000, 1000, 1001, 1002,
     1002, 1002, 1002, 1002,   55,   54,   53,   44,   43, 1003,
     1003, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1003, 1003,

     1003, 1003, 1003,  323, 1359, 1004, 1004, 1004, 1004, 1004,
     1004, 1004, 1004,  919, 1359, 1359, 1359, 1359, 1005, 1005,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1005, 1005, 1005,
     1005, 1005, 1006, 1006, 1007, 1008, 1008, 1008, 1008, 1008,
     1359, 1359, 1359, 1359, 1359, 1009, 1009, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1009, 1009, 1009, 1009, 1009, 1010,
     1010, 1010, 1010, 1010, 1010, 1010, 1010,  323, 1359, 1010,
     1010, 1010, 1010, 1010, 1010, 1359, 1359,  919,  468, 1359,
     1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011,  926, 1359,
     1359, 1359, 1359, 1012, 1012, 1359, 1359, 1359, 1359, 1359,

     1359, 1359, 1012, 1012, 1012, 1012, 1012, 1013, 1013, 1014,
     1015, 1015, 1015, 1015, 1015, 1359, 1359, 1359, 1359, 1359,
     1016, 1016, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1016,
     1016, 1016, 1016, 1016, 1017, 1017, 1017, 1017, 1017, 1017,
     1017, 1017,  468, 1359, 1017, 1017, 1017, 1017, 1017, 1017,
     1359, 1359,  926,  652, 1359, 1018, 1018, 1018, 1018, 1018,
     1018, 1018, 1018,  933, 1359, 1359, 1359, 1359, 1019, 1019,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1019, 1019, 1019,
     1019, 1019, 1020, 1020, 1021, 1022, 1022, 1022, 1022, 1022,
     1359, 1359, 1359, 1359, 1359, 1023, 1023, 1359, 1359, 1359,

     1359, 1359, 1359, 1359, 1023, 1023, 1023, 1023, 1023, 1024,
     1024, 1024, 1024, 1024, 1024, 1024, 1024,  652, 1359, 1024,
     1024, 1024, 1024, 1024, 1024, 1359, 1359,  933,  862, 1359,
     1025, 1025, 1025, 1025, 1025, 1025, 1025, 1025,  940, 1359,
     1359, 1359, 1359, 1026, 1026, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1026, 1026, 1026, 1026, 1026, 1027, 1027, 1028,
     1029, 1029, 1029, 1029, 1029, 1359, 1359, 1359, 1359, 1359,
     1030, 1030, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1030,
     1030, 1030, 1030, 1030, 1031, 1031, 1031, 1031, 1031, 1031,
     1031, 1031,  862, 1359, 1031, 1031, 1031, 1031, 1031, 1031,

     1359, 1359,  940, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
     1032, 1033, 1033, 1033, 1033, 1033, 1034, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1035, 1035, 1035, 1036, 1359, 1038,
     1038, 1038, 1038, 1038, 1039, 1040, 1040, 1041, 1359, 1043,
     1043, 1043, 1043, 1043, 1044, 1045, 1045, 1047, 1359, 1048,
     1048, 1048, 1048, 1048, 1048, 1048, 1048, 1049, 1359, 1359,
     1359, 1359, 1050, 1050, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1050, 1050, 1050, 1050, 1050, 1051, 1051, 1051, 1051,
     1051, 1052, 1053, 1053,   89,   90, 1055, 1055, 1055, 1055,
     1055, 1056, 1057, 1057, 1058, 1359, 1060, 1060, 1060, 1060,

     1060, 1061, 1062, 1062, 1063, 1359, 1065, 1065, 1065, 1065,
     1065, 1066, 1067, 1067, 1070, 1070, 1070, 1070, 1070, 1070,
     1070, 1070, 1071, 1071, 1071, 1071, 1071, 1072, 1073, 1073,
     1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1074, 1074,
     1075, 1076, 1076, 1076, 1076, 1076,  984, 1359, 1077, 1077,
     1077, 1077, 1077, 1077, 1086, 1086, 1087, 1088, 1088, 1088,
     1088, 1088, 1089, 1359, 1359, 1359, 1359, 1090, 1090, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1090, 1090, 1090, 1090,
     1090,  323, 1359, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
     1091, 1092, 1359, 1359, 1359, 1359, 1093, 1093, 1359, 1359,

     1359, 1359, 1359, 1359, 1359, 1093, 1093, 1093, 1093, 1093,
     1094, 1094, 1094, 1094, 1094, 1095, 1096, 1096,  468, 1359,
     1098, 1098, 1098, 1098, 1098, 1098, 1098, 1098, 1099, 1359,
     1359, 1359, 1359, 1100, 1100, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1100, 1100, 1100, 1100, 1100, 1101, 1101, 1101,
     1101, 1101, 1102, 1103, 1103,  652, 1359, 1105, 1105, 1105,
     1105, 1105, 1105, 1105, 1105, 1106, 1359, 1359, 1359, 1359,
     1107, 1107, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1107,
     1107, 1107, 1107, 1107, 1108, 1108, 1108, 1108, 1108, 1109,
     1110, 1110,  862, 1359, 1112, 1112, 1112, 1112, 1112, 1112,

     1112, 1112, 1113, 1359, 1359, 1359, 1359, 1114, 1114, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1114, 1114, 1114, 1114,
     1114, 1115, 1115, 1115, 1115, 1115, 1116, 1117, 1117, 1047,
     1359, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1120,
     1359, 1359, 1359, 1359, 1121, 1121, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1121, 1121, 1121, 1121, 1121, 1122, 1122,
     1122, 1122, 1122, 1123, 1124, 1124, 1035, 1035, 1035, 1035,
     1035, 1035, 1035, 1035, 1125, 1125, 1125, 1125, 1125, 1125,
     1125, 1125, 1126, 1126, 1127, 1128, 1128, 1128, 1128, 1128,
     1036, 1359, 1129, 1129, 1129, 1129, 1129, 1129, 1130, 1130,

     1131, 1132, 1132, 1132, 1132, 1132, 1041, 1359, 1133, 1133,
     1133, 1133, 1133, 1133, 1134, 1134, 1135, 1136, 1136, 1136,
     1136, 1136, 1047, 1359, 1137, 1137, 1137, 1137, 1137, 1137,
     1137, 1137, 1049, 1359, 1359, 1359, 1359, 1138, 1138, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1138, 1138, 1138, 1138,
     1138, 1139, 1139, 1140, 1141, 1141, 1141, 1141, 1141, 1359,
     1359, 1359, 1359, 1359, 1142, 1142, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1142, 1142, 1142, 1142, 1142, 1143, 1143,
     1143, 1143, 1143, 1143, 1143, 1143, 1047, 1359, 1143, 1143,
     1143, 1143, 1143, 1143, 1359, 1359, 1049,   89,   90, 1144,

     1144, 1144, 1144, 1144, 1144, 1145, 1145, 1146, 1147, 1147,
     1147, 1147, 1147, 1058, 1359, 1148, 1148, 1148, 1148, 1148,
     1148, 1149, 1149, 1150, 1151, 1151, 1151, 1151, 1151, 1063,
     1359, 1152, 1152, 1152, 1152, 1152, 1152, 1073, 1073, 1073,
     1073, 1073, 1073, 1073, 1073, 1154, 1154, 1154, 1154, 1154,
     1154, 1154, 1154, 1155, 1359, 1157, 1157, 1157, 1157, 1157,
     1158, 1159, 1159, 1161, 1359, 1162, 1162, 1162, 1162, 1162,
     1162, 1162, 1162, 1163, 1359, 1359, 1359, 1359, 1164, 1164,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1164, 1164, 1164,
     1164, 1164, 1165, 1165, 1165, 1165, 1165, 1166, 1167, 1167,

      323, 1359, 1169, 1169, 1169, 1169, 1169, 1169, 1169, 1169,
     1092, 1359, 1359, 1359, 1359, 1170, 1170, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1170, 1170, 1170, 1170, 1170, 1172,
     1172, 1172, 1172, 1172, 1172, 1172, 1172,  323, 1359, 1172,
     1172, 1172, 1172, 1172, 1172, 1359, 1359, 1092,  468, 1359,
     1173, 1173, 1173, 1173, 1173, 1173, 1173, 1173, 1099, 1359,
     1359, 1359, 1359, 1174, 1174, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1174, 1174, 1174, 1174, 1174, 1176, 1176, 1176,
     1176, 1176, 1176, 1176, 1176,  468, 1359, 1176, 1176, 1176,
     1176, 1176, 1176, 1359, 1359, 1099,  652, 1359, 1177, 1177,

     1177, 1177, 1177, 1177, 1177, 1177, 1106, 1359, 1359, 1359,
     1359, 1178, 1178, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1178, 1178, 1178, 1178, 1178, 1180, 1180, 1180, 1180, 1180,
     1180, 1180, 1180,  652, 1359, 1180, 1180, 1180, 1180, 1180,
     1180, 1359, 1359, 1106,  862, 1359, 1181, 1181, 1181, 1181,
     1181, 1181, 1181, 1181, 1113, 1359, 1359, 1359, 1359, 1182,
     1182, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1182, 1182,
     1182, 1182, 1182, 1184, 1184, 1184, 1184, 1184, 1184, 1184,
     1184,  862, 1359, 1184, 1184, 1184, 1184, 1184, 1184, 1359,
     1359, 1113, 1047, 1359, 1185, 1185, 1185, 1185, 1185, 1185,

     1185, 1185, 1120, 1359, 1359, 1359, 1359, 1186, 1186, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1186, 1186, 1186, 1186,
     1186, 1188, 1188, 1188, 1188, 1188, 1188, 1188, 1188, 1047,
     1359, 1188, 1188, 1188, 1188, 1188, 1188, 1359, 1359, 1120,
     1189, 1189, 1189, 1189, 1189, 1189, 1189, 1189, 1190, 1190,
     1190, 1190, 1190, 1191, 1192, 1192, 1192, 1192, 1192, 1192,
     1192, 1192, 1192, 1192, 1193, 1359, 1195, 1195, 1195, 1195,
     1195, 1196, 1197, 1197, 1198, 1359, 1200, 1200, 1200, 1200,
     1200, 1201, 1202, 1202, 1204, 1359, 1205, 1205, 1205, 1205,
     1205, 1205, 1205, 1205, 1206, 1359, 1359, 1359, 1359, 1207,

     1207, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1207, 1207,
     1207, 1207, 1207, 1208, 1208, 1208, 1208, 1208, 1209, 1210,
     1210,   89,   90, 1212, 1212, 1212, 1212, 1212, 1213, 1214,
     1214, 1215, 1359, 1217, 1217, 1217, 1217, 1217, 1218, 1219,
     1219, 1221, 1221, 1222, 1223, 1223, 1223, 1223, 1223, 1155,
     1359, 1224, 1224, 1224, 1224, 1224, 1224, 1225, 1225, 1226,
     1227, 1227, 1227, 1227, 1227, 1161, 1359, 1228, 1228, 1228,
     1228, 1228, 1228, 1228, 1228, 1163, 1359, 1359, 1359, 1359,
     1229, 1229, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1229,
     1229, 1229, 1229, 1229, 1232, 1232, 1232, 1232, 1232, 1232,

     1232, 1232, 1161, 1359, 1232, 1232, 1232, 1232, 1232, 1232,
     1359, 1359, 1163, 1192, 1192, 1192, 1192, 1192, 1192, 1192,
     1192, 1244, 1244, 1244, 1244, 1244, 1244, 1244, 1244, 1245,
     1245, 1246, 1247, 1247, 1247, 1247, 1247, 1193, 1359, 1248,
     1248, 1248, 1248, 1248, 1248, 1249, 1249, 1250, 1251, 1251,
     1251, 1251, 1251, 1198, 1359, 1252, 1252, 1252, 1252, 1252,
     1252, 1253, 1253, 1254, 1255, 1255, 1255, 1255, 1255, 1204,
     1359, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1256, 1206,
     1359, 1359, 1359, 1359, 1257, 1257, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1257, 1257, 1257, 1257, 1257, 1259, 1259,

     1259, 1259, 1259, 1259, 1259, 1259, 1204, 1359, 1259, 1259,
     1259, 1259, 1259, 1259, 1359, 1359, 1206,   89,   90, 1260,
     1260, 1260, 1260, 1260, 1260, 1261, 1261, 1262, 1263, 1263,
     1263, 1263, 1263, 1215, 1359, 1264, 1264, 1264, 1264, 1264,
     1264,   89,   90, 1266, 1266, 1266, 1266, 1266, 1267, 1268,
     1268, 1269, 1359, 1271, 1271, 1271, 1271, 1271, 1272, 1273,
     1273, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1283,
     1283, 1283, 1283, 1283, 1284, 1285, 1285, 1285, 1285, 1285,
     1285, 1285, 1285, 1285, 1285, 1286, 1359, 1288, 1288, 1288,
     1288, 1288, 1289, 1290, 1290, 1291, 1359, 1293, 1293, 1293,

     1293, 1293, 1294, 1295, 1295,   89,   90, 1299, 1299, 1299,
     1299, 1299, 1300, 1301, 1301,   89,   90, 1302, 1302, 1302,
     1302, 1302, 1302, 1303, 1303, 1304, 1305, 1305, 1305, 1305,
     1305, 1269, 1359, 1306, 1306, 1306, 1306, 1306, 1306, 1285,
     1285, 1285, 1285, 1285, 1285, 1285, 1285, 1314, 1314, 1314,
     1314, 1314, 1314, 1314, 1314, 1315, 1315, 1316, 1317, 1317,
     1317, 1317, 1317, 1286, 1359, 1318, 1318, 1318, 1318, 1318,
     1318, 1319, 1319, 1320, 1321, 1321, 1321, 1321, 1321, 1291,
     1359, 1322, 1322, 1322, 1322, 1322, 1322,   89,   90, 1324,
     1324, 1324, 1324, 1324, 1324, 1325, 1359, 1327, 1327, 1327,

     1327, 1327, 1328, 1329, 1329, 1330, 1330, 1330, 1330, 1330,
     1330, 1330, 1330, 1331, 1331, 1331, 1331, 1331, 1332, 1333,
     1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1333, 1334,
     1359, 1336, 1336, 1336, 1336, 1336, 1337, 1338, 1338, 1340,
     1340, 1341, 1342, 1342, 1342, 1342, 1342, 1325, 1359, 1343,
     1343, 1343, 1343, 1343, 1343, 1333, 1333, 1333, 1333, 1333,
     1333, 1333, 1333, 1344, 1344, 1344, 1344, 1344, 1344, 1344,
     1344, 1345, 1345, 1346, 1347, 1347, 1347, 1347, 1347, 1334,
     1359, 1348, 1348, 1348, 1348, 1348, 1348, 1349, 1349, 1349,
     1349, 1349, 1349, 1349, 1349, 1350, 1350, 1350, 1350, 1350,

     1351, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352, 1352,
     1352, 1353, 1353, 1353, 1353, 1353, 1353, 1353, 1353, 1354,
     1354, 1354, 1354, 1354, 1355, 1356, 1356, 1356, 1356, 1356,
     1356, 1356, 1356, 1356, 1356, 1352, 1352, 1352, 1352, 1352,
     1352, 1352, 1352, 1357, 1357, 1357, 1357, 1357, 1357, 1357,
     1357, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1356, 1358,
     1358, 1358, 1358, 1358, 1358, 1358, 1358,   41,   41,   41,
       41,   41,   41,   41,   41,   78, 1359,   78,   78,   78,
       78,   78,   78,   85,   85,   85,   84,   84,   84,  119,
     1359,  119,  122, 1359,  122,  124,  124,  124,  125,  125,

      125,  161, 1359,  161,  162, 1359,  162,  162,  163,  163,
      163,  164,  164,  164,  172,  172,  172,  200, 1359,  200,
      203, 1359,  203,  204,  204,  204,  205,  205,  205,  218,
      218,  218,  223, 1359,  223,  226, 1359,  226,  227,  227,
      227,  227,  227,  247, 1359,  247,  248,  248,  248,  249,
      249,  249,  257,  257,  257,  257,  257,  264,  264,  264,
      265,  265,  265,  274, 1359,  274,  291,  291,  291,  294,
      294,  294,  295,  295,  295,  296,  296,  296,  316,  316,
      316,  317,  317,  317,  326,  326,  326,  331, 1359,  331,
      334, 1359,  334,  336, 1359,  336,  339, 1359,  339,  340,

      340,  340,  340,  340,  355,  355,  355,  356,  356,  356,
      357,  357,  357,  365,  365,  365,  365,  365,  372,  372,
      372,  372,  372,  379,  379,  379,  380,  380,  380,  384,
      384,  384,  392,  392,  392,  334, 1359,  334,  401, 1359,
      401,  339, 1359,  339,  405, 1359,  405,   57, 1359, 1359,
       57, 1359,   57,  420,  420,  420,  421,  421,  421,  448,
      448,  448,  449,  449,  449,  456,  456,  456,  463, 1359,
      463,  466, 1359,  466,  467, 1359,  467,  467,  467,  471,
      471,  471,  475,  475,  475,  478,  478,  478,  480, 1359,
      480,  483, 1359,  483,  485, 1359,  485,  488, 1359,  488,

      489,  489,  489,  489,  489,   57, 1359, 1359,   57, 1359,
       57,  498, 1359,  498,  501, 1359,  501,  502,  502,  502,
      503,  503,  503,  511,  511,  511,  511,  511,  518,  518,
      518,  518,  518,  525,  525,  525,  525,  525,  532,  532,
      532,  533,  533,  533,  537,  537,  537,  541, 1359,  541,
      541,  541,  544,  544,  544,  466, 1359,  466,  551, 1359,
      551,  556,  556,  556,  478,  478,  478,  562,  562,  562,
      483, 1359,  483,  566, 1359,  566,  488, 1359,  488,  570,
     1359,  570,  501, 1359,  501,  584, 1359,  584,  585,  585,
      585,  586,  586,  586,  620,  620,  620,  621,  621,  621,

      628,  628,  628,  635,  635,  635,  642, 1359,  642,  645,
     1359,  645,  647, 1359,  647,  650, 1359,  650,  651, 1359,
      651,  651,  651,  655,  655,  655,  659,  659,  659,  662,
      662,  662,  664, 1359,  664,  667, 1359,  667,  669, 1359,
      669,  672, 1359,  672,  673,  673,  673,  673,  673,  682,
     1359,  682,  685, 1359,  685,  686,  686,  686,  698,  698,
      698,  698,  698,  705,  705,  705,  705,  705,  712,  712,
      712,  712,  712,  719,  719,  719,  719,  719,  726,  726,
      726,  727,  727,  727,  731,  731,  731,  735, 1359,  735,
      735,  735,  738,  738,  738,  742, 1359,  742,  742,  742,

      745,  745,  745,  645, 1359,  645,  752, 1359,  752,  650,
     1359,  650,  756, 1359,  756,  761,  761,  761,  662,  662,
      662,  767,  767,  767,  667, 1359,  667,  771, 1359,  771,
      672, 1359,  672,  775, 1359,  775,  685, 1359,  685,  789,
     1359,  789,  790,  790,  790,  798,  798,  798, 1359,  798,
      794,  794,  794,  801, 1359,  801,  805, 1359,  805,  809,
     1359,  809,  813, 1359,  813,  817, 1359,  817,  819,  819,
      819,  820,  820,  820,  827,  827,  827,  834,  834,  834,
      841,  841,  841,  852, 1359,  852,  855, 1359,  855,  857,
     1359,  857,  860, 1359,  860,  861, 1359,  861,  861,  861,

      865,  865,  865,  869,  869,  869,  872,  872,  872,  874,
     1359,  874,  877, 1359,  877,  879, 1359,  879,  882, 1359,
      882,  883,  883,  883,  883,  883,  892, 1359,  892,  895,
     1359,  895,  901,  901,  901,  900,  900,  900,  904,  904,
      904, 1359,  904,  905,  905,  905,  905,  905,  906,  906,
      906, 1359,  906,  907,  907,  907,  907,  907,  908,  908,
      908, 1359,  908,  909,  909,  909,  909,  909,  910,  910,
      910, 1359,  910,  911,  911,  911,  911,  911,  912,  912,
      912, 1359,  912,  913,  913,  913,  913,  913,  914,  914,
      914, 1359,  914,  915,  915,  915,  916,  916,  916,  920,

      920,  920,  924, 1359,  924,  924,  924,  927,  927,  927,
      931, 1359,  931,  931,  931,  934,  934,  934,  938, 1359,
      938,  938,  938,  941,  941,  941,  855, 1359,  855,  949,
     1359,  949,  860, 1359,  860,  953, 1359,  953,  958,  958,
      958,  872,  872,  872,  964,  964,  964,  877, 1359,  877,
      968, 1359,  968,  882, 1359,  882,  972, 1359,  972,  978,
     1359,  978,  895, 1359,  895,  983, 1359,  983,  985, 1359,
      985,  988, 1359,  988,  989, 1359,  989,  989,  989,  990,
      990,  990, 1359,  990,  991,  991,  991, 1359,  991,  992,
      992,  992, 1359,  992,  993,  993,  993, 1359,  993,  994,

      994,  994, 1359,  994,  995,  995,  995, 1359,  995,  996,
      996,  996, 1359,  996,  997,  997,  997,  998,  998,  998,
     1005, 1005, 1005, 1012, 1012, 1012, 1019, 1019, 1019, 1026,
     1026, 1026, 1037, 1359, 1037, 1040, 1359, 1040, 1042, 1359,
     1042, 1045, 1359, 1045, 1046, 1359, 1046, 1046, 1046, 1050,
     1050, 1050, 1054, 1054, 1054, 1057, 1057, 1057, 1059, 1359,
     1059, 1062, 1359, 1062, 1064, 1359, 1064, 1067, 1359, 1067,
     1068, 1068, 1068, 1068, 1068, 1069, 1069, 1069, 1359, 1069,
      988, 1359,  988, 1077, 1359, 1077, 1078, 1078, 1078, 1359,
     1078, 1079, 1079, 1079, 1359, 1079, 1080, 1080, 1080, 1359,

     1080, 1081, 1081, 1081, 1359, 1081, 1082, 1082, 1082, 1359,
     1082, 1083, 1083, 1083, 1359, 1083, 1084, 1084, 1084, 1359,
     1084, 1085, 1085, 1085, 1093, 1093, 1093, 1097, 1359, 1097,
     1097, 1097, 1100, 1100, 1100, 1104, 1359, 1104, 1104, 1104,
     1107, 1107, 1107, 1111, 1359, 1111, 1111, 1111, 1114, 1114,
     1114, 1118, 1359, 1118, 1118, 1118, 1121, 1121, 1121, 1040,
     1359, 1040, 1129, 1359, 1129, 1045, 1359, 1045, 1133, 1359,
     1133, 1138, 1138, 1138, 1057, 1057, 1057, 1144, 1144, 1144,
     1062, 1359, 1062, 1148, 1359, 1148, 1067, 1359, 1067, 1152,
     1359, 1152, 1153, 1153, 1153, 1359, 1153, 1156, 1359, 1156,

     1159, 1359, 1159,  902,  902,  902, 1359,  902, 1160, 1160,
     1160, 1168, 1359, 1168, 1164, 1164, 1164, 1171, 1359, 1171,
     1170, 1170, 1170, 1175, 1359, 1175, 1174, 1174, 1174, 1179,
     1359, 1179, 1178, 1178, 1178, 1183, 1359, 1183, 1182, 1182,
     1182, 1187, 1359, 1187, 1186, 1186, 1186, 1194, 1359, 1194,
     1197, 1359, 1197, 1199, 1359, 1199, 1202, 1359, 1202, 1203,
     1359, 1203, 1203, 1203, 1207, 1207, 1207, 1211, 1211, 1211,
     1214, 1214, 1214, 1216, 1359, 1216, 1219, 1359, 1219, 1220,
     1220, 1220, 1359, 1220, 1159, 1359, 1159, 1224, 1359, 1224,
     1230, 1230, 1230, 1229, 1229, 1229, 1233, 1359, 1233, 1234,

     1359, 1234, 1234, 1234, 1235, 1359, 1235, 1236, 1359, 1236,
     1236, 1236, 1237, 1359, 1237, 1238, 1359, 1238, 1238, 1238,
     1239, 1359, 1239, 1240, 1359, 1240, 1240, 1240, 1241, 1359,
     1241, 1242, 1359, 1242, 1242, 1242, 1243, 1359, 1243, 1248,
     1359, 1248, 1252, 1359, 1252, 1258, 1359, 1258, 1257, 1257,
     1257, 1260, 1260, 1260, 1264, 1359, 1264, 1265, 1265, 1265,
     1268, 1268, 1268, 1270, 1359, 1270, 1273, 1359, 1273, 1274,
     1359, 1274, 1274, 1274, 1275, 1359, 1275, 1276, 1359, 1276,
     1277, 1359, 1277, 1278, 1359, 1278, 1279, 1359, 1279, 1280,
     1359, 1280, 1281, 1359, 1281, 1287, 1359, 1287, 1290, 1359,

     1290, 1292, 1359, 1292, 1295, 1359, 1295, 1296, 1359, 1296,
     1296, 1296, 1297, 1359, 1297, 1298, 1298, 1298, 1301, 1301,
     1301, 1302, 1302, 1302, 1306, 1359, 1306, 1307, 1359, 1307,
     1308, 1359, 1308, 1309, 1359, 1309, 1310, 1359, 1310, 1311,
     1359, 1311, 1312, 1359, 1312, 1313, 1359, 1313, 1318, 1359,
     1318, 1322, 1359, 1322, 1323, 1359, 1323, 1324, 1324, 1324,
     1326, 1359, 1326, 1329, 1359, 1329, 1231, 1359, 1231, 1335,
     1359, 1335, 1338, 1359, 1338, 1339, 1359, 1339, 1343, 1359,
     1343, 1348, 1359, 1348,    5, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,

     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359
    } ;

static yyconst short int yy_chk[8240] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    3,    3,    4,    4,   15,   15,
       15,   15,   15,   15,   15,   15,   16, 1348,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   36, 1343,   36,
     1338,   16,   16,   18,   18,   18,   18,   18,   18, 1336,
       16,   16,   16,   16,   16,   17,   17,   17,   17,   17,

       17,   17,   17,   24,   51,   51,   24,   24,   24,   24,
       24,   24,   24,   24,   24,  140,  140,  170,  170,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   25,   25,   25,
       25,   25,   25,   25,   25,   25,   28,   28,   34,   71,
       25,   25,  233,  233,   71,   28,   34,  244,  244,   25,
       25,   25,   25,   25,   45,   45,   45,   45,   45,   45,
       45,   45,   46,  144,   46,   46,   46,   46,   46,   46,
       46,   46,   47,   69,   47,   47,   47,   47,   47,   47,

       47,   47,   47,  123,  162,  180,  180,   47,   47,  144,
     1335,   69, 1329,  123,  162,  180,   47,   47,   47,   47,
       47,   50,   50,   50,   50,   50,   50,   50,   50,   52,
       52,   52,   52,   52,   52,   52,   52,   53,   53,   53,
       53,   53,   53,   53,   53,   53,   53,  246,  246, 1327,
      181,  181,   53,   53,   93,   93,   93,   93,   93,   93,
      181,   53,   53,   53,   53,   53,   58,   58,   58,   58,
       58,   58,   58,   58,  255,  255, 1326,  186,  186,   58,
       58,  129,  129,  129,  129,  129,  129,  186,   58,   58,
       58,   58,   58,   79,   79,   79,   79,   79,   79,   79,

       79,   81,  329,   81,   81,   81,   81,   81,   81,   81,
       81,   83,  329,   83,   83,   83,   83,   83,   83,   83,
       83,   83,  262,  262,  291,  291,   83,   83,  176,  176,
      176,  176,  176,  176,  176,   83,   83,   83,   83,   83,
       86,   86,   86,   86,   86,   86,   86,   86,   86,   86,
      292,  292, 1322,  211,  211,   86,   86,  184,  184,  184,
      184,  184,  184,  211,   86,   86,   86,   86,   86,   90,
       90,   90,   90,   90,   90,   90,   90,   91,   91,   91,
       91,   91,   91,   91,   91,   91,   91,   91,  294,  294,
      212,  212,   91,   91,  209,  209,  209,  209,  209,  209,

      212,   91,   91,   91,   91,   91,   92,   92,   92,   92,
       92,   92,   92,   92,   94, 1321,   94,   94,   94,   94,
       94,   94,   94,   94,   95,   95,   95,   95,   95,   95,
       95,   95,  346,  346, 1319,  217,  217,   95,   95,  215,
      215,  215,  215,  215,  215,  217,   95,   95,   95,   95,
       95,  117,  117,  117,  117,  117,  117,  117,  117,  118,
      118,  118,  118,  118,  118,  118,  118,  121, 1318,  121,
      121,  121,  121,  121,  121,  127,  127,  127,  127,  127,
      127,  127,  127,  127,  127,  127,  227,  227,  257,  257,
      127,  127,  353,  353,  353, 1306,  227, 1305,  257,  127,

      127,  127,  127,  127,  128,  128,  128,  128,  128,  128,
      128,  128,  130, 1303,  130,  130,  130,  130,  130,  130,
      130,  130,  133,  133,  133,  133,  133,  133,  133,  133,
      134,  134,  134,  134,  134,  134,  134,  134,  135, 1296,
      135,  135,  135,  135,  135,  135,  135,  135,  136,  136,
      136,  136,  136,  136,  136,  136,  136,  136,  136,  355,
      355,  278,  278,  136,  136,  269,  269,  269,  269,  269,
      269,  278,  136,  136,  136,  136,  136,  137,  137,  137,
      137,  137,  137,  137,  137,  279,  279,  284,  284, 1295,
      137,  137,  363,  363, 1293,  279, 1292,  284, 1290,  137,

      137,  137,  137,  137,  138, 1288,  138,  138,  138,  138,
      138,  138,  138,  138,  139,  139,  139,  139,  139,  139,
      139,  139,  159, 1287,  159,  159,  159,  159,  159,  159,
      159,  159,  165,  165,  165,  165,  165,  165,  165,  165,
      165,  165,  370,  370, 1274,  302,  302,  165,  165,  282,
      282,  282,  282,  282,  282,  302,  165,  165,  165,  165,
      165,  166,  166,  166,  166,  166,  166,  166,  166,  166,
      166,  166,  377,  377,  303,  303,  166,  166,  300,  300,
      300,  300,  300,  300,  303,  166,  166,  166,  166,  166,
      167,  167,  167,  167,  167,  167,  167,  167,  398,  398,

     1273,  308,  308,  167,  167,  306,  306,  306,  306,  306,
      306,  308,  167,  167,  167,  167,  167,  168, 1271,  168,
      168,  168,  168,  168,  168,  168,  168,  169,  169,  169,
      169,  169,  169,  169,  169,  175,  175,  175,  175,  175,
      175,  175,  175,  178, 1270,  178,  178,  178,  178,  178,
      178,  178,  178,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  182,  182,  309,  309,  310,  310,  182,  182,
      400,  400,  475,  475,  309, 1264,  310,  182,  182,  182,
      182,  182,  183,  183,  183,  183,  183,  183,  183,  183,
      185, 1255,  185,  185,  185,  185,  185,  185,  185,  185,

      199,  199,  199,  199,  199,  199,  199,  199,  202, 1253,
      202,  202,  202,  202,  202,  202,  207,  207,  207,  207,
      207,  207,  207,  207,  207,  207,  207,  476,  476,  315,
      315,  207,  207,  313,  313,  313,  313,  313,  313,  315,
      207,  207,  207,  207,  207,  208,  208,  208,  208,  208,
      208,  208,  208,  210, 1252,  210,  210,  210,  210,  210,
      210,  210,  210,  213,  213,  213,  213,  213,  213,  213,
      213,  213,  213,  213,  478,  478,  340,  340,  213,  213,
      321,  321,  321,  321,  321,  321,  340,  213,  213,  213,
      213,  213,  214,  214,  214,  214,  214,  214,  214,  214,

      216, 1251,  216,  216,  216,  216,  216,  216,  216,  216,
      220,  220,  220,  220,  220,  220,  220,  220,  365,  365,
      372,  372, 1249,  220,  220,  495,  495, 1248,  365, 1242,
      372, 1240,  220,  220,  220,  220,  220,  222,  222,  222,
      222,  222,  222,  222,  222,  225, 1238,  225,  225,  225,
      225,  225,  225,  228, 1236,  228,  228,  228,  228,  228,
      228,  228,  228,  229,  229,  229,  229,  229,  229,  229,
      229,  229,  229,  229,  387,  391,  392, 1234,  229,  229,
      509,  509,  516,  516,  387,  391,  392,  229,  229,  229,
      229,  229,  230,  230,  230,  230,  230,  230,  230,  230,

      523,  523, 1227,  397, 1225,  230,  230,  395,  395,  395,
      395,  395,  395,  397,  230,  230,  230,  230,  230,  231,
     1224,  231,  231,  231,  231,  231,  231,  231,  231,  232,
      232,  232,  232,  232,  232,  232,  232,  245,  245,  245,
      245,  245,  245,  245,  245,  245,  245,  250,  250,  250,
      250,  250,  250,  250,  250,  250,  250,  409,  409,  410,
      410, 1219,  250,  250,  530,  530, 1217,  409, 1216,  410,
     1207,  250,  250,  250,  250,  250,  251,  251,  251,  251,
      251,  251,  251,  251,  251,  251,  251,  562,  562,  415,
      415,  251,  251,  413,  413,  413,  413,  413,  413,  415,

      251,  251,  251,  251,  251,  252,  252,  252,  252,  252,
      252,  252,  252,  563,  563, 1203,  427,  427,  252,  252,
      425,  425,  425,  425,  425,  425,  427,  252,  252,  252,
      252,  252,  253, 1202,  253,  253,  253,  253,  253,  253,
      253,  253,  254,  254,  254,  254,  254,  254,  254,  254,
      258,  258,  258,  258,  258,  258,  258,  258,  258,  258,
      258,  428,  428,  433,  433,  258,  258,  565,  565,  659,
      659,  428, 1200,  433,  258,  258,  258,  258,  258,  259,
      259,  259,  259,  259,  259,  259,  259,  660,  660, 1199,
      434,  434,  259,  259,  431,  431,  431,  431,  431,  431,

      434,  259,  259,  259,  259,  259,  260, 1197,  260,  260,
      260,  260,  260,  260,  260,  260,  261,  261,  261,  261,
      261,  261,  261,  261,  266,  266,  266,  266,  266,  266,
      266,  266,  435,  435,  440,  440, 1195,  266,  266,  662,
      662, 1194,  435, 1164,  440, 1163,  266,  266,  266,  266,
      266,  267,  455,  267,  267,  267,  267,  267,  267,  267,
      267,  267,  455, 1160,  441,  441,  267,  267,  438,  438,
      438,  438,  438,  438,  441,  267,  267,  267,  267,  267,
      268,  268,  268,  268,  268,  268,  268,  268,  272,  456,
      272,  272,  272,  272,  272,  272,  272,  272,  276,  456,

      276,  276,  276,  276,  276,  276,  276,  276,  280,  280,
      280,  280,  280,  280,  280,  280,  280,  280,  280,  442,
      442,  447,  447,  280,  280,  679,  679,  690,  690,  442,
     1159,  447,  280,  280,  280,  280,  280,  281,  281,  281,
      281,  281,  281,  281,  281,  283, 1157,  283,  283,  283,
      283,  283,  283,  283,  283,  290,  290,  290,  290,  290,
      290,  290,  290,  293,  293,  293,  293,  293,  293,  293,
      293,  298,  298,  298,  298,  298,  298,  298,  298,  298,
      298,  298,  696,  696,  461, 1156,  298,  298,  445,  445,
      445,  445,  445,  445,  461,  298,  298,  298,  298,  298,

      299,  299,  299,  299,  299,  299,  299,  299,  301, 1152,
      301,  301,  301,  301,  301,  301,  301,  301,  304,  304,
      304,  304,  304,  304,  304,  304,  304,  304,  304,  703,
      703,  474, 1151,  304,  304,  453,  453,  453,  453,  453,
      453,  474,  304,  304,  304,  304,  304,  305,  305,  305,
      305,  305,  305,  305,  305,  307, 1149,  307,  307,  307,
      307,  307,  307,  307,  307,  311,  311,  311,  311,  311,
      311,  311,  311,  311,  311,  311,  710,  710,  489,  489,
      311,  311,  459,  459,  459,  459,  459,  459,  489,  311,
      311,  311,  311,  311,  312,  312,  312,  312,  312,  312,

      312,  312,  314,  540,  314,  314,  314,  314,  314,  314,
      314,  314,  319,  540,  319,  319,  319,  319,  319,  319,
      319,  319,  319,  511,  511,  518,  518,  319,  319,  717,
      717,  724,  724,  511, 1148,  518,  319,  319,  319,  319,
      319,  320,  320,  320,  320,  320,  320,  320,  320,  323,
      323,  323,  323,  323,  323,  323,  323,  324, 1142,  324,
      324,  324,  324,  324,  324,  324,  324,  324,  525,  525,
      547, 1136,  324,  324,  767,  767,  768,  768,  525, 1134,
      547,  324,  324,  324,  324,  324,  325,  325,  325,  325,
      325,  325,  325,  325,  555,  556,  561,  574,  574,  325,

      325,  770,  770, 1133,  555,  556,  561,  574,  325,  325,
      325,  325,  325,  327,  327,  327,  327,  327,  327,  327,
      327,  328, 1132,  328,  328,  328,  328,  328,  328,  798,
      798,  328,  330,  330,  330,  330,  330,  330,  330,  330,
      333, 1130,  333,  333,  333,  333,  333,  333,  335,  335,
      335,  335,  335,  335,  335,  335,  338, 1129,  338,  338,
      338,  338,  338,  338,  341, 1121,  341,  341,  341,  341,
      341,  341,  341,  341,  342,  342,  342,  342,  342,  342,
      342,  342,  342,  342,  342,  801,  801,  575,  575,  342,
      342,  559,  559,  559,  559,  559,  559,  575,  342,  342,

      342,  342,  342,  343,  343,  343,  343,  343,  343,  343,
      343,  805,  805, 1118,  580,  580,  343,  343,  578,  578,
      578,  578,  578,  578,  580,  343,  343,  343,  343,  343,
      344, 1114,  344,  344,  344,  344,  344,  344,  344,  344,
      345,  345,  345,  345,  345,  345,  345,  345,  351,  351,
      351,  351,  351,  351,  351,  351,  352,  352,  352,  352,
      352,  352,  352,  352,  358,  358,  358,  358,  358,  358,
      358,  358,  358,  358,  809,  809, 1111,  592,  592,  358,
      358,  590,  590,  590,  590,  590,  590,  592,  358,  358,
      358,  358,  358,  359,  359,  359,  359,  359,  359,  359,

      359,  359,  359,  359,  593,  593,  598,  598,  359,  359,
      813,  813,  817,  817,  593, 1107,  598,  359,  359,  359,
      359,  359,  360,  360,  360,  360,  360,  360,  360,  360,
      869,  869, 1104,  599,  599,  360,  360,  596,  596,  596,
      596,  596,  596,  599,  360,  360,  360,  360,  360,  361,
     1100,  361,  361,  361,  361,  361,  361,  361,  361,  362,
      362,  362,  362,  362,  362,  362,  362,  366,  366,  366,
      366,  366,  366,  366,  366,  366,  366,  366,  600,  600,
      605,  605,  366,  366,  870,  870,  872,  872,  600, 1097,
      605,  366,  366,  366,  366,  366,  367,  367,  367,  367,

      367,  367,  367,  367,  889,  889, 1093,  606,  606,  367,
      367,  603,  603,  603,  603,  603,  603,  606,  367,  367,
      367,  367,  367,  368, 1090,  368,  368,  368,  368,  368,
      368,  368,  368,  369,  369,  369,  369,  369,  369,  369,
      369,  373,  373,  373,  373,  373,  373,  373,  373,  373,
      373,  373,  607,  607,  612,  612,  373,  373,  901,  901,
      902,  902,  607, 1085,  612,  373,  373,  373,  373,  373,
      374,  374,  374,  374,  374,  374,  374,  374,  904,  904,
     1077,  613,  613,  374,  374,  610,  610,  610,  610,  610,
      610,  613,  374,  374,  374,  374,  374,  375, 1076,  375,

      375,  375,  375,  375,  375,  375,  375,  376,  376,  376,
      376,  376,  376,  376,  376,  381,  381,  381,  381,  381,
      381,  381,  381,  614,  614,  619,  619, 1074,  381,  381,
      906,  906, 1067,  614, 1065,  619, 1064,  381,  381,  381,
      381,  381,  382,  627,  382,  382,  382,  382,  382,  382,
      382,  382,  382,  627, 1062,  628, 1060,  382,  382,  617,
      617,  617,  617,  617,  617,  628,  382,  382,  382,  382,
      382,  383,  383,  383,  383,  383,  383,  383,  383,  908,
      908, 1059,  633, 1050,  383,  383,  625,  625,  625,  625,
      625,  625,  633,  383,  383,  383,  383,  383,  385,  385,

      385,  385,  385,  385,  385,  385,  386, 1046,  386,  386,
      386,  386,  386,  386,  910,  910,  386,  389,  634,  389,
      389,  389,  389,  389,  389,  389,  389,  393,  634,  393,
      393,  393,  393,  393,  393,  393,  393,  393,  912,  912,
      635, 1045,  393,  393,  631,  631,  631,  631,  631,  631,
      635,  393,  393,  393,  393,  393,  394,  394,  394,  394,
      394,  394,  394,  394,  399,  399,  399,  399,  399,  399,
      399,  399,  399,  399,  403,  640,  403,  403,  403,  403,
      403,  403,  403,  403,  407,  640,  407,  407,  407,  407,
      407,  407,  407,  407,  411,  411,  411,  411,  411,  411,

      411,  411,  411,  411,  411,  914,  914,  658, 1043,  411,
      411,  638,  638,  638,  638,  638,  638,  658,  411,  411,
      411,  411,  411,  412,  412,  412,  412,  412,  412,  412,
      412,  414,  734,  414,  414,  414,  414,  414,  414,  414,
      414,  418,  734,  418,  418,  418,  418,  418,  418,  418,
      418,  423,  423,  423,  423,  423,  423,  423,  423,  423,
      423,  423,  673,  673,  698,  698,  423,  423,  964,  964,
      965,  965,  673, 1042,  698,  423,  423,  423,  423,  423,
      424,  424,  424,  424,  424,  424,  424,  424,  426, 1040,
      426,  426,  426,  426,  426,  426,  426,  426,  429,  429,

      429,  429,  429,  429,  429,  429,  429,  429,  429,  967,
      967,  705,  705,  429,  429,  689,  689,  689,  689,  689,
      689,  705,  429,  429,  429,  429,  429,  430,  430,  430,
      430,  430,  430,  430,  430,  432, 1038,  432,  432,  432,
      432,  432,  432,  432,  432,  436,  436,  436,  436,  436,
      436,  436,  436,  436,  436,  436,  712,  712,  719,  719,
      436,  436,  978,  978,  990,  990,  712, 1037,  719,  436,
      436,  436,  436,  436,  437,  437,  437,  437,  437,  437,
      437,  437,  439, 1030,  439,  439,  439,  439,  439,  439,
      439,  439,  443,  443,  443,  443,  443,  443,  443,  443,

      443,  443,  443,  741,  748,  760, 1023,  443,  443,  991,
      991,  992,  992,  741,  748,  760,  443,  443,  443,  443,
      443,  444,  444,  444,  444,  444,  444,  444,  444,  446,
      761,  446,  446,  446,  446,  446,  446,  446,  446,  451,
      761,  451,  451,  451,  451,  451,  451,  451,  451,  451,
      993,  993,  766, 1016,  451,  451,  764,  764,  764,  764,
      764,  764,  766,  451,  451,  451,  451,  451,  452,  452,
      452,  452,  452,  452,  452,  452,  457, 1009,  457,  457,
      457,  457,  457,  457,  457,  457,  457,  779,  779,  780,
      780,  457,  457,  994,  994,  995,  995,  779, 1003,  780,

      457,  457,  457,  457,  457,  458,  458,  458,  458,  458,
      458,  458,  458,  462,  462,  462,  462,  462,  462,  462,
      462,  465,  998,  465,  465,  465,  465,  465,  465,  468,
      468,  468,  468,  468,  468,  468,  468,  469,  797,  469,
      469,  469,  469,  469,  469,  469,  469,  469,  797,  997,
      785,  785,  469,  469,  783,  783,  783,  783,  783,  783,
      785,  469,  469,  469,  469,  469,  470,  470,  470,  470,
      470,  470,  470,  470,  799,  799,  800,  800,  989,  470,
      470,  996,  996,  988,  799,  986,  800,  985,  470,  470,
      470,  470,  470,  472,  472,  472,  472,  472,  472,  472,

      472,  473,  983,  473,  473,  473,  473,  473,  473, 1054,
     1054,  473,  477,  477,  477,  477,  477,  477,  477,  477,
      479,  479,  479,  479,  479,  479,  479,  479,  482,  975,
      482,  482,  482,  482,  482,  482,  484,  484,  484,  484,
      484,  484,  484,  484,  487,  973,  487,  487,  487,  487,
      487,  487,  490,  972,  490,  490,  490,  490,  490,  490,
      490,  490,  491,  491,  491,  491,  491,  491,  491,  491,
      491,  491,  491,  802,  802,  803,  803,  491,  491, 1055,
     1055, 1057, 1057,  802,  971,  803,  491,  491,  491,  491,
      491,  492,  492,  492,  492,  492,  492,  492,  492,  804,

      804,  806,  806,  969,  492,  492, 1069, 1069,  968,  804,
      962,  806,  956,  492,  492,  492,  492,  492,  493,  954,
      493,  493,  493,  493,  493,  493,  493,  493,  494,  494,
      494,  494,  494,  494,  494,  494,  497,  497,  497,  497,
      497,  497,  497,  497,  500,  953,  500,  500,  500,  500,
      500,  500,  504,  504,  504,  504,  504,  504,  504,  504,
      504,  504,  807,  807,  808,  808,  952,  504,  504, 1078,
     1078,  950,  807,  949,  808,  941,  504,  504,  504,  504,
      504,  505,  505,  505,  505,  505,  505,  505,  505,  505,
      505,  505,  810,  810,  811,  811,  505,  505, 1079, 1079,

     1080, 1080,  810,  938,  811,  505,  505,  505,  505,  505,
      506,  506,  506,  506,  506,  506,  506,  506,  812,  812,
      814,  814,  934,  506,  506, 1081, 1081,  931,  812,  927,
      814,  924,  506,  506,  506,  506,  506,  507,  920,  507,
      507,  507,  507,  507,  507,  507,  507,  508,  508,  508,
      508,  508,  508,  508,  508,  512,  512,  512,  512,  512,
      512,  512,  512,  512,  512,  512,  815,  815,  816,  816,
      512,  512, 1082, 1082, 1083, 1083,  815,  916,  816,  512,
      512,  512,  512,  512,  513,  513,  513,  513,  513,  513,
      513,  513,  818,  818,  826,  827,  915,  513,  513, 1084,

     1084,  898,  818,  896,  826,  827,  513,  513,  513,  513,
      513,  514,  895,  514,  514,  514,  514,  514,  514,  514,
      514,  515,  515,  515,  515,  515,  515,  515,  515,  519,
      519,  519,  519,  519,  519,  519,  519,  519,  519,  519,
     1144, 1144,  832,  893,  519,  519,  824,  824,  824,  824,
      824,  824,  832,  519,  519,  519,  519,  519,  520,  520,
      520,  520,  520,  520,  520,  520, 1145, 1145,  892,  833,
      890,  520,  520,  830,  830,  830,  830,  830,  830,  833,
      520,  520,  520,  520,  520,  521,  882,  521,  521,  521,
      521,  521,  521,  521,  521,  522,  522,  522,  522,  522,

      522,  522,  522,  526,  526,  526,  526,  526,  526,  526,
      526,  526,  526,  526,  834,  839,  840,  880,  526,  526,
     1147, 1147, 1153, 1153,  834,  839,  840,  526,  526,  526,
      526,  526,  527,  527,  527,  527,  527,  527,  527,  527,
     1211, 1211,  879,  841,  877,  527,  527,  837,  837,  837,
      837,  837,  837,  841,  527,  527,  527,  527,  527,  528,
      875,  528,  528,  528,  528,  528,  528,  528,  528,  529,
      529,  529,  529,  529,  529,  529,  529,  534,  534,  534,
      534,  534,  534,  534,  534, 1212, 1212,  874,  846,  865,
      534,  534,  844,  844,  844,  844,  844,  844,  846,  534,

      534,  534,  534,  534,  535,  868,  535,  535,  535,  535,
      535,  535,  535,  535,  535,  868,  861,  883,  883,  535,
      535,  849,  849,  849,  849,  849,  849,  883,  535,  535,
      535,  535,  535,  536,  536,  536,  536,  536,  536,  536,
      536,  899,  900,  903,  905,  905,  536,  536, 1214, 1214,
      860,  899,  900,  903,  905,  536,  536,  536,  536,  536,
      538,  538,  538,  538,  538,  538,  538,  538,  539,  858,
      539,  539,  539,  539,  539,  539, 1220, 1220,  539,  542,
      857,  542,  542,  542,  542,  542,  542,  542,  542,  542,
      907,  907,  909,  909,  542,  542, 1221, 1221, 1223, 1223,

      907,  855,  909,  542,  542,  542,  542,  542,  543,  543,
      543,  543,  543,  543,  543,  543,  911,  911,  913,  913,
      853,  543,  543, 1260, 1260,  852,  911,  845,  913,  838,
      543,  543,  543,  543,  543,  545,  545,  545,  545,  545,
      545,  545,  545,  546,  831,  546,  546,  546,  546,  546,
      546, 1261, 1261,  546,  549,  923,  549,  549,  549,  549,
      549,  549,  549,  549,  553,  923,  553,  553,  553,  553,
      553,  553,  553,  553,  557,  930,  557,  557,  557,  557,
      557,  557,  557,  557,  557,  930,  937,  944,  825,  557,
      557, 1263, 1263, 1265, 1265,  821,  937,  944,  557,  557,

      557,  557,  557,  558,  558,  558,  558,  558,  558,  558,
      558,  564,  564,  564,  564,  564,  564,  564,  564,  564,
      564,  568,  957,  568,  568,  568,  568,  568,  568,  568,
      568,  572,  957,  572,  572,  572,  572,  572,  572,  572,
      572,  576,  576,  576,  576,  576,  576,  576,  576,  576,
      576,  576,  958,  963,  976,  976,  576,  576, 1266, 1266,
     1268, 1268,  958,  963,  976,  576,  576,  576,  576,  576,
      577,  577,  577,  577,  577,  577,  577,  577,  579, 1004,
      579,  579,  579,  579,  579,  579,  579,  579,  582, 1004,
      582,  582,  582,  582,  582,  582,  582,  582,  587,  587,

      587,  587,  587,  587,  587,  587,  587, 1298, 1298,  977,
      977,  587,  587,  961,  961,  961,  961,  961,  961,  977,
      587,  587,  587,  587,  587,  588,  588,  588,  588,  588,
      588,  588,  588,  588,  588,  588,  979,  979, 1005,  820,
      588,  588, 1299, 1299, 1301, 1301,  979,  819, 1005,  588,
      588,  588,  588,  588,  589,  589,  589,  589,  589,  589,
      589,  589,  591,  794,  591,  591,  591,  591,  591,  591,
      591,  591,  594,  594,  594,  594,  594,  594,  594,  594,
      594,  594,  594, 1302, 1302, 1010,  793,  594,  594, 1002,
     1002, 1002, 1002, 1002, 1002, 1010,  594,  594,  594,  594,

      594,  595,  595,  595,  595,  595,  595,  595,  595,  597,
      790,  597,  597,  597,  597,  597,  597,  597,  597,  601,
      601,  601,  601,  601,  601,  601,  601,  601,  601,  601,
     1324, 1324, 1011,  789,  601,  601, 1008, 1008, 1008, 1008,
     1008, 1008, 1011,  601,  601,  601,  601,  601,  602,  602,
      602,  602,  602,  602,  602,  602,  604,  788,  604,  604,
      604,  604,  604,  604,  604,  604,  608,  608,  608,  608,
      608,  608,  608,  608,  608,  608,  608, 1012, 1017, 1018,
      786,  608,  608,  778,  776,  775,  774, 1012, 1017, 1018,
      608,  608,  608,  608,  608,  609,  609,  609,  609,  609,

      609,  609,  609,  611,  772,  611,  611,  611,  611,  611,
      611,  611,  611,  615,  615,  615,  615,  615,  615,  615,
      615,  615,  615,  615,  771,  765, 1019,  759,  615,  615,
     1015, 1015, 1015, 1015, 1015, 1015, 1019,  615,  615,  615,
      615,  615,  616,  616,  616,  616,  616,  616,  616,  616,
      618, 1024,  618,  618,  618,  618,  618,  618,  618,  618,
      623, 1024,  623,  623,  623,  623,  623,  623,  623,  623,
      623,  757,  756, 1025,  755,  623,  623, 1022, 1022, 1022,
     1022, 1022, 1022, 1025,  623,  623,  623,  623,  623,  624,
      624,  624,  624,  624,  624,  624,  624,  629, 1026,  629,

      629,  629,  629,  629,  629,  629,  629,  629, 1026,  753,
     1031,  752,  629,  629, 1029, 1029, 1029, 1029, 1029, 1029,
     1031,  629,  629,  629,  629,  629,  630,  630,  630,  630,
      630,  630,  630,  630,  636, 1053,  636,  636,  636,  636,
      636,  636,  636,  636,  636, 1053,  745, 1068, 1068,  636,
      636, 1034, 1034, 1034, 1034, 1034, 1034, 1068,  636,  636,
      636,  636,  636,  637,  637,  637,  637,  637,  637,  637,
      637,  641,  641,  641,  641,  641,  641,  641,  641,  644,
      742,  644,  644,  644,  644,  644,  644,  646,  646,  646,
      646,  646,  646,  646,  646,  649,  738,  649,  649,  649,

      649,  649,  649,  652,  652,  652,  652,  652,  652,  652,
      652,  653, 1096,  653,  653,  653,  653,  653,  653,  653,
      653,  653, 1096,  735, 1103,  731,  653,  653, 1072, 1072,
     1072, 1072, 1072, 1072, 1103,  653,  653,  653,  653,  653,
      654,  654,  654,  654,  654,  654,  654,  654,  727,  726,
      725, 1110,  718,  654,  654, 1088, 1088, 1088, 1088, 1088,
     1088, 1110,  654,  654,  654,  654,  654,  656,  656,  656,
      656,  656,  656,  656,  656,  657,  711,  657,  657,  657,
      657,  657,  657,  704,  697,  657,  661,  661,  661,  661,
      661,  661,  661,  661,  663,  663,  663,  663,  663,  663,

      663,  663,  666,  691,  666,  666,  666,  666,  666,  666,
      668,  668,  668,  668,  668,  668,  668,  668,  671,  686,
      671,  671,  671,  671,  671,  671,  674,  685,  674,  674,
      674,  674,  674,  674,  674,  674,  675,  675,  675,  675,
      675,  675,  675,  675,  675,  675,  675, 1117, 1124, 1137,
      683,  675,  675,  682,  680,  672,  670, 1117, 1124, 1137,
      675,  675,  675,  675,  675,  676,  676,  676,  676,  676,
      676,  676,  676, 1138, 1143, 1167, 1169,  669,  676,  676,
      667,  665,  664, 1138, 1143, 1167, 1169,  676,  676,  676,
      676,  676,  677,  655,  677,  677,  677,  677,  677,  677,

      677,  677,  678,  678,  678,  678,  678,  678,  678,  678,
      681,  681,  681,  681,  681,  681,  681,  681,  684,  651,
      684,  684,  684,  684,  684,  684,  687, 1170,  687,  687,
      687,  687,  687,  687,  687,  687,  687, 1170,  650, 1172,
      648,  687,  687, 1141, 1141, 1141, 1141, 1141, 1141, 1172,
      687,  687,  687,  687,  687,  688,  688,  688,  688,  688,
      688,  688,  688,  692,  692,  692,  692,  692,  692,  692,
      692,  692,  692,  692, 1173, 1174, 1176,  647,  692,  692,
      645,  643,  642, 1177, 1173, 1174, 1176,  692,  692,  692,
      692,  692,  694, 1177,  694,  694,  694,  694,  694,  694,

      694,  694,  695,  695,  695,  695,  695,  695,  695,  695,
      699,  699,  699,  699,  699,  699,  699,  699,  699,  699,
      699, 1178, 1180, 1181,  639,  699,  699,  632,  626,  622,
     1182, 1178, 1180, 1181,  699,  699,  699,  699,  699,  701,
     1182,  701,  701,  701,  701,  701,  701,  701,  701,  702,
      702,  702,  702,  702,  702,  702,  702,  706,  706,  706,
      706,  706,  706,  706,  706,  706,  706,  706, 1184, 1185,
     1186,  621,  706,  706,  620,  586,  585, 1188, 1184, 1185,
     1186,  706,  706,  706,  706,  706,  708, 1188,  708,  708,
      708,  708,  708,  708,  708,  708,  709,  709,  709,  709,

      709,  709,  709,  709,  713,  713,  713,  713,  713,  713,
      713,  713,  713,  713,  713,  584,  583, 1210,  581,  713,
      713, 1191, 1191, 1191, 1191, 1191, 1191, 1210,  713,  713,
      713,  713,  713,  715,  573,  715,  715,  715,  715,  715,
      715,  715,  715,  716,  716,  716,  716,  716,  716,  716,
      716,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,  720, 1228, 1229, 1232,  571,  720,  720,  570,  569,
      567, 1256, 1228, 1229, 1232,  720,  720,  720,  720,  720,
      722, 1256,  722,  722,  722,  722,  722,  722,  722,  722,
      723,  723,  723,  723,  723,  723,  723,  723,  728,  728,

      728,  728,  728,  728,  728,  728, 1257, 1259,  566,  560,
      554,  728,  728,  552,  551,  550, 1257, 1259,  548,  544,
      728,  728,  728,  728,  728,  729,  541,  729,  729,  729,
      729,  729,  729,  729,  729,  729,  537,  533,  532,  531,
      729,  729, 1284, 1284, 1284, 1284, 1284, 1284,  524,  729,
      729,  729,  729,  729,  730,  730,  730,  730,  730,  730,
      730,  730,  517,  510,  503,  502,  501,  730,  730, 1332,
     1332, 1332, 1332, 1332, 1332,  499,  730,  730,  730,  730,
      730,  732,  732,  732,  732,  732,  732,  732,  732,  733,
      498,  733,  733,  733,  733,  733,  733,  496,  488,  733,

      736,  486,  736,  736,  736,  736,  736,  736,  736,  736,
      736,  485,  483,  481,  480,  736,  736, 1351, 1351, 1351,
     1351, 1351, 1351,  471,  736,  736,  736,  736,  736,  737,
      737,  737,  737,  737,  737,  737,  737,  467,  466,  464,
      463,  460,  737,  737, 1355, 1355, 1355, 1355, 1355, 1355,
      454,  737,  737,  737,  737,  737,  739,  739,  739,  739,
      739,  739,  739,  739,  740,  450,  740,  740,  740,  740,
      740,  740,  449,  448,  740,  743,  422,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  421,  420,  419,  417,
      743,  743,  408,  406,  405,  404,  402,  401,  396,  743,

      743,  743,  743,  743,  744,  744,  744,  744,  744,  744,
      744,  744,  390,  388,  384,  380,  379,  744,  744,  378,
      371,  364,  357,  356,  349,  347,  744,  744,  744,  744,
      744,  746,  746,  746,  746,  746,  746,  746,  746,  747,
      339,  747,  747,  747,  747,  747,  747,  337,  336,  747,
      749,  749,  749,  749,  749,  749,  749,  749,  750,  750,
      750,  750,  750,  750,  750,  750,  751,  751,  751,  751,
      751,  751,  751,  751,  754,  334,  754,  754,  754,  754,
      754,  754,  754,  754,  758,  332,  758,  758,  758,  758,
      758,  758,  758,  758,  762,  331,  762,  762,  762,  762,

      762,  762,  762,  762,  762,  326,  322,  318,  317,  762,
      762,  316,  297,  296,  295,  289,  287,  286,  762,  762,
      762,  762,  762,  763,  763,  763,  763,  763,  763,  763,
      763,  769,  769,  769,  769,  769,  769,  769,  769,  769,
      769,  773,  285,  773,  773,  773,  773,  773,  773,  773,
      773,  777,  277,  777,  777,  777,  777,  777,  777,  777,
      777,  781,  781,  781,  781,  781,  781,  781,  781,  781,
      781,  781,  275,  274,  273,  271,  781,  781,  270,  265,
      264,  263,  256,  249,  248,  781,  781,  781,  781,  781,
      782,  782,  782,  782,  782,  782,  782,  782,  784,  247,

      784,  784,  784,  784,  784,  784,  784,  784,  787,  243,
      787,  787,  787,  787,  787,  787,  787,  787,  791,  791,
      791,  791,  791,  791,  791,  791,  792,  241,  792,  792,
      792,  792,  792,  792,  792,  792,  792,  239,  238,  234,
      226,  792,  792,  224,  223,  219,  218,  206,  205,  204,
      792,  792,  792,  792,  792,  795,  795,  795,  795,  795,
      795,  795,  795,  796,  203,  796,  796,  796,  796,  796,
      796,  201,  200,  796,  822,  198,  822,  822,  822,  822,
      822,  822,  822,  822,  822,  197,  196,  195,  194,  822,
      822,  193,  192,  191,  188,  179,  177,  173,  822,  822,

      822,  822,  822,  823,  823,  823,  823,  823,  823,  823,
      823,  828,  172,  828,  828,  828,  828,  828,  828,  828,
      828,  828,  171,  164,  163,  161,  828,  828,  160,  158,
      156,  155,  154,  153,  152,  828,  828,  828,  828,  828,
      829,  829,  829,  829,  829,  829,  829,  829,  835,  151,
      835,  835,  835,  835,  835,  835,  835,  835,  835,  149,
      148,  146,  145,  835,  835,  143,  142,  141,  132,  131,
      126,  125,  835,  835,  835,  835,  835,  836,  836,  836,
      836,  836,  836,  836,  836,  842,  124,  842,  842,  842,
      842,  842,  842,  842,  842,  842,  122,  120,  119,  115,

      842,  842,  114,  113,  112,  111,  110,  109,  107,  842,
      842,  842,  842,  842,  843,  843,  843,  843,  843,  843,
      843,  843,  847,  847,  847,  847,  847,  847,  847,  847,
      848,  848,  848,  848,  848,  848,  848,  848,  851,  851,
      851,  851,  851,  851,  851,  851,  854,  106,  854,  854,
      854,  854,  854,  854,  856,  856,  856,  856,  856,  856,
      856,  856,  859,  105,  859,  859,  859,  859,  859,  859,
      862,  862,  862,  862,  862,  862,  862,  862,  863,  104,
      863,  863,  863,  863,  863,  863,  863,  863,  863,  103,
      102,   98,   96,  863,  863,   89,   88,   85,   84,   82,

       80,   77,  863,  863,  863,  863,  863,  864,  864,  864,
      864,  864,  864,  864,  864,   76,   75,   74,   73,   72,
      864,  864,   70,   68,   67,   66,   65,   64,   63,  864,
      864,  864,  864,  864,  866,  866,  866,  866,  866,  866,
      866,  866,  867,   62,  867,  867,  867,  867,  867,  867,
       61,   60,  867,  871,  871,  871,  871,  871,  871,  871,
      871,  873,  873,  873,  873,  873,  873,  873,  873,  876,
       59,  876,  876,  876,  876,  876,  876,  878,  878,  878,
      878,  878,  878,  878,  878,  881,   49,  881,  881,  881,
      881,  881,  881,  884,   48,  884,  884,  884,  884,  884,

      884,  884,  884,  885,  885,  885,  885,  885,  885,  885,
      885,  885,  885,  885,   43,   40,   39,   38,  885,  885,
       37,   35,   33,   32,   31,   30,   29,  885,  885,  885,
      885,  885,  887,   27,  887,  887,  887,  887,  887,  887,
      887,  887,  888,  888,  888,  888,  888,  888,  888,  888,
      891,  891,  891,  891,  891,  891,  891,  891,  894,   26,
      894,  894,  894,  894,  894,  894,  897,   23,  897,  897,
      897,  897,  897,  897,  897,  897,  917,  917,  917,  917,
      917,  917,  917,  917,   22,   21,   19,    9,    7,  917,
      917,    5,    0,    0,    0,    0,    0,    0,  917,  917,

      917,  917,  917,  918,    0,  918,  918,  918,  918,  918,
      918,  918,  918,  918,    0,    0,    0,    0,  918,  918,
        0,    0,    0,    0,    0,    0,    0,  918,  918,  918,
      918,  918,  919,  919,  919,  919,  919,  919,  919,  919,
        0,    0,    0,    0,    0,  919,  919,    0,    0,    0,
        0,    0,    0,    0,  919,  919,  919,  919,  919,  921,
      921,  921,  921,  921,  921,  921,  921,  922,    0,  922,
      922,  922,  922,  922,  922,    0,    0,  922,  925,    0,
      925,  925,  925,  925,  925,  925,  925,  925,  925,    0,
        0,    0,    0,  925,  925,    0,    0,    0,    0,    0,

        0,    0,  925,  925,  925,  925,  925,  926,  926,  926,
      926,  926,  926,  926,  926,    0,    0,    0,    0,    0,
      926,  926,    0,    0,    0,    0,    0,    0,    0,  926,
      926,  926,  926,  926,  928,  928,  928,  928,  928,  928,
      928,  928,  929,    0,  929,  929,  929,  929,  929,  929,
        0,    0,  929,  932,    0,  932,  932,  932,  932,  932,
      932,  932,  932,  932,    0,    0,    0,    0,  932,  932,
        0,    0,    0,    0,    0,    0,    0,  932,  932,  932,
      932,  932,  933,  933,  933,  933,  933,  933,  933,  933,
        0,    0,    0,    0,    0,  933,  933,    0,    0,    0,

        0,    0,    0,    0,  933,  933,  933,  933,  933,  935,
      935,  935,  935,  935,  935,  935,  935,  936,    0,  936,
      936,  936,  936,  936,  936,    0,    0,  936,  939,    0,
      939,  939,  939,  939,  939,  939,  939,  939,  939,    0,
        0,    0,    0,  939,  939,    0,    0,    0,    0,    0,
        0,    0,  939,  939,  939,  939,  939,  940,  940,  940,
      940,  940,  940,  940,  940,    0,    0,    0,    0,    0,
      940,  940,    0,    0,    0,    0,    0,    0,    0,  940,
      940,  940,  940,  940,  942,  942,  942,  942,  942,  942,
      942,  942,  943,    0,  943,  943,  943,  943,  943,  943,

        0,    0,  943,  946,  946,  946,  946,  946,  946,  946,
      946,  947,  947,  947,  947,  947,  947,  947,  947,  948,
      948,  948,  948,  948,  948,  948,  948,  951,    0,  951,
      951,  951,  951,  951,  951,  951,  951,  955,    0,  955,
      955,  955,  955,  955,  955,  955,  955,  959,    0,  959,
      959,  959,  959,  959,  959,  959,  959,  959,    0,    0,
        0,    0,  959,  959,    0,    0,    0,    0,    0,    0,
        0,  959,  959,  959,  959,  959,  960,  960,  960,  960,
      960,  960,  960,  960,  966,  966,  966,  966,  966,  966,
      966,  966,  966,  966,  970,    0,  970,  970,  970,  970,

      970,  970,  970,  970,  974,    0,  974,  974,  974,  974,
      974,  974,  974,  974,  980,  980,  980,  980,  980,  980,
      980,  980,  981,  981,  981,  981,  981,  981,  981,  981,
      982,  982,  982,  982,  982,  982,  982,  982,  984,  984,
      984,  984,  984,  984,  984,  984,  987,    0,  987,  987,
      987,  987,  987,  987,  999,  999,  999,  999,  999,  999,
      999,  999,  999,    0,    0,    0,    0,  999,  999,    0,
        0,    0,    0,    0,    0,    0,  999,  999,  999,  999,
      999, 1000,    0, 1000, 1000, 1000, 1000, 1000, 1000, 1000,
     1000, 1000,    0,    0,    0,    0, 1000, 1000,    0,    0,

        0,    0,    0,    0,    0, 1000, 1000, 1000, 1000, 1000,
     1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1006,    0,
     1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1006,    0,
        0,    0,    0, 1006, 1006,    0,    0,    0,    0,    0,
        0,    0, 1006, 1006, 1006, 1006, 1006, 1007, 1007, 1007,
     1007, 1007, 1007, 1007, 1007, 1013,    0, 1013, 1013, 1013,
     1013, 1013, 1013, 1013, 1013, 1013,    0,    0,    0,    0,
     1013, 1013,    0,    0,    0,    0,    0,    0,    0, 1013,
     1013, 1013, 1013, 1013, 1014, 1014, 1014, 1014, 1014, 1014,
     1014, 1014, 1020,    0, 1020, 1020, 1020, 1020, 1020, 1020,

     1020, 1020, 1020,    0,    0,    0,    0, 1020, 1020,    0,
        0,    0,    0,    0,    0,    0, 1020, 1020, 1020, 1020,
     1020, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1027,
        0, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027, 1027,
        0,    0,    0,    0, 1027, 1027,    0,    0,    0,    0,
        0,    0,    0, 1027, 1027, 1027, 1027, 1027, 1028, 1028,
     1028, 1028, 1028, 1028, 1028, 1028, 1032, 1032, 1032, 1032,
     1032, 1032, 1032, 1032, 1033, 1033, 1033, 1033, 1033, 1033,
     1033, 1033, 1036, 1036, 1036, 1036, 1036, 1036, 1036, 1036,
     1039,    0, 1039, 1039, 1039, 1039, 1039, 1039, 1041, 1041,

     1041, 1041, 1041, 1041, 1041, 1041, 1044,    0, 1044, 1044,
     1044, 1044, 1044, 1044, 1047, 1047, 1047, 1047, 1047, 1047,
     1047, 1047, 1048,    0, 1048, 1048, 1048, 1048, 1048, 1048,
     1048, 1048, 1048,    0,    0,    0,    0, 1048, 1048,    0,
        0,    0,    0,    0,    0,    0, 1048, 1048, 1048, 1048,
     1048, 1049, 1049, 1049, 1049, 1049, 1049, 1049, 1049,    0,
        0,    0,    0,    0, 1049, 1049,    0,    0,    0,    0,
        0,    0,    0, 1049, 1049, 1049, 1049, 1049, 1051, 1051,
     1051, 1051, 1051, 1051, 1051, 1051, 1052,    0, 1052, 1052,
     1052, 1052, 1052, 1052,    0,    0, 1052, 1056, 1056, 1056,

     1056, 1056, 1056, 1056, 1056, 1058, 1058, 1058, 1058, 1058,
     1058, 1058, 1058, 1061,    0, 1061, 1061, 1061, 1061, 1061,
     1061, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1066,
        0, 1066, 1066, 1066, 1066, 1066, 1066, 1070, 1070, 1070,
     1070, 1070, 1070, 1070, 1070, 1071, 1071, 1071, 1071, 1071,
     1071, 1071, 1071, 1075,    0, 1075, 1075, 1075, 1075, 1075,
     1075, 1075, 1075, 1086,    0, 1086, 1086, 1086, 1086, 1086,
     1086, 1086, 1086, 1086,    0,    0,    0,    0, 1086, 1086,
        0,    0,    0,    0,    0,    0,    0, 1086, 1086, 1086,
     1086, 1086, 1087, 1087, 1087, 1087, 1087, 1087, 1087, 1087,

     1091,    0, 1091, 1091, 1091, 1091, 1091, 1091, 1091, 1091,
     1091,    0,    0,    0,    0, 1091, 1091,    0,    0,    0,
        0,    0,    0,    0, 1091, 1091, 1091, 1091, 1091, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1095,    0, 1095,
     1095, 1095, 1095, 1095, 1095,    0,    0, 1095, 1098,    0,
     1098, 1098, 1098, 1098, 1098, 1098, 1098, 1098, 1098,    0,
        0,    0,    0, 1098, 1098,    0,    0,    0,    0,    0,
        0,    0, 1098, 1098, 1098, 1098, 1098, 1101, 1101, 1101,
     1101, 1101, 1101, 1101, 1101, 1102,    0, 1102, 1102, 1102,
     1102, 1102, 1102,    0,    0, 1102, 1105,    0, 1105, 1105,

     1105, 1105, 1105, 1105, 1105, 1105, 1105,    0,    0,    0,
        0, 1105, 1105,    0,    0,    0,    0,    0,    0,    0,
     1105, 1105, 1105, 1105, 1105, 1108, 1108, 1108, 1108, 1108,
     1108, 1108, 1108, 1109,    0, 1109, 1109, 1109, 1109, 1109,
     1109,    0,    0, 1109, 1112,    0, 1112, 1112, 1112, 1112,
     1112, 1112, 1112, 1112, 1112,    0,    0,    0,    0, 1112,
     1112,    0,    0,    0,    0,    0,    0,    0, 1112, 1112,
     1112, 1112, 1112, 1115, 1115, 1115, 1115, 1115, 1115, 1115,
     1115, 1116,    0, 1116, 1116, 1116, 1116, 1116, 1116,    0,
        0, 1116, 1119,    0, 1119, 1119, 1119, 1119, 1119, 1119,

     1119, 1119, 1119,    0,    0,    0,    0, 1119, 1119,    0,
        0,    0,    0,    0,    0,    0, 1119, 1119, 1119, 1119,
     1119, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1122, 1123,
        0, 1123, 1123, 1123, 1123, 1123, 1123,    0,    0, 1123,
     1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1127, 1127,
     1127, 1127, 1127, 1127, 1127, 1127, 1128, 1128, 1128, 1128,
     1128, 1128, 1128, 1128, 1131,    0, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1131, 1135,    0, 1135, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1139,    0, 1139, 1139, 1139, 1139,
     1139, 1139, 1139, 1139, 1139,    0,    0,    0,    0, 1139,

     1139,    0,    0,    0,    0,    0,    0,    0, 1139, 1139,
     1139, 1139, 1139, 1140, 1140, 1140, 1140, 1140, 1140, 1140,
     1140, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146, 1146,
     1146, 1150,    0, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
     1150, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1155, 1158,
        0, 1158, 1158, 1158, 1158, 1158, 1158, 1161, 1161, 1161,
     1161, 1161, 1161, 1161, 1161, 1162,    0, 1162, 1162, 1162,
     1162, 1162, 1162, 1162, 1162, 1162,    0,    0,    0,    0,
     1162, 1162,    0,    0,    0,    0,    0,    0,    0, 1162,
     1162, 1162, 1162, 1162, 1165, 1165, 1165, 1165, 1165, 1165,

     1165, 1165, 1166,    0, 1166, 1166, 1166, 1166, 1166, 1166,
        0,    0, 1166, 1189, 1189, 1189, 1189, 1189, 1189, 1189,
     1189, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1193,
     1193, 1193, 1193, 1193, 1193, 1193, 1193, 1196,    0, 1196,
     1196, 1196, 1196, 1196, 1196, 1198, 1198, 1198, 1198, 1198,
     1198, 1198, 1198, 1201,    0, 1201, 1201, 1201, 1201, 1201,
     1201, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1204, 1205,
        0, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205, 1205,
        0,    0,    0,    0, 1205, 1205,    0,    0,    0,    0,
        0,    0,    0, 1205, 1205, 1205, 1205, 1205, 1208, 1208,

     1208, 1208, 1208, 1208, 1208, 1208, 1209,    0, 1209, 1209,
     1209, 1209, 1209, 1209,    0,    0, 1209, 1213, 1213, 1213,
     1213, 1213, 1213, 1213, 1213, 1215, 1215, 1215, 1215, 1215,
     1215, 1215, 1215, 1218,    0, 1218, 1218, 1218, 1218, 1218,
     1218, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222, 1222,
     1222, 1226,    0, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
     1226, 1245, 1245, 1245, 1245, 1245, 1245, 1245, 1245, 1246,
     1246, 1246, 1246, 1246, 1246, 1246, 1246, 1247, 1247, 1247,
     1247, 1247, 1247, 1247, 1247, 1250,    0, 1250, 1250, 1250,
     1250, 1250, 1250, 1250, 1250, 1254,    0, 1254, 1254, 1254,

     1254, 1254, 1254, 1254, 1254, 1262, 1262, 1262, 1262, 1262,
     1262, 1262, 1262, 1262, 1262, 1267, 1267, 1267, 1267, 1267,
     1267, 1267, 1267, 1269, 1269, 1269, 1269, 1269, 1269, 1269,
     1269, 1272,    0, 1272, 1272, 1272, 1272, 1272, 1272, 1282,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1283, 1283, 1283,
     1283, 1283, 1283, 1283, 1283, 1286, 1286, 1286, 1286, 1286,
     1286, 1286, 1286, 1289,    0, 1289, 1289, 1289, 1289, 1289,
     1289, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1291, 1294,
        0, 1294, 1294, 1294, 1294, 1294, 1294, 1300, 1300, 1300,
     1300, 1300, 1300, 1300, 1300, 1304,    0, 1304, 1304, 1304,

     1304, 1304, 1304, 1304, 1304, 1315, 1315, 1315, 1315, 1315,
     1315, 1315, 1315, 1316, 1316, 1316, 1316, 1316, 1316, 1316,
     1316, 1317, 1317, 1317, 1317, 1317, 1317, 1317, 1317, 1320,
        0, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1320, 1325,
     1325, 1325, 1325, 1325, 1325, 1325, 1325, 1328,    0, 1328,
     1328, 1328, 1328, 1328, 1328, 1330, 1330, 1330, 1330, 1330,
     1330, 1330, 1330, 1331, 1331, 1331, 1331, 1331, 1331, 1331,
     1331, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1334, 1337,
        0, 1337, 1337, 1337, 1337, 1337, 1337, 1340, 1340, 1340,
     1340, 1340, 1340, 1340, 1340, 1341, 1341, 1341, 1341, 1341,

     1341, 1341, 1341, 1342, 1342, 1342, 1342, 1342, 1342, 1342,
     1342, 1345, 1345, 1345, 1345, 1345, 1345, 1345, 1345, 1346,
     1346, 1346, 1346, 1346, 1346, 1346, 1346, 1347, 1347, 1347,
     1347, 1347, 1347, 1347, 1347, 1349, 1349, 1349, 1349, 1349,
     1349, 1349, 1349, 1350, 1350, 1350, 1350, 1350, 1350, 1350,
     1350, 1353, 1353, 1353, 1353, 1353, 1353, 1353, 1353, 1354,
     1354, 1354, 1354, 1354, 1354, 1354, 1354, 1360, 1360, 1360,
     1360, 1360, 1360, 1360, 1360, 1361,    0, 1361, 1361, 1361,
     1361, 1361, 1361, 1362, 1362, 1362, 1363, 1363, 1363, 1364,
        0, 1364, 1365,    0, 1365, 1366, 1366, 1366, 1367, 1367,

     1367, 1368,    0, 1368, 1369,    0, 1369, 1369, 1370, 1370,
     1370, 1371, 1371, 1371, 1372, 1372, 1372, 1373,    0, 1373,
     1374,    0, 1374, 1375, 1375, 1375, 1376, 1376, 1376, 1377,
     1377, 1377, 1378,    0, 1378, 1379,    0, 1379, 1380, 1380,
     1380, 1380, 1380, 1381,    0, 1381, 1382, 1382, 1382, 1383,
     1383, 1383, 1384, 1384, 1384, 1384, 1384, 1385, 1385, 1385,
     1386, 1386, 1386, 1387,    0, 1387, 1388, 1388, 1388, 1389,
     1389, 1389, 1390, 1390, 1390, 1391, 1391, 1391, 1392, 1392,
     1392, 1393, 1393, 1393, 1394, 1394, 1394, 1395,    0, 1395,
     1396,    0, 1396, 1397,    0, 1397, 1398,    0, 1398, 1399,

     1399, 1399, 1399, 1399, 1400, 1400, 1400, 1401, 1401, 1401,
     1402, 1402, 1402, 1403, 1403, 1403, 1403, 1403, 1404, 1404,
     1404, 1404, 1404, 1405, 1405, 1405, 1406, 1406, 1406, 1407,
     1407, 1407, 1408, 1408, 1408, 1409,    0, 1409, 1410,    0,
     1410, 1411,    0, 1411, 1412,    0, 1412, 1413,    0,    0,
     1413,    0, 1413, 1414, 1414, 1414, 1415, 1415, 1415, 1416,
     1416, 1416, 1417, 1417, 1417, 1418, 1418, 1418, 1419,    0,
     1419, 1420,    0, 1420, 1421,    0, 1421, 1421, 1421, 1422,
     1422, 1422, 1423, 1423, 1423, 1424, 1424, 1424, 1425,    0,
     1425, 1426,    0, 1426, 1427,    0, 1427, 1428,    0, 1428,

     1429, 1429, 1429, 1429, 1429, 1430,    0,    0, 1430,    0,
     1430, 1431,    0, 1431, 1432,    0, 1432, 1433, 1433, 1433,
     1434, 1434, 1434, 1435, 1435, 1435, 1435, 1435, 1436, 1436,
     1436, 1436, 1436, 1437, 1437, 1437, 1437, 1437, 1438, 1438,
     1438, 1439, 1439, 1439, 1440, 1440, 1440, 1441,    0, 1441,
     1441, 1441, 1442, 1442, 1442, 1443,    0, 1443, 1444,    0,
     1444, 1445, 1445, 1445, 1446, 1446, 1446, 1447, 1447, 1447,
     1448,    0, 1448, 1449,    0, 1449, 1450,    0, 1450, 1451,
        0, 1451, 1452,    0, 1452, 1453,    0, 1453, 1454, 1454,
     1454, 1455, 1455, 1455, 1456, 1456, 1456, 1457, 1457, 1457,

     1458, 1458, 1458, 1459, 1459, 1459, 1460,    0, 1460, 1461,
        0, 1461, 1462,    0, 1462, 1463,    0, 1463, 1464,    0,
     1464, 1464, 1464, 1465, 1465, 1465, 1466, 1466, 1466, 1467,
     1467, 1467, 1468,    0, 1468, 1469,    0, 1469, 1470,    0,
     1470, 1471,    0, 1471, 1472, 1472, 1472, 1472, 1472, 1473,
        0, 1473, 1474,    0, 1474, 1475, 1475, 1475, 1476, 1476,
     1476, 1476, 1476, 1477, 1477, 1477, 1477, 1477, 1478, 1478,
     1478, 1478, 1478, 1479, 1479, 1479, 1479, 1479, 1480, 1480,
     1480, 1481, 1481, 1481, 1482, 1482, 1482, 1483,    0, 1483,
     1483, 1483, 1484, 1484, 1484, 1485,    0, 1485, 1485, 1485,

     1486, 1486, 1486, 1487,    0, 1487, 1488,    0, 1488, 1489,
        0, 1489, 1490,    0, 1490, 1491, 1491, 1491, 1492, 1492,
     1492, 1493, 1493, 1493, 1494,    0, 1494, 1495,    0, 1495,
     1496,    0, 1496, 1497,    0, 1497, 1498,    0, 1498, 1499,
        0, 1499, 1500, 1500, 1500, 1501, 1501, 1501,    0, 1501,
     1502, 1502, 1502, 1503,    0, 1503, 1504,    0, 1504, 1505,
        0, 1505, 1506,    0, 1506, 1507,    0, 1507, 1508, 1508,
     1508, 1509, 1509, 1509, 1510, 1510, 1510, 1511, 1511, 1511,
     1512, 1512, 1512, 1513,    0, 1513, 1514,    0, 1514, 1515,
        0, 1515, 1516,    0, 1516, 1517,    0, 1517, 1517, 1517,

     1518, 1518, 1518, 1519, 1519, 1519, 1520, 1520, 1520, 1521,
        0, 1521, 1522,    0, 1522, 1523,    0, 1523, 1524,    0,
     1524, 1525, 1525, 1525, 1525, 1525, 1526,    0, 1526, 1527,
        0, 1527, 1528, 1528, 1528, 1529, 1529, 1529, 1530, 1530,
     1530,    0, 1530, 1531, 1531, 1531, 1531, 1531, 1532, 1532,
     1532,    0, 1532, 1533, 1533, 1533, 1533, 1533, 1534, 1534,
     1534,    0, 1534, 1535, 1535, 1535, 1535, 1535, 1536, 1536,
     1536,    0, 1536, 1537, 1537, 1537, 1537, 1537, 1538, 1538,
     1538,    0, 1538, 1539, 1539, 1539, 1539, 1539, 1540, 1540,
     1540,    0, 1540, 1541, 1541, 1541, 1542, 1542, 1542, 1543,

     1543, 1543, 1544,    0, 1544, 1544, 1544, 1545, 1545, 1545,
     1546,    0, 1546, 1546, 1546, 1547, 1547, 1547, 1548,    0,
     1548, 1548, 1548, 1549, 1549, 1549, 1550,    0, 1550, 1551,
        0, 1551, 1552,    0, 1552, 1553,    0, 1553, 1554, 1554,
     1554, 1555, 1555, 1555, 1556, 1556, 1556, 1557,    0, 1557,
     1558,    0, 1558, 1559,    0, 1559, 1560,    0, 1560, 1561,
        0, 1561, 1562,    0, 1562, 1563,    0, 1563, 1564,    0,
     1564, 1565,    0, 1565, 1566,    0, 1566, 1566, 1566, 1567,
     1567, 1567,    0, 1567, 1568, 1568, 1568,    0, 1568, 1569,
     1569, 1569,    0, 1569, 1570, 1570, 1570,    0, 1570, 1571,

     1571, 1571,    0, 1571, 1572, 1572, 1572,    0, 1572, 1573,
     1573, 1573,    0, 1573, 1574, 1574, 1574, 1575, 1575, 1575,
     1576, 1576, 1576, 1577, 1577, 1577, 1578, 1578, 1578, 1579,
     1579, 1579, 1580,    0, 1580, 1581,    0, 1581, 1582,    0,
     1582, 1583,    0, 1583, 1584,    0, 1584, 1584, 1584, 1585,
     1585, 1585, 1586, 1586, 1586, 1587, 1587, 1587, 1588,    0,
     1588, 1589,    0, 1589, 1590,    0, 1590, 1591,    0, 1591,
     1592, 1592, 1592, 1592, 1592, 1593, 1593, 1593,    0, 1593,
     1594,    0, 1594, 1595,    0, 1595, 1596, 1596, 1596,    0,
     1596, 1597, 1597, 1597,    0, 1597, 1598, 1598, 1598,    0,

     1598, 1599, 1599, 1599,    0, 1599, 1600, 1600, 1600,    0,
     1600, 1601, 1601, 1601,    0, 1601, 1602, 1602, 1602,    0,
     1602, 1603, 1603, 1603, 1604, 1604, 1604, 1605,    0, 1605,
     1605, 1605, 1606, 1606, 1606, 1607,    0, 1607, 1607, 1607,
     1608, 1608, 1608, 1609,    0, 1609, 1609, 1609, 1610, 1610,
     1610, 1611,    0, 1611, 1611, 1611, 1612, 1612, 1612, 1613,
        0, 1613, 1614,    0, 1614, 1615,    0, 1615, 1616,    0,
     1616, 1617, 1617, 1617, 1618, 1618, 1618, 1619, 1619, 1619,
     1620,    0, 1620, 1621,    0, 1621, 1622,    0, 1622, 1623,
        0, 1623, 1624, 1624, 1624,    0, 1624, 1625,    0, 1625,

     1626,    0, 1626, 1627, 1627, 1627,    0, 1627, 1628, 1628,
     1628, 1629,    0, 1629, 1630, 1630, 1630, 1631,    0, 1631,
     1632, 1632, 1632, 1633,    0, 1633, 1634, 1634, 1634, 1635,
        0, 1635, 1636, 1636, 1636, 1637,    0, 1637, 1638, 1638,
     1638, 1639,    0, 1639, 1640, 1640, 1640, 1641,    0, 1641,
     1642,    0, 1642, 1643,    0, 1643, 1644,    0, 1644, 1645,
        0, 1645, 1645, 1645, 1646, 1646, 1646, 1647, 1647, 1647,
     1648, 1648, 1648, 1649,    0, 1649, 1650,    0, 1650, 1651,
     1651, 1651,    0, 1651, 1652,    0, 1652, 1653,    0, 1653,
     1654, 1654, 1654, 1655, 1655, 1655, 1656,    0, 1656, 1657,

        0, 1657, 1657, 1657, 1658,    0, 1658, 1659,    0, 1659,
     1659, 1659, 1660,    0, 1660, 1661,    0, 1661, 1661, 1661,
     1662,    0, 1662, 1663,    0, 1663, 1663, 1663, 1664,    0,
     1664, 1665,    0, 1665, 1665, 1665, 1666,    0, 1666, 1667,
        0, 1667, 1668,    0, 1668, 1669,    0, 1669, 1670, 1670,
     1670, 1671, 1671, 1671, 1672,    0, 1672, 1673, 1673, 1673,
     1674, 1674, 1674, 1675,    0, 1675, 1676,    0, 1676, 1677,
        0, 1677, 1677, 1677, 1678,    0, 1678, 1679,    0, 1679,
     1680,    0, 1680, 1681,    0, 1681, 1682,    0, 1682, 1683,
        0, 1683, 1684,    0, 1684, 1685,    0, 1685, 1686,    0,

     1686, 1687,    0, 1687, 1688,    0, 1688, 1689,    0, 1689,
     1689, 1689, 1690,    0, 1690, 1691, 1691, 1691, 1692, 1692,
     1692, 1693, 1693, 1693, 1694,    0, 1694, 1695,    0, 1695,
     1696,    0, 1696, 1697,    0, 1697, 1698,    0, 1698, 1699,
        0, 1699, 1700,    0, 1700, 1701,    0, 1701, 1702,    0,
     1702, 1703,    0, 1703, 1704,    0, 1704, 1705, 1705, 1705,
     1706,    0, 1706, 1707,    0, 1707, 1708,    0, 1708, 1709,
        0, 1709, 1710,    0, 1710, 1711,    0, 1711, 1712,    0,
     1712, 1713,    0, 1713, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,

     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359,
     1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359, 1359
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "policy.l"
#define INITIAL 0
#line 2 "policy.l"

#include <vector>
#include <string>
#include <sstream>

#include "policy_module.h"
#include "libxorp/xorp.h"
#include "policy/common/policy_utils.hh"
#include "policy_parser.hh"
#include "yacc.yy_policy_parser.cc.h"

#define yylval yy_policy_parserlval
#define yyerror yy_policy_parsererror
#define yyparse yy_policy_parserparse

void yyerror(const char *m);
extern int yyparse(void);

using namespace policy_parser;

// instantiate the globals here.
vector<Node*>* policy_parser::_parser_nodes;
unsigned policy_parser::_parser_lineno;

// try not to pollute
namespace {
	string _last_error;
	Term::BLOCKS _block;
}

#define YY_NO_UNPUT 1
#define YY_NEVER_INTERACTIVE 1
#define STR 1

#line 2765 "lex.yy_policy_parser.cc"

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

#line 62 "policy.l"


#line 2919 "lex.yy_policy_parser.cc"

	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1360 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 8185 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 64 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINTRANGE;
		}  
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 68 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINT;
		}  
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 72 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_INT;
		}  
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 76 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 80 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 84 "policy.l"
BEGIN(STR);
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 86 "policy.l"
BEGIN(INITIAL);
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 88 "policy.l"
{ yylval.c_str = strdup(yytext); 
		  _parser_lineno += policy_utils::count_nl(yytext);
		  /* XXX: a string can be started with " but terminated with '
		   * and vice versa...
		   */ 
		  return YY_STR;
		}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 96 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4RANGE;
		}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 101 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4;
		}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 106 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4NET;
		}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 112 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6RANGE;
		}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 117 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6;
		}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 122 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6NET;
		}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 127 "policy.l"
{
		  // the colon is an alias for asignment in action and equality
		  // in the source / dest blocks.
		  if (_block == Term::ACTION)
		  	return YY_ASSIGN;
		  else
		  	return YY_EQ;
		}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 136 "policy.l"
return YY_LPAR;
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 137 "policy.l"
return YY_RPAR;
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 138 "policy.l"
return YY_EQ; 
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 139 "policy.l"
return YY_NE;
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 140 "policy.l"
return YY_LE;
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 141 "policy.l"
return YY_GE;
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 142 "policy.l"
return YY_LT;
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 143 "policy.l"
return YY_GT;
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 144 "policy.l"
return YY_ADD;
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 145 "policy.l"
return YY_MUL;
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 146 "policy.l"
return YY_SUB;
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 147 "policy.l"
return YY_ASSIGN;
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 149 "policy.l"
return YY_IPNET_EQ;
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 150 "policy.l"
return YY_IPNET_LT;
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 151 "policy.l"
return YY_IPNET_GT;
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 152 "policy.l"
return YY_IPNET_LE;
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 153 "policy.l"
return YY_IPNET_GE;
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 154 "policy.l"
return YY_AND;
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 155 "policy.l"
return YY_OR;
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 156 "policy.l"
return YY_XOR;
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 157 "policy.l"
return YY_NOT;
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 158 "policy.l"
return YY_ADD;
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 159 "policy.l"
return YY_HEAD;
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 160 "policy.l"
return YY_CTR;
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 161 "policy.l"
return YY_NE_INT;
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 162 "policy.l"
return YY_ACCEPT;
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 163 "policy.l"
return YY_REJECT;
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 164 "policy.l"
return YY_SET;
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 165 "policy.l"
return YY_REGEX;
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 166 "policy.l"
return YY_PROTOCOL;
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 167 "policy.l"
return YY_NEXT;
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 168 "policy.l"
return YY_POLICY;
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 170 "policy.l"
{ yylval.c_str = strdup(yytext);
					  return YY_ID;
					}  
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 174 "policy.l"
return YY_SEMICOLON;
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 176 "policy.l"
/* eat blanks */
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 178 "policy.l"
_parser_lineno++;
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 180 "policy.l"
{ yyerror("Unknown character"); }
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 182 "policy.l"
ECHO;
	YY_BREAK
#line 3310 "lex.yy_policy_parser.cc"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(STR):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1360 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1360 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1359);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;


	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 182 "policy.l"


void yyerror(const char *m)
{
        ostringstream oss;
        oss << "Error on line " <<  _parser_lineno << " near (";

	for(int i = 0; i < yyleng; i++)
		oss << yytext[i];
	oss << "): " << m;

        _last_error = oss.str();
}

// Everything is put in the lexer because of YY_BUFFER_STATE...
int 
policy_parser::policy_parse(vector<Node*>& outnodes, const Term::BLOCKS& block, 
			    const string& conf, string& outerr)
{

        YY_BUFFER_STATE yybuffstate = yy_scan_string(conf.c_str());

        _last_error = "No error";
        _parser_nodes = &outnodes;
        _parser_lineno = 1;
	_block = block;

        int res = yyparse();
        
        yy_delete_buffer(yybuffstate);
        outerr = _last_error;
        
        return res;
}
