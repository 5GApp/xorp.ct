#define yy_create_buffer yy_policy_parser_create_buffer
#define yy_delete_buffer yy_policy_parser_delete_buffer
#define yy_scan_buffer yy_policy_parser_scan_buffer
#define yy_scan_string yy_policy_parser_scan_string
#define yy_scan_bytes yy_policy_parser_scan_bytes
#define yy_flex_debug yy_policy_parser_flex_debug
#define yy_init_buffer yy_policy_parser_init_buffer
#define yy_flush_buffer yy_policy_parser_flush_buffer
#define yy_load_buffer_state yy_policy_parser_load_buffer_state
#define yy_switch_to_buffer yy_policy_parser_switch_to_buffer
#define yyin yy_policy_parserin
#define yyleng yy_policy_parserleng
#define yylex yy_policy_parserlex
#define yyout yy_policy_parserout
#define yyrestart yy_policy_parserrestart
#define yytext yy_policy_parsertext

#line 19 "lex.yy_policy_parser.cc"
/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header$
 * $FreeBSD: src/usr.bin/lex/flex.skl,v 1.4 1999/10/27 07:56:44 obrien Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include <unistd.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)


#define yywrap() 1
#define YY_SKIP_YYWRAP
typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 46
#define YY_END_OF_BUFFER 47
static yyconst short int yy_accept[1322] =
    {   0,
        0,    0,    0,    0,   47,   45,   43,   44,   45,    6,
       16,   17,   31,   28,   30,    2,    2,    2,   15,   42,
       22,   32,   23,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,    8,    7,   43,
       19,    3,    0,    2,    0,    0,    2,    2,    2,   13,
       20,   18,   21,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   25,   41,   41,   41,   41,
        8,    0,    0,    0,    0,    2,    0,    0,   13,    2,
        2,    0,    0,   13,   13,   13,   13,   41,   41,   38,
       41,   29,   24,   34,   41,   41,   41,   27,   41,   41,

       41,   26,    1,    0,    0,    0,    0,    0,    2,    0,
        0,    0,   13,   13,   13,   13,    0,    0,   14,   14,
        0,   13,    0,   13,   13,   13,   13,   41,   41,   41,
       41,   33,   41,   41,   41,    4,    0,    0,    0,    0,
        2,    0,    0,   13,   13,    0,   13,   13,   13,   13,
        0,    0,   14,   14,   14,    0,    0,    0,   13,   13,
       13,   13,   13,   13,   13,   39,   41,    5,   41,   41,
       41,    0,    0,    0,    0,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        0,    0,   12,   14,    0,    0,    0,    0,    0,   13,

        0,   13,    0,   13,   13,   13,   13,   36,   35,   41,
       37,   10,   10,   10,    0,    0,    0,   13,   13,    0,
       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,    0,    0,   12,   12,   12,   12,   12,    0,    0,
        0,    0,    0,    0,    0,   13,   13,   13,   13,   13,
       13,   13,   41,    0,    0,   10,   10,   10,   10,    0,
        0,    0,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        0,    0,    0,   12,   12,   12,   12,    0,   12,    0,
       12,   12,   12,   12,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,   13,    0,   13,    0,   13,   13,
       13,   13,   40,    0,   11,   11,   11,   10,    0,    0,
       13,   13,    0,   13,   13,   13,   13,   13,   13,    0,
       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,    0,    0,   12,   12,    0,   12,   12,   12,   12,
        0,    0,    0,   12,   12,   12,   12,   12,   12,   12,
       13,   13,   13,    0,    0,    0,    0,    0,    0,    0,
        0,   13,   13,   13,   13,   13,   13,   13,    0,    0,
        0,    0,    0,    0,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
        0,    0,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,    0,    0,    0,    0,    0,   12,    0,
       12,    0,   12,   12,   12,   12,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       13,    0,   13,    0,   13,   13,   13,   13,    0,    0,
        0,    0,    0,    0,    0,   13,   13,    0,   13,   13,
       13,   13,   13,   13,    0,   13,   13,   13,   13,   13,
       13,    0,   13,   13,   13,   13,   13,   13,    0,   13,
       13,   13,   13,    0,    0,   12,   12,    0,   12,   12,

       12,   12,   12,   12,    0,   12,   12,   12,   12,    0,
        0,    0,    0,    0,    0,    0,   12,   12,   12,   12,
       12,   12,   12,   13,   13,   13,   13,    0,    0,    0,
        0,    0,    0,    0,    0,   13,   13,   13,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,    0,    0,    0,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,

       12,   12,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   12,    0,   12,    0,   12,   12,   12,   12,
       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   13,    0,   13,    0,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   13,    0,   13,    0,   13,   13,   13,   13,   13,
       13,    0,   13,   13,   13,   13,   13,   13,    0,   13,
       13,   13,   13,   13,   13,    0,   13,   13,   13,   13,
       13,   13,    0,   13,   13,   13,   13,    0,    0,   12,
       12,    0,   12,   12,   12,   12,   12,   12,    0,   12,

       12,   12,   12,   12,   12,    0,   12,   12,   12,   12,
       12,   12,   12,    0,    0,    0,    0,    0,    0,    0,
        0,   12,   12,   12,   12,   12,   12,   12,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
       13,   13,   13,   13,   13,   13,   13,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        0,    0,    0,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,

       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   12,    0,   12,    0,   12,   12,   12,   12,
       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   13,    0,   13,    0,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   13,   13,    0,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,    0,    0,   12,   12,
        0,   12,   12,   12,   12,   12,   12,    0,   12,   12,
       12,   12,   12,   12,    0,   12,   12,   12,   12,   12,

       12,    0,   12,   12,   12,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,    0,   12,   12,
       12,   12,   12,   12,   12,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,    0,    0,   13,   13,   13,
       13,    9,    9,    9,    0,    0,    0,    0,    0,    0,
        0,   13,   13,   13,   13,   13,   13,   13,    0,    0,
        0,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,   12,    0,   12,
        0,   12,   12,   12,   12,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   13,
       13,    9,    9,    9,    9,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,    0,    0,    0,    0,
       12,    0,   12,    0,   12,   12,   12,   12,   12,   12,
        0,   12,   12,   12,   12,   12,   12,    0,   12,   12,
       12,   12,   12,   12,    0,   12,   12,   12,   12,   12,
       12,    0,   12,   12,   12,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,    0,   12,   12,

       12,   12,   12,   12,   12,   13,   13,   13,   13,    0,
        0,    0,    0,    0,   13,    9,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   12,    0,   12,    0,   12,   12,
       12,   12,   13,   13,   13,   13,    0,    0,    0,    0,
        0,   13,   13,   13,   13,    0,    0,    0,    0,    0,
        0,   12,   12,    0,   12,   12,   12,   12,   12,   12,

       12,   12,   12,   12,   12,   12,   12,   12,   12,    0,
        0,    0,    0,    0,    0,    0,    0,   12,   12,   12,
       12,   13,   13,   13,   13,    0,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   12,   12,   13,
       13,   13,   13,   13,    0,    0,    0,    0,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,    0,
        0,    0,    0,    0,   12,   13,    0,    0,    0,    0,
        0,   12,   12,   12,   12,    0,    0,    0,    0,    0,

       12,   12,   12,   12,    0,   12,   12,   12,   12,    0,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
        0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    1,    1,    1,    1,    6,    7,
        8,    9,   10,    1,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   20,   20,   21,   22,   23,   24,
       25,   26,    1,    1,   27,   27,   27,   27,   28,   27,
       29,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   31,   32,   33,   30,   30,   30,   34,   30,   30,
        1,    1,    1,    1,   35,    1,   36,   27,   37,   38,

       39,   40,   30,   41,   42,   43,   30,   44,   30,   45,
       46,   47,   30,   48,   49,   50,   51,   30,   30,   52,
       30,   30,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst int yy_meta[53] =
    {   0,
        1,    1,    1,    1,    2,    2,    1,    1,    1,    1,
        1,    3,    4,    5,    5,    5,    5,    5,    5,    5,
        5,    6,    1,    1,    1,    1,    7,    7,    8,    8,
        8,    8,    8,    8,    8,    7,    7,    7,    7,    7,
        8,    8,    8,    8,    8,    8,    8,    8,    8,    8,
        8,    8
    } ;

static yyconst short int yy_base[1763] =
    {   0,
        0,    0,   48,   50, 5605, 7376, 5588, 7376, 5564, 7376,
     7376, 7376, 7376, 7376,    0,   45,   72,   60, 5566, 7376,
     5562, 5561, 5560,   80,  119, 5556, 5553,  105, 5530, 5543,
     5539,  105, 5520, 5510, 5511, 5492, 5487,    0, 7376, 5516,
     7376,    0,  148,  158, 5495, 5494,  185,   48,  193,  203,
     7376, 7376, 7376,  230,    0, 5486, 5481, 5476, 5474, 5471,
     5460, 5463, 5470, 5470, 5441,    0, 5444, 5446, 5437, 5439,
        0,    0, 5474,  259, 5473,  269, 5460, 5459,  298,    0,
     5468, 5467, 5454,  327,  354,  173,  364,  372, 5433,    0,
     5414,    0,    0,    0, 5389, 5399, 5394,    0, 5385, 5395,

     5394,    0,    0,   89, 5420, 5417,  401, 5416,   58, 5405,
     5404, 5394,  409,  436,  218,  446, 5389, 5378,    0,  138,
      456,  466,  493,  522,  530,  128, 5387, 5376, 5363,  205,
     5357,    0, 5350, 5346, 5354,    0, 5378,  540, 5377, 5367,
      149, 5342, 5341,  550,  579,  606,  635,  643,  161, 5350,
     5339, 5338, 7376,    0,  245, 5347,  653, 5346,  171,  216,
      663,  690,  284,  700,  282,    0, 5305,    0, 5304, 5316,
     5302,  239, 5330, 5315,  710, 5314, 5303, 5302, 5301,  718,
      745,  313,  755,  311,  338,  765,  792,  387,  802,  340,
     5300, 5299,  810, 7376,  306, 5306, 5305,  839, 5304,  385,

      847,  857,  884,  913,  921,  205, 5303,    0,    0, 5259,
        0,  280,  931,  344, 5278, 5267, 5266,  941,  970,  997,
     1026, 1034,  338, 5275,  420, 1044, 1071, 1100, 1108,  374,
     5274, 5263, 5262, 1116, 1145, 1172,  481, 5259, 5268, 1182,
     5267, 5266, 5256, 1192, 5249,  422,  479, 1202, 1229,  508,
     1239,  506, 5216, 5247, 1247,  426,  428,  560,  477, 5236,
     5235, 5234, 1257, 1284,  594, 1294,  562,  592, 1304, 1331,
      621, 1341,  619,  674,  676, 1351, 1378,  733, 1388,  731,
     5233, 5230, 5229, 1398, 1425,  780, 5228,  501, 1435, 1462,
     5227, 1489, 1499,  260,  614, 5221, 5211, 1508, 5201,  678,

     5176, 5175, 1516, 5174,  778, 1524, 1534, 1561, 1590, 1598,
      562, 5173,    0,  818,    0,  825, 7376,  590, 5162, 5161,
     1608, 1637, 1664, 1693, 1701,  721, 5170,  823, 1711, 1738,
     1767, 1775,  768, 5167,  830, 1785, 1812, 1841, 1849,  860,
     5166, 5155, 5154, 1857, 1886, 1913, 5144, 1940, 1950,  447,
     5144, 1961, 5134,  701,  870, 1971, 1998,  872, 5121,  894,
      895, 2008,  897, 5130, 5123, 2018, 5108, 5107, 5106, 2028,
     5105,  951,  953, 2038, 2065,  985, 2075,  983, 5104, 2085,
     5103, 5092, 5089, 5088, 2095, 2122, 1012, 2132, 1010, 1055,
     2142, 2169, 1086, 2179, 1057, 1084, 1126, 2189, 2216, 1160,

     2226, 1128, 1158, 1213, 2236, 2263, 1272, 2273, 1215, 5087,
     5086, 5085, 2283, 2310, 1319, 5071, 1146, 1183, 2320, 2347,
     1366, 5070, 1270,  899, 5079, 5078, 2357, 5077, 5066,  903,
     2365, 2392, 5065, 2419, 2429, 1317,  958,  981, 1409, 1007,
     1059, 5072, 5071, 2438, 5070, 1079, 5069, 5059, 2446, 5056,
     1364, 2454, 2464, 2491, 2520, 2528, 1125, 5055, 1217, 5048,
     5033, 2538, 5032, 5021, 5020, 2546, 2575, 2602, 2631, 2639,
     1260, 5029, 1411, 2649, 2676, 2705, 2713, 1307, 5028, 1446,
     2723, 2750, 2779, 2787, 1354, 5027, 1448, 2797, 2824, 2853,
     2861, 1407, 5024, 5013, 5012, 2869, 2898, 2925, 5011, 2952,

     2962, 1389, 5010, 2973, 3000, 4996, 3027, 3037, 1472, 5005,
     3048, 5004, 5003, 5002, 3058, 5001, 1473, 1474, 3068, 3095,
     1549, 4990, 1475, 1419, 1452, 3105, 1454, 4997, 4996, 3115,
     4995, 4994, 4984, 3125, 4981, 1547, 1571, 3135, 3162, 1623,
     3172, 1573, 4980, 3182, 4973, 4958, 4947, 4946, 3190, 3219,
     3246, 1652, 3256, 1621, 1650, 3266, 3293, 1679, 3303, 1677,
     1722, 1724, 3313, 3340, 1753, 3350, 1751, 1796, 1798, 3360,
     3387, 1827, 3397, 1825, 1867, 1869, 3407, 3434, 1901, 3444,
     1899, 4945, 4944, 4943, 3454, 3481, 1928, 4942, 1507, 1887,
     3491, 3518, 1986, 4939, 1926, 1962, 1984, 3528, 3555, 2053,

     4938, 2019, 1477, 4947, 4946, 3565, 4945, 1576, 4931, 4930,
     3573, 4929, 4918, 1616, 3581, 3608, 4917, 3635, 3645, 2051,
     1545, 1648, 2106, 1674, 1726, 4926, 4925, 3654, 4922, 1746,
     4921, 4920, 3662, 4919, 2108, 3670, 3680, 3707, 3736, 3744,
     1794, 4909, 1820, 4906, 4905, 3754, 4898, 4873, 3762, 3789,
     2157, 1804, 4872, 3799,    0, 3828, 3836, 1866, 4881, 2155,
     3846,    0, 3875, 3883, 1915, 4880, 2200, 3893,    0, 3922,
     3930, 1950, 4879, 2202, 3940,    0, 3969, 3977, 1974, 4878,
     2247, 3987,    0, 4016, 4024, 2041, 4877, 4864, 4863, 4032,
     4061, 4088, 4862, 4115, 4125, 2076, 4861, 4136, 4163, 4860,

     4190, 4200, 2249, 4846, 4211, 4238, 4845, 4265, 4275, 2274,
        0, 2199,    0, 4854, 4853, 4286, 4852, 4851, 4850, 4296,
     4847, 2294, 2295, 4306, 4333, 2335, 4836, 2296, 2112, 2116,
     4343, 2153, 4845, 4844, 4353, 4834, 4827, 4826, 4363, 4825,
     2333, 2376, 4373, 4400, 2407, 4410, 2378, 4824, 4420, 4823,
     4822, 4811, 2251, 4430, 4808, 4807, 4457, 4467, 2321, 2300,
     2405, 2475, 2302, 2477, 2501, 2503, 2382, 2556, 2558, 2586,
     2384, 2588, 2612, 2614, 2402, 2660, 2662, 2686, 2481, 2688,
     4806, 4805, 4804, 4478, 4505, 2738, 4787, 2437, 2736, 4515,
     4542, 2765, 4779, 2763, 2808, 2809, 4552, 4579, 2839, 4761,

     2810, 2837, 2879, 4589, 4616, 2913, 4754, 2880,    0,    0,
     2940, 7376, 2506, 4763, 4762, 4626, 4761, 2561, 4760, 4759,
     4634, 4758, 4745, 2590, 4642, 4669, 4744, 4696, 4706, 2881,
     2483, 2619, 2984, 2666, 2691, 4753, 4752, 4715, 4732, 2758,
     4724, 4714, 4723, 4707, 2882, 4731, 4741,    0, 4770, 4778,
     2660, 4692, 2812, 4683, 4682, 4788, 4681, 4680, 4796, 4679,
     2899, 2911, 2734, 2834, 2938, 2886, 2986, 2935, 3010, 2970,
     3012, 2990, 3079, 2994, 3081, 3017, 4655, 4646, 4804, 4833,
     4860, 4645, 4887, 4897, 3049, 4644, 4908, 4935, 4643, 4962,
     4972, 3116, 4633, 4983, 5010, 4625, 5037, 5047, 3146, 4617,

     5058, 5085, 4602, 5112, 5122, 3147, 7376,    0, 3078,    0,
     4603, 4590, 5133, 4575, 4566, 4553, 5143, 4533, 3148, 3173,
     5153, 5180, 3205, 4522, 3203, 3045, 3152, 5190, 3154, 4516,
     4501, 5200, 4492, 4479, 4468, 5210, 4431, 3230, 3232, 3201,
     3277,    0, 3229,    0, 4421, 3281, 4411, 4393, 5220, 4387,
     4319, 3279, 3288, 3324, 3326, 3330, 3332, 3334, 4310, 4297,
     5226, 5255, 5282, 3375, 4266, 3373, 3418, 5292, 5319, 3469,
     4245, 3419, 3420, 3445, 5329, 5356, 3506, 4242, 3467, 3492,
     3504, 5366, 5393, 3543, 4215, 3529, 3541, 3582, 5403, 5430,
     3596, 4202, 3594,    0,    0, 3623, 7376, 3422, 4201, 4182,

     5440, 4177, 3616, 4150, 4126, 5448, 4102, 4071, 3689, 5456,
     5483, 4065, 5510, 5520, 3621, 3371, 3465, 3717, 3697, 3697,
     4046, 4017, 5529, 4010, 3717, 4001, 3963, 5537, 3959, 3727,
     3702,    0,    0, 3777, 7376, 3912, 5545, 3907, 3876, 3729,
     3773, 3775, 3810, 3812, 3816, 3818, 3850, 5555, 5582, 3861,
        0, 3819, 5592,    0, 3775, 5619, 5629, 3653, 3753, 5640,
        0, 3745, 5667, 5677, 3859, 3714, 5688,    0, 3684, 5715,
     5725, 3904, 3661, 5736,    0, 3636, 5763, 5773, 3905, 3612,
     5784,    0, 3585, 5811, 5821, 3906, 7376,    0, 3813,    0,
     3593, 3574, 5832, 3566, 3542, 3540, 5842, 3505, 3913, 3951,

     5852, 5879, 4002, 3493, 3952, 3857, 3910, 5889, 3953, 3468,
     3427, 5899, 3421, 3398, 3957, 7376, 3996, 3374, 3351, 5909,
     3336, 3294, 4040, 5917, 3276, 3247, 5944, 5954, 3960,    0,
     4045, 4052,    0, 4072, 4073, 4074,    0, 4098, 4099, 4100,
        0, 4101, 4137, 4148,    0, 4149, 4173, 4174,    0, 4175,
        0,    0, 4226, 7376, 4047, 3241, 3239, 5963, 3204, 4076,
     3149, 3090, 5971, 3088, 3059, 4103, 5979,    0, 3028, 6006,
     6016, 4176, 4053, 4133, 4248, 4153, 4153, 3023, 3021, 6025,
     3019, 4180, 4208, 6033, 4222, 3014, 2974, 6043, 2963, 4224,
     4250,    0, 7376, 4251,    0, 2929,    0, 2927,    0, 2902,

        0, 2900,    0, 2878,    0, 7376,    0, 4310,    0, 2854,
     2838, 6053, 2836, 2817, 2811, 6063, 2780, 4287, 4354,    0,
     4384, 4258, 4283, 6073, 4323, 2764, 4325, 4327, 4441, 4385,
     4388, 2737, 2706, 6083, 2699, 2687,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4493, 7376, 4449, 2690, 2671,
     6091, 2632, 4487, 2625, 2623, 6099, 2621, 2606,    0, 4395,
     4443, 4526, 4447, 4475, 2597, 6107, 2595, 2569,    0, 7376,
     7376, 7376, 7376, 7376, 7376, 7376,    0, 4529,    0, 2567,
     2560, 6117, 2539, 2521,    0, 4528, 4561, 2514, 2512, 6127,
     2505,    0,    0, 4567, 7376, 4598, 2486, 2455, 6135, 2430,

     7376,    0, 4599,    0, 2404, 7376,    0, 4602,    0, 2387,
        0,    0, 4657, 7376,    0,    0, 4684, 7376, 7376, 7376,
     7376, 6154, 2373, 6162, 6166, 6169, 2365, 6174, 6177, 6178,
     6181, 2339, 2304, 6186, 6189, 6191, 6194, 6197, 2265, 6202,
     6205, 6206, 6209, 6212, 2263, 6217, 6220, 6223, 2257, 6228,
     6229, 6232, 6237, 6240, 6243, 2234, 6248, 6251, 6254, 6255,
     6258, 6261, 6264, 6267, 6272, 6275, 6278, 6281, 6284, 6289,
     6290, 6293, 6298, 6303, 6306, 6309, 6312, 2218, 6315, 2216,
     6320, 6323, 2187, 6326, 6329, 6330, 2140, 2059, 6334, 6337,
     6340, 6343, 6346, 6351, 6354, 6357, 6360, 6365, 6368, 6371,

     6374, 6377, 6380, 6383, 6388, 6391, 6392, 6395, 6400, 6405,
     6410, 6413, 6416, 6419, 6424, 6427, 1992, 6432, 6435, 1958,
     6436, 6441, 6444, 1934, 6447, 6450, 1932, 6453, 6456, 1905,
     6459, 6462, 6463, 6466, 6469, 6472, 6475, 6478, 6483, 6486,
     6489, 6492, 6495, 6498, 6503, 6506, 6509, 6512, 6515, 6518,
     6521, 6526, 6529, 6530, 6535, 6540, 6545, 6550, 6553, 6556,
     6559, 6564, 6567, 6572, 6575, 1887, 6580, 6583, 1885, 6586,
     6589, 1883, 6590, 6595, 6598, 1878, 6601, 6604, 1849, 6607,
     6610, 1814, 6613, 6616, 6617, 6622, 6625, 6628, 6631, 6634,
     6637, 6640, 6643, 6646, 6649, 6652, 6655, 1775, 1740, 1738,

     6660, 6663, 6666, 6669, 6672, 6675, 6680, 6683, 6686, 6689,
     6692, 6695, 6698, 6703, 6706, 1701, 6707, 6710, 6715, 6720,
     6725, 6730, 6735, 6740, 6745, 6750, 6755, 6760, 6765, 6768,
     6771, 6774, 6779, 6782, 6787, 6790, 6795, 6798, 1683, 1598,
     1591, 6803, 6806, 1589, 6809, 6812, 1582, 6813, 6818, 6821,
     1532, 6824, 6827, 1507, 6830, 6833, 6834, 1483, 6839, 6842,
     6845, 6848, 6851, 6856, 6861, 6866, 6871, 6876, 6881, 6886,
     6889, 6892, 6895, 6898, 6901, 6904, 1464, 1443, 1349, 6909,
     6912, 6915, 6918, 6921, 6924, 6929, 6932, 6935, 6938, 6941,
     6944, 6947, 6952, 1325, 1302, 1278, 1247, 6957, 6960, 6963,

     6968, 6973, 6978, 6983, 6988, 6993, 6996, 6999, 7004, 7007,
     7012, 7015, 7020, 7023, 7028, 7031, 1231, 1229, 1164, 7036,
     7039, 1146, 7042, 7045, 1144, 7046, 7051, 7054, 1142, 7057,
     7060, 1137, 7063, 7066, 7069, 1108, 1073, 7074, 7077, 7080,
     7083, 7086, 7089, 7092, 7095, 7098, 7101, 7104, 7107, 7110,
     7113, 7116, 7119, 1071, 1034, 1016, 7124, 7127, 7130, 7133,
     7136, 7139, 7144, 7147, 7150, 7153, 7156,  971, 7161, 7164,
      969, 7165, 7168, 7171, 7176, 7179, 7184, 7187, 7192, 7195,
     7200, 7203, 7208, 7211,  967,  962,  921, 7216, 7219,  878,
     7222, 7225,  855, 7226, 7229, 7234, 7237,  839, 7240, 7243,

     7246, 7249, 7252, 7255, 7258, 7261, 7264, 7267, 7270, 7273,
     7276, 7279,  810,  763,  692, 7284, 7287, 7290, 7293, 7296,
     7299, 7304, 7307, 7310,  690, 7313, 7314, 7317, 7320, 7323,
     7326, 7329, 7332,  661,  643, 7337,  580, 7340, 7341, 7346,
     7349, 7352, 7353,  574,  571,  548, 7358, 7361, 7362,  530,
     7367,  438,  409, 7370,  391,  372,  356,  251,  140,  101,
       66,   53
    } ;

static yyconst short int yy_def[1763] =
    {   0,
     1321,    1, 1322, 1322, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1323, 1321,   16,   17, 1321, 1321,
     1321, 1321, 1321, 1321,   24,   25,   25,   24,   24,   24,
       25,   25,   25,   25,   25,   25,   25, 1324, 1321, 1321,
     1321, 1323, 1321, 1321, 1325, 1326,   44,   47,   47, 1321,
     1321, 1321, 1321,   24,   25,   25,   25,   54,   54,   25,
       25,   54,   25,   25,   25,   25,   25,   25,   25,   25,
     1324, 1327, 1328, 1321, 1329, 1321, 1330, 1331, 1321,   76,
       76, 1321, 1332, 1321,   84,   85,   85,   54,   25,   25,
       88,   88,   25,   25,   25,   25,   25,   25,   25,   25,

       25,   25, 1327, 1333, 1329, 1334, 1321, 1321, 1335, 1321,
     1336, 1337, 1321,  113,  114,  114, 1321, 1338, 1339, 1339,
     1321, 1321, 1321,  122,  122,  125,  124,   25,   25,   25,
       25,   25,   25,   25,   25,   25, 1340, 1321, 1341, 1321,
     1335, 1342, 1343, 1321, 1321, 1321,  145,  145,  148,  147,
     1344, 1321, 1321, 1345, 1321, 1346, 1321, 1347, 1348, 1348,
     1321,  161,  162,  162, 1348,   25,   25,   25,   25,   25,
       25, 1349, 1341, 1350, 1321, 1321, 1321, 1351, 1352, 1321,
      180,  181,  181, 1353, 1353, 1321,  186,  187,  187, 1353,
     1354, 1355, 1321, 1321, 1356, 1347, 1357, 1321, 1321, 1321,

     1321, 1321, 1321,  202,  202,  205,  204,   25,   25,   25,
       25, 1358, 1321, 1359, 1321, 1360, 1361, 1321, 1321, 1321,
      219,  219,  222,  221, 1321, 1321, 1321,  226,  226,  229,
      228, 1362, 1363, 1321, 1321,  235,  236, 1364, 1365, 1321,
     1366, 1321, 1367, 1321, 1368, 1369, 1369, 1321,  248,  249,
      249, 1369,   25, 1321, 1321, 1359, 1370, 1370, 1321, 1321,
     1371, 1372, 1321,  263,  264,  264, 1373, 1373, 1321,  269,
      270,  270, 1373, 1374, 1374, 1321,  276,  277,  277, 1374,
     1321, 1375, 1376, 1321,  284,  285, 1377, 1378, 1321, 1321,
     1379,  289, 1379, 1379, 1380, 1381, 1382, 1321, 1321, 1383,

     1384, 1385, 1321, 1321, 1321, 1321, 1321, 1321,  307,  307,
      310,  309, 1386, 1387, 1388, 1321, 1321, 1321, 1389, 1390,
     1321, 1321, 1321,  322,  322,  325,  324, 1321, 1321, 1321,
      329,  329,  332,  331, 1321, 1321, 1321,  336,  336,  339,
      338, 1391, 1392, 1321, 1321, 1321, 1393,  345, 1393, 1393,
     1394, 1321, 1395, 1396, 1396, 1321,  356,  357, 1397, 1396,
     1398, 1321, 1399, 1321, 1400, 1321, 1401, 1321, 1402, 1321,
     1403, 1404, 1404, 1321,  374,  375,  375, 1404, 1405, 1321,
     1406, 1321, 1407, 1408, 1321,  385,  386,  386, 1409, 1409,
     1321,  391,  392,  392, 1409, 1410, 1410, 1321,  398,  399,

      399, 1410, 1411, 1411, 1321,  405,  406,  406, 1411, 1321,
     1412, 1413, 1321,  413,  414, 1414, 1415, 1415, 1321,  419,
      420, 1416, 1415, 1417, 1418, 1419, 1321, 1321, 1321, 1420,
     1321, 1321, 1421,  431, 1421, 1421, 1422, 1423, 1423, 1321,
     1424, 1425, 1426, 1321, 1321, 1427, 1428, 1429, 1321, 1321,
     1321, 1321, 1321, 1321,  453,  453,  456,  455, 1430, 1431,
     1432, 1321, 1321, 1433, 1434, 1321, 1321, 1321,  467,  467,
      470,  469, 1321, 1321, 1321,  474,  474,  477,  476, 1321,
     1321, 1321,  481,  481,  484,  483, 1321, 1321, 1321,  488,
      488,  491,  490, 1435, 1436, 1321, 1321, 1321, 1437,  497,

     1437, 1437, 1321, 1321, 1321, 1438,  504, 1438, 1438, 1439,
     1321, 1440, 1321, 1441, 1321, 1442, 1443, 1443, 1321,  519,
      520, 1444, 1443, 1321, 1445, 1321, 1446, 1321, 1447, 1321,
     1448, 1321, 1449, 1321, 1450, 1451, 1451, 1321,  538,  539,
      539, 1451, 1452, 1321, 1453, 1321, 1321, 1454, 1321, 1321,
      550,  551,  551, 1455, 1455, 1321,  556,  557,  557, 1455,
     1456, 1456, 1321,  563,  564,  564, 1456, 1457, 1457, 1321,
      570,  571,  571, 1457, 1458, 1458, 1321,  577,  578,  578,
     1458, 1321, 1459, 1460, 1321,  585,  586, 1461, 1462, 1462,
     1321,  591,  592, 1463, 1462, 1464, 1464, 1321,  598,  599,

     1465, 1464, 1466, 1467, 1468, 1321, 1321, 1469, 1470, 1471,
     1321, 1321, 1321, 1472, 1321, 1321, 1473,  615, 1473, 1473,
     1474, 1475, 1475, 1321, 1476, 1477, 1478, 1321, 1321, 1479,
     1480, 1481, 1321, 1321, 1321, 1321, 1321, 1321,  637,  637,
      640,  639, 1482, 1483, 1484, 1321, 1321, 1485, 1321,  649,
      650, 1486, 1487, 1321, 1488,  654,  654,  657,  656, 1321,
     1321, 1489,  661,  661,  664,  663, 1321, 1321, 1490,  668,
      668,  671,  670, 1321, 1321, 1491,  675,  675,  678,  677,
     1321, 1321, 1492,  682,  682,  685,  684, 1493, 1494, 1321,
     1321, 1321, 1495,  691, 1495, 1495, 1321, 1321, 1321, 1496,

      698, 1496, 1496, 1321, 1321, 1321, 1497,  705, 1497, 1497,
     1498, 1499, 1500, 1321, 1501, 1321, 1502, 1321, 1503, 1321,
     1504, 1505, 1505, 1321,  724,  725, 1506, 1505, 1321, 1507,
     1321, 1508, 1321, 1509, 1321, 1510, 1321, 1511, 1321, 1512,
     1513, 1513, 1321,  743,  744,  744, 1513, 1514, 1321, 1515,
     1321, 1321, 1516, 1321, 1517, 1518,  754, 1518, 1518, 1519,
     1520, 1520, 1521, 1520, 1522, 1522, 1523, 1522, 1524, 1524,
     1525, 1524, 1526, 1526, 1527, 1526, 1528, 1528, 1529, 1528,
     1321, 1530, 1531, 1321,  784,  785, 1532, 1533, 1533, 1321,
      790,  791, 1534, 1533, 1535, 1535, 1321,  797,  798, 1536,

     1535, 1537, 1537, 1321,  804,  805, 1538, 1537, 1539, 1540,
     1321, 1321, 1541, 1542, 1543, 1321, 1321, 1544, 1545, 1546,
     1321, 1321, 1321, 1547, 1321, 1321, 1548,  825, 1548, 1548,
     1549, 1550, 1550, 1321, 1551, 1552, 1553, 1321, 1321, 1554,
     1555, 1556, 1321, 1321, 1321, 1321, 1321, 1557,  847,  847,
      850,  849, 1558, 1559, 1560, 1321, 1321, 1561, 1321, 1562,
     1563, 1563, 1564, 1321, 1563, 1565, 1321, 1566, 1321, 1567,
     1321, 1568, 1321, 1569, 1321, 1570, 1571, 1572, 1321, 1321,
     1321, 1573,  880, 1573, 1573, 1321, 1321, 1321, 1574,  887,
     1574, 1574, 1321, 1321, 1321, 1575,  894, 1575, 1575, 1321,

     1321, 1321, 1576,  901, 1576, 1576, 1321, 1577, 1578, 1579,
     1321, 1580, 1321, 1581, 1321, 1582, 1321, 1583, 1584, 1584,
     1321,  921,  922, 1585, 1584, 1321, 1586, 1321, 1587, 1321,
     1588, 1321, 1589, 1321, 1590, 1321, 1591, 1592, 1592, 1593,
     1592, 1594, 1595, 1596, 1321, 1597, 1598, 1599, 1321, 1321,
     1321, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1321, 1607,
     1321, 1321,  962,  963, 1608, 1609, 1609, 1321,  968,  969,
     1610, 1609, 1611, 1611, 1321,  975,  976, 1612, 1611, 1613,
     1613, 1321,  982,  983, 1614, 1613, 1615, 1615, 1321,  989,
      990, 1616, 1615, 1617, 1618, 1321, 1321, 1619, 1620, 1621,

     1321, 1321, 1622, 1623, 1624, 1321, 1321, 1321, 1625, 1321,
     1321, 1626, 1010, 1626, 1626, 1627, 1628, 1628, 1321, 1629,
     1630, 1631, 1321, 1321, 1632, 1633, 1634, 1321, 1321, 1321,
     1635, 1636, 1637, 1321, 1321, 1638, 1321, 1639, 1321, 1640,
     1321, 1321, 1321, 1321, 1321, 1321, 1641, 1321, 1048, 1049,
     1642, 1643, 1321, 1644, 1645, 1053, 1645, 1645, 1321, 1321,
     1646, 1647, 1060, 1647, 1647, 1321, 1321, 1648, 1649, 1067,
     1649, 1649, 1321, 1321, 1650, 1651, 1074, 1651, 1651, 1321,
     1321, 1652, 1653, 1081, 1653, 1653, 1321, 1654, 1655, 1656,
     1321, 1657, 1321, 1658, 1321, 1659, 1321, 1660, 1661, 1661,

     1321, 1101, 1102, 1662, 1661, 1321, 1663, 1321, 1664, 1321,
     1665, 1321, 1666, 1321, 1667, 1321, 1668, 1669, 1670, 1321,
     1321, 1321, 1671, 1321, 1672, 1673, 1124, 1673, 1673, 1674,
     1675, 1675, 1676, 1675, 1677, 1677, 1678, 1677, 1679, 1679,
     1680, 1679, 1681, 1681, 1682, 1681, 1683, 1683, 1684, 1683,
     1685, 1686, 1321, 1321, 1687, 1688, 1689, 1321, 1321, 1690,
     1691, 1692, 1321, 1321, 1321, 1693, 1321, 1694, 1695, 1167,
     1695, 1695, 1696, 1697, 1697, 1321, 1698, 1699, 1700, 1321,
     1321, 1321, 1701, 1321, 1702, 1321, 1703, 1321, 1704, 1705,
     1705, 1706, 1321, 1705, 1707, 1321, 1708, 1321, 1709, 1321,

     1710, 1321, 1711, 1321, 1712, 1321, 1713, 1714, 1715, 1321,
     1716, 1321, 1717, 1321, 1718, 1321, 1719, 1720, 1720, 1721,
     1720, 1321, 1722, 1321, 1723, 1321, 1702, 1724, 1724, 1321,
     1725, 1704, 1726, 1321, 1321, 1321, 1727, 1728, 1729, 1730,
     1731, 1732, 1733, 1715, 1734, 1321, 1321, 1735, 1717, 1736,
     1321, 1321, 1737, 1719, 1738, 1321, 1321, 1321, 1739, 1723,
     1740, 1740, 1321, 1321, 1741, 1321, 1742, 1321, 1743, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1744, 1745, 1746, 1321,
     1747, 1321, 1748, 1321, 1749, 1321, 1750, 1742, 1751, 1321,
     1321, 1746, 1752, 1321, 1321, 1753, 1748, 1754, 1321, 1321,

     1321, 1755, 1756, 1757, 1321, 1321, 1758, 1759, 1760, 1321,
     1757, 1761, 1321, 1321, 1760, 1762, 1321, 1321, 1321, 1321,
        0, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321
    } ;

static yyconst short int yy_nxt[7429] =
    {   0,
        6,    7,    8,    9,   10,   10,   11,   12,   13,   14,
       15,    6,    6,   16,   16,   17,   18,   18,   18,   18,
       18,   19,   20,   21,   22,   23,   24,   24,   25,   25,
       26,   27,   25,   25,    6,   28,   29,   24,   24,   30,
       31,   25,   25,   25,   32,   33,   34,   35,   25,   36,
       25,   37,   39,   39,   39,   39,   43, 1320,   44,   44,
       44,   44,   44,   44,   44,   44,   45,   81,   81,  117,
     1319,   46,   46,   49,   49,   49,   49,   49,   49,   45,
       46,   46,   46,   46,   46,   47,   47,   47,   47,   47,
       48,   49,   49,   54,   54,   54,   54,   54,   54,   54,

       54,   45,  137,  137,  138, 1318,   54,   54,   55,   55,
       55,   55,   55,   55,   55,   54,   54,   54,   54,   54,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
       55,   55,   55,   55,   55,   55,   55,   55,   55,   55,
     1321,   58,   59,   64, 1316,   55,   55,  160,  160,   60,
       65,  154,  154,  155,   55,   55,   55,   55,   55,   72,
      117,   73,   73,   74,   75,   75,   75,   75,   75,   43,
     1321,   76,   76,   76,   76,   76,   76,   76,   76,   45,
      185,  185,  121,   83,   77,   77,  127,  127,  127,  127,
      127,  127,  123,   77,   77,   77,   77,   77,   80,   80,

       80,   80,   80,   80,   80,   80,   81,   81,   81,   81,
       81,   81,   81,   81,   82,   83,   84,   84,   85,   86,
       86,   86,   86,   86,  247,  247,   45,   82,   83,   87,
       87,  150,  150,  150,  150,  150,  150,  123,   87,   87,
       87,   87,   87,   88,   88,   88,   88,   88,   88,   88,
       88,  167,  212,  212,  213, 1315,   88,   88,  194,  194,
      194,  194,  194,  194,  194,   88,   88,   88,   88,   88,
      104,  288,  106,  106,  106,  106,  106,  107,  108,  108,
       43,  290,  109,  109,  109,  109,  109,  109,  109,  109,
       45,  254,  255,  121,   83,  110,  110,  207,  207,  207,

      207,  207,  207,  123,  110,  110,  110,  110,  110,   82,
       83,  113,  113,  114,  115,  115,  115,  115,  115,  239,
      239,  240,  121,   83,  116,  116,  224,  224,  224,  224,
      224,  224,  146,  116,  116,  116,  116,  116,  121,   83,
      122,  122,  122,  122,  122,  122,  122,  122,  123,   82,
       83,  121,   83,  124,  124,  254,  255,  268,  268,  146,
     1314,  146,  124,  124,  124,  124,  124,  125,  125,  125,
      125,  125,  126,  127,  127,   82, 1312,  124,  124,  124,
      124,  124,  124,  124,  124,  128,  128,  128,  128,  128,
      128,  128,  128,  275,  275, 1311,   82,   83,  128,  128,

      231,  231,  231,  231,  231,  231,  123,  128,  128,  128,
      128,  128,  104, 1309,  140,  140,  140,  140,  140,  140,
      121,   83,  145,  145,  145,  145,  145,  145,  145,  145,
      146,   82,   83,  201,   83,  147,  147,  254,  255,  254,
      255,  146, 1306,  203,  147,  147,  147,  147,  147,  148,
      148,  148,  148,  148,  149,  150,  150,   82,  288,  147,
      147,  147,  147,  147,  147,  147,  147,  118,  346,  156,
      156,  157,  158,  158,  158,  158,  158,  121,   83,  159,
      159,  159,  159,  159,  159,  159,  159,  123,  254,  255,
       82,   83,  160,  160,  294,  294,  294,  294,  294,  294,

      203,  160,  160,  160,  160,  160,  161,  161,  162,  163,
      163,  163,  163,  163,  351,  351,  352,  201,   83,  164,
      164,  312,  312,  312,  312,  312,  312,  203,  164,  164,
      164,  164,  164,   82, 1304,  160,  160,  160,  160,  160,
      160,  160,  160,  165,  165,  165,  165,  165,  165,  165,
      165,  172, 1295,  174,  174,  174,  174,  174,  175,  176,
      176,   82,   83,  180,  180,  181,  182,  182,  182,  182,
      182,  254,  255,  121,   83, 1293,  183,  183, 1292, 1321,
     1321,  373,  373,  220, 1283,  183,  183,  183,  183,  183,
      121,   83,  184,  184,  184,  184,  184,  184,  184,  184,

      146,  254,  255,   82,   83,  185,  185,  327,  327,  327,
      327,  327,  327,  220,  185,  185,  185,  185,  185,  186,
      186,  187,  188,  188,  188,  188,  188,  361,  361,  362,
      121,   83,  189,  189,  334,  334,  334,  334,  334,  334,
      220,  189,  189,  189,  189,  189,   82, 1279,  185,  185,
      185,  185,  185,  185,  185,  185,  190,  190,  190,  190,
      190,  190,  190,  190,  195, 1276,  197,  197,  197,  197,
      197,  198,  199,  199,  201,   83,  202,  202,  202,  202,
      202,  202,  202,  202,  203,  201,   83,   82,   83,  204,
      204,  365,  365,  366, 1267,  227, 1247,  227,  204,  204,

      204,  204,  204,  205,  205,  205,  205,  205,  206,  207,
      207,   82,  288,  204,  204,  204,  204,  204,  204,  204,
      204,  172,  290,  215,  215,  215,  215,  215,  215,  121,
       83,  219,  219,  219,  219,  219,  219,  219,  219,  220,
      390,  390,  201,   83,  221,  221,  341,  341,  341,  341,
      341,  341,  227,  221,  221,  221,  221,  221,  222,  222,
      222,  222,  222,  223,  224,  224,   82, 1245,  221,  221,
      221,  221,  221,  221,  221,  221,  201,   83,  226,  226,
      226,  226,  226,  226,  226,  226,  227,  397,  397,   82,
       83,  228,  228,  350,  350,  350,  350,  350,  350,  203,

      228,  228,  228,  228,  228,  229,  229,  229,  229,  229,
      230,  231,  231,   82, 1244,  228,  228,  228,  228,  228,
      228,  228,  228,  235,  235,  236,  237,  237,  237,  237,
      237,  379,  379,  380,   82,   83,  238,  238,  317,  317,
      317,   82,   83, 1225,  220,  238,  238,  238,  238,  238,
      195,  227,  242,  242,  242,  242,  242,  242,  118, 1217,
      243,  243,  244,  245,  245,  245,  245,  245,  201,   83,
      246,  246,  246,  246,  246,  246,  246,  246,  203,  404,
      404, 1321, 1213,  247,  247,  436,  436,  436,  436,  436,
      436,  290,  247,  247,  247,  247,  247,  248,  248,  249,

      250,  250,  250,  250,  250,  288,   82,   83,   82,   83,
      251,  251,  510,  510,  511,  290,  514,  514,  515,  251,
      251,  251,  251,  251,   82, 1209,  247,  247,  247,  247,
      247,  247,  247,  247,  252,  252,  252,  252,  252,  252,
      252,  252,  254,  255,  257,  257,  257,  257,  257,  258,
      259,  259,   82,   83,  263,  263,  264,  265,  265,  265,
      265,  265,  306,   83,   82,   83, 1206,  266,  266,   82,
       83, 1154,  308, 1189,  308, 1185,  266,  266,  266,  266,
      266,  121,   83,  267,  267,  267,  267,  267,  267,  267,
      267,  220,   82,   83,  306,   83,  268,  268,  458,  458,

      458,  458,  458,  458,  308,  268,  268,  268,  268,  268,
      269,  269,  270,  271,  271,  271,  271,  271,   82,   83,
     1154,  121,   83,  272,  272,  472,  472,  472,  472,  472,
      472,  323,  272,  272,  272,  272,  272,   82, 1152,  268,
      268,  268,  268,  268,  268,  268,  268,  273,  273,  273,
      273,  273,  273,  273,  273,  201,   83,  274,  274,  274,
      274,  274,  274,  274,  274,  227,   82,   83,  121,   83,
      275,  275,  525,  525,  526, 1151,  323, 1116,  323,  275,
      275,  275,  275,  275,  276,  276,  277,  278,  278,  278,
      278,  278,  529,  529,  530,  201,   83,  279,  279,  479,

      479,  479,  479,  479,  479,  330,  279,  279,  279,  279,
      279,   82, 1035,  275,  275,  275,  275,  275,  275,  275,
      275,  280,  280,  280,  280,  280,  280,  280,  280,  284,
      284,  285,  286,  286,  286,  286,  286,   82,   83,  201,
       83, 1113,  287,  287,  537,  537, 1109,  330, 1098,  330,
     1094,  287,  287,  287,  287,  287,  288,  288,  289,  289,
      289,  289,  289,  289,  289,  289,  290,  346, 1090,  306,
       83,  291,  291,  486,  486,  486,  486,  486,  486,  337,
      291,  291,  291,  291,  291,  292,  292,  292,  292,  292,
      293,  294,  294,  295, 1321,  297,  297,  297,  297,  297,

      298,  299,  299,  300,  346,  302,  302,  302,  302,  302,
      303,  304,  304,  306,   83,  307,  307,  307,  307,  307,
      307,  307,  307,  308,   82,   83,  306,   83,  309,  309,
      543,  543,  544, 1087,  337,  997,  337,  309,  309,  309,
      309,  309,  310,  310,  310,  310,  310,  311,  312,  312,
       82, 1038,  309,  309,  309,  309,  309,  309,  309,  309,
      315,  315,  315,  316,  317,  317,  317,  317,  121,   83,
      322,  322,  322,  322,  322,  322,  322,  322,  323,  555,
      555,  288, 1035,  324,  324,  493,  493,  493,  493,  493,
      493,  346,  324,  324,  324,  324,  324,  325,  325,  325,

      325,  325,  326,  327,  327,   82, 1033,  324,  324,  324,
      324,  324,  324,  324,  324,  201,   83,  329,  329,  329,
      329,  329,  329,  329,  329,  330,  562,  562,  430, 1032,
      331,  331,  502,  502,  502,  502,  502,  502,  432,  331,
      331,  331,  331,  331,  332,  332,  332,  332,  332,  333,
      334,  334,   82,  997,  331,  331,  331,  331,  331,  331,
      331,  331,  306,   83,  336,  336,  336,  336,  336,  336,
      336,  336,  337,  569,  569,   82,   83,  338,  338,  509,
      509,  509,  509,  509,  509,  308,  338,  338,  338,  338,
      338,  339,  339,  339,  339,  339,  340,  341,  341,   82,

      288,  338,  338,  338,  338,  338,  338,  338,  338,  288,
      498,  345,  345,  345,  345,  345,  345,  345,  345,  346,
       82,   83,   82,   83,  347,  347,  576,  576, 1321, 1321,
       82,   83,  323,  347,  347,  347,  347,  347,  348,  348,
      348,  348,  348,  349,  350,  350,  288,  995,  354,  354,
      354,  354,  354,  354,  354,  354,  290,   82,   83,   82,
       83,  355,  355,   82,   83,   82,   83,  330,  994,  337,
      355,  355,  355,  355,  355,  356,  356,  357,  358,  358,
      358,  358,  358,  430,  430, 1321,  430,  944,  359,  359,
      711,  711,  712,  505,  432,  432,  432,  359,  359,  359,

      359,  359,  360,  360,  360,  360,  360,  360,  360,  360,
      288,  933,  360,  360,  360,  360,  360,  360,  288,  295,
      290,  364,  364,  364,  364,  364,  364,  300,  498,  368,
      368,  368,  368,  368,  368,  118,  929,  369,  369,  370,
      371,  371,  371,  371,  371,  306,   83,  372,  372,  372,
      372,  372,  372,  372,  372,  308,   82,   83,  452,   83,
      373,  373,  620,  620,  620,  620,  620,  620,  454,  373,
      373,  373,  373,  373,  374,  374,  375,  376,  376,  376,
      376,  376,   82,   83,  452,   83,  918,  377,  377,  715,
      715,  716,  454,  914,  454,  910,  377,  377,  377,  377,

      377,   82,  907,  373,  373,  373,  373,  373,  373,  373,
      373,  378,  378,  378,  378,  378,  378,  378,  378,   82,
       83,  385,  385,  386,  387,  387,  387,  387,  387,  719,
      719,  720,  121,   83,  388,  388,  642,  642,  642,  642,
      642,  642,  468,  388,  388,  388,  388,  388,  121,   83,
      389,  389,  389,  389,  389,  389,  389,  389,  323,   82,
       83,   82,   83,  390,  390,  659,  659,  659,  659,  659,
      659,  468,  390,  390,  390,  390,  390,  391,  391,  392,
      393,  393,  393,  393,  393,   82,   83,  812,  121,   83,
      394,  394,  666,  666,  666,  666,  666,  666,  468,  394,

      394,  394,  394,  394,   82,  860,  390,  390,  390,  390,
      390,  390,  390,  390,  395,  395,  395,  395,  395,  395,
      395,  395,  201,   83,  396,  396,  396,  396,  396,  396,
      396,  396,  330,  201,   83,   82,   83,  397,  397,  730,
      730,  731,  812,  475,  810,  475,  397,  397,  397,  397,
      397,  398,  398,  399,  400,  400,  400,  400,  400,  734,
      734,  735,  201,   83,  401,  401,  673,  673,  673,  673,
      673,  673,  475,  401,  401,  401,  401,  401,   82,  809,
      397,  397,  397,  397,  397,  397,  397,  397,  402,  402,
      402,  402,  402,  402,  402,  402,  306,   83,  403,  403,

      403,  403,  403,  403,  403,  403,  337,  306,   83,   82,
       83,  404,  404,  742,  742,   82,   83,  482,  750,  482,
      404,  404,  404,  404,  404,  405,  405,  406,  407,  407,
      407,  407,  407,  748,  748,  749,  306,   83,  408,  408,
      680,  680,  680,  680,  680,  680,  482,  408,  408,  408,
      408,  408,   82,  736,  404,  404,  404,  404,  404,  404,
      404,  404,  409,  409,  409,  409,  409,  409,  409,  409,
      413,  413,  414,  415,  415,  415,  415,  415,  452,   83,
       82,   83,  732,  416,  416,  762,  762,  721,  489,  717,
      489,  713,  416,  416,  416,  416,  416,  288, 1321,  417,

      417,  417,  417,  417,  417,  417,  417,  346,  498,  545,
      452,   83,  418,  418,  687,  687,  687,  687,  687,  687,
      489,  418,  418,  418,  418,  418,  419,  419,  420,  421,
      421,  421,  421,  421,  766,  766,  531,  288,  527,  422,
      422,  696,  696,  696,  696,  696,  696,  498,  422,  422,
      422,  422,  422,  423,  423,  423,  423,  423,  423,  423,
      423,  288,  516,  423,  423,  423,  423,  423,  423,  770,
      770,  346,  424,  430,  426,  426,  426,  426,  426,  427,
      428,  428,  430,  505,  431,  431,  431,  431,  431,  431,
      431,  431,  432,  774,  774, 1321,  512,  433,  433,  703,

      703,  703,  703,  703,  703,  505,  433,  433,  433,  433,
      433,  434,  434,  434,  434,  434,  435,  436,  436,   82,
       83,  438,  438,  438,  438,  438,  439,  440,  440,  441,
      430,  443,  443,  443,  443,  443,  444,  445,  445,  446,
      505,  448,  448,  448,  448,  448,  449,  450,  450,  452,
       83,  453,  453,  453,  453,  453,  453,  453,  453,  454,
      778,  778,  614,  317,  455,  455,  710,  710,  710,  710,
      710,  710,  616,  455,  455,  455,  455,  455,  456,  456,
      456,  456,  456,  457,  458,  458,   82,  288,  455,  455,
      455,  455,  455,  455,  455,  455,  459,  692,  461,  461,

      461,  461,  461,  462,  463,  463,  121,   83,  467,  467,
      467,  467,  467,  467,  467,  467,  468,   82,   83,   82,
       83,  469,  469,   82,   83, 1321, 1321,   82,   83,  454,
      469,  469,  469,  469,  469,  470,  470,  470,  470,  470,
      471,  472,  472,   82,  381,  469,  469,  469,  469,  469,
      469,  469,  469,  201,   83,  474,  474,  474,  474,  474,
      474,  474,  474,  475,   82,   83,   82,   83,  476,  476,
      759,  759,  759,  759,  759,  759,  468,  476,  476,  476,
      476,  476,  477,  477,  477,  477,  477,  478,  479,  479,
       82,  367,  476,  476,  476,  476,  476,  476,  476,  476,

      306,   83,  481,  481,  481,  481,  481,  481,  481,  481,
      482,   82,   83,   82,   83,  483,  483,  811,  812,  812,
      363,  475,  353,  482,  483,  483,  483,  483,  483,  484,
      484,  484,  484,  484,  485,  486,  486,   82,  241,  483,
      483,  483,  483,  483,  483,  483,  483,  452,   83,  488,
      488,  488,  488,  488,  488,  488,  488,  489,   82,   83,
      430,  214,  490,  490,  858,  858,  859,  194,  489,  153,
      699,  490,  490,  490,  490,  490,  491,  491,  491,  491,
      491,  492,  493,  493,   82,  614,  490,  490,  490,  490,
      490,  490,  490,  490,  288,  706,  497,  497,  497,  497,

      497,  497,  497,  497,  498,  614, 1321,  614,  139,  499,
      499,   82,   83,   82,   83,  616,  616,  616,  499,  499,
      499,  499,  499,  500,  500,  500,  500,  500,  501,  502,
      502,  430,  753,  504,  504,  504,  504,  504,  504,  504,
      504,  505,  755,  119,  636,   83,  506,  506,  830,  830,
      830,  830,  830,  830,  638,  506,  506,  506,  506,  506,
      507,  507,  507,  507,  507,  508,  509,  509,  424,  103,
      513,  513,  513,  513,  513,  513,  430,   42,  517,  517,
      517,  517,  517,  517,  517,  517,  432,   82,   83,  636,
       83,  518,  518,   82,   83,   82,   83,  638, 1296,  638,

      518,  518,  518,  518,  518,  519,  519,  520,  521,  521,
      521,  521,  521,   82,   83, 1287,  121,   83,  522,  522,
      852,  852,  852,  852,  852,  852,  655,  522,  522,  522,
      522,  522,  523,  523,  523,  523,  523,  523,  523,  523,
      430, 1296,  523,  523,  523,  523,  523,  523,  288,  441,
      432,  528,  528,  528,  528,  528,  528,  446,  692,  532,
      532,  532,  532,  532,  532,  118, 1296,  533,  533,  534,
      535,  535,  535,  535,  535,  452,   83,  536,  536,  536,
      536,  536,  536,  536,  536,  454,   82,   83,  121,   83,
      537,  537,   82,   83,   82,   83,  655, 1296,  655,  537,

      537,  537,  537,  537,  538,  538,  539,  540,  540,  540,
      540,  540,  201,   83,   82,   83, 1287,  541,  541,  908,
      908,  909,  662, 1287,  662, 1287,  541,  541,  541,  541,
      541,   82, 1253,  537,  537,  537,  537,  537,  537,  537,
      537,  542,  542,  542,  542,  542,  542,  542,  542,  459,
     1296,  546,  546,  546,  546,  546,  546,   82,   83,  550,
      550,  551,  552,  552,  552,  552,  552,  201,   83,  306,
       83, 1296,  553,  553,  912,  912,  913,  662, 1248,  669,
     1231,  553,  553,  553,  553,  553,  121,   83,  554,  554,
      554,  554,  554,  554,  554,  554,  468,   82,   83,  306,

       83,  555,  555,  916,  916,  917, 1287,  669, 1287,  669,
      555,  555,  555,  555,  555,  556,  556,  557,  558,  558,
      558,  558,  558,  452,   83,   82,   83, 1168,  559,  559,
       82,   83, 1253,  676, 1253,  676, 1253,  559,  559,  559,
      559,  559,   82, 1248,  555,  555,  555,  555,  555,  555,
      555,  555,  560,  560,  560,  560,  560,  560,  560,  560,
      201,   83,  561,  561,  561,  561,  561,  561,  561,  561,
      475,  452,   83,  636,   83,  562,  562,   82,   83,  939,
      939,  676, 1248,  683,  562,  562,  562,  562,  562,  563,
      563,  564,  565,  565,  565,  565,  565,   82,   83,  636,

       83, 1248,  566,  566,  927,  927,  928,  683, 1125,  683,
     1231,  566,  566,  566,  566,  566,   82, 1231,  562,  562,
      562,  562,  562,  562,  562,  562,  567,  567,  567,  567,
      567,  567,  567,  567,  306,   83,  568,  568,  568,  568,
      568,  568,  568,  568,  482,   82,   83, 1321, 1231,  569,
      569,  885,  885,  885,  885,  885,  885,  692,  569,  569,
      569,  569,  569,  570,  570,  571,  572,  572,  572,  572,
      572,  931,  931,  932,  288, 1177,  573,  573,  892,  892,
      892,  892,  892,  892,  692,  573,  573,  573,  573,  573,
       82, 1253,  569,  569,  569,  569,  569,  569,  569,  569,

      574,  574,  574,  574,  574,  574,  574,  574,  452,   83,
      575,  575,  575,  575,  575,  575,  575,  575,  489,  430,
     1321,  430, 1253,  576,  576,  942,  942,  943, 1160,  699,
      699,  699,  576,  576,  576,  576,  576,  577,  577,  578,
      579,  579,  579,  579,  579,   82,   83, 1248,  614, 1248,
      580,  580,  899,  899,  899,  899,  899,  899,  706,  580,
      580,  580,  580,  580,   82, 1155,  576,  576,  576,  576,
      576,  576,  576,  576,  581,  581,  581,  581,  581,  581,
      581,  581,  585,  585,  586,  587,  587,  587,  587,  587,
     1321,  614,  824,   82,   83,  588,  588,   82,   83, 1082,

      706,  706,  826,  638,  588,  588,  588,  588,  588,  288,
      753,  589,  589,  589,  589,  589,  589,  589,  589,  498,
      755, 1075, 1321, 1068,  590,  590,  906,  906,  906,  906,
      906,  906,  755,  590,  590,  590,  590,  590,  591,  591,
      592,  593,  593,  593,  593,  593,   82,   83, 1061,  753,
     1054,  594,  594,  907,  907,  907,  907,  907,  907,  755,
      594,  594,  594,  594,  594,  595,  595,  595,  595,  595,
      595,  595,  595,  288, 1231,  595,  595,  595,  595,  595,
      595,   82,   83,  498,  430, 1231,  596,  596,  596,  596,
      596,  596,  596,  596,  505,   82,   83,   82,   83,  597,

      597,   82,   83, 1321, 1321,   82,   83,  655,  597,  597,
      597,  597,  597,  598,  598,  599,  600,  600,  600,  600,
      600,   82,   83,   82,   83, 1117,  601,  601,   82,   83,
     1177,  662, 1177,  669, 1177,  601,  601,  601,  601,  601,
      602,  602,  602,  602,  602,  602,  602,  602,  430, 1168,
      602,  602,  602,  602,  602,  602,   82,   83,  505,  603,
      288,  605,  605,  605,  605,  605,  606,  607,  607,  608,
      881,  610,  610,  610,  610,  610,  611,  612,  612,  614,
     1011,  615,  615,  615,  615,  615,  615,  615,  615,  616,
       82,   83,   82,   83,  617,  617,  996,  997,  997, 1160,

      676, 1160,  683,  617,  617,  617,  617,  617,  618,  618,
      618,  618,  618,  619,  620,  620,   82,   83,  622,  622,
      622,  622,  622,  623,  624,  624,  625,  430,  627,  627,
      627,  627,  627,  628,  629,  629,  630,  888,  632,  632,
      632,  632,  632,  633,  634,  634,  636,   83,  637,  637,
      637,  637,  637,  637,  637,  637,  638,  614,  824,  824,
     1160,  639,  639,   82,   83,   82,   83,  895,  902,  826,
      639,  639,  639,  639,  639,  640,  640,  640,  640,  640,
      641,  642,  642,   82, 1321,  639,  639,  639,  639,  639,
      639,  639,  639,  643,  826,  645,  645,  645,  645,  645,

      646,  647,  647,  649,  649,  650,  651,  651,  651,  651,
      651,  652,   82,   83,  824, 1155,  653,  653, 1015, 1015,
     1015, 1015, 1015, 1015,  826,  653,  653,  653,  653,  653,
      121,   83,  654,  654,  654,  654,  654,  654,  654,  654,
      655,  846,   83,   82,   83,  656,  656, 1034, 1035, 1035,
     1155,  848, 1155,  848,  656,  656,  656,  656,  656,  657,
      657,  657,  657,  657,  658,  659,  659,   82, 1125,  656,
      656,  656,  656,  656,  656,  656,  656,  201,   83,  661,
      661,  661,  661,  661,  661,  661,  661,  662,  846,   83,
       82,   83,  663,  663, 1036, 1036, 1037, 1193,  848,   82,

       83,  663,  663,  663,  663,  663,  664,  664,  664,  664,
      664,  665,  666,  666,   82,  961,  663,  663,  663,  663,
      663,  663,  663,  663,  306,   83,  668,  668,  668,  668,
      668,  668,  668,  668,  669,   82,   83,   82,   83,  670,
      670,   82,   83,   82,   83,   82,   83, 1117,  670,  670,
      670,  670,  670,  671,  671,  671,  671,  671,  672,  673,
      673,   82, 1117,  670,  670,  670,  670,  670,  670,  670,
      670,  452,   83,  675,  675,  675,  675,  675,  675,  675,
      675,  676,   82,   83,  288, 1117,  677,  677, 1058, 1058,
     1058, 1058, 1058, 1058,  881,  677,  677,  677,  677,  677,

      678,  678,  678,  678,  678,  679,  680,  680,   82, 1025,
      677,  677,  677,  677,  677,  677,  677,  677,  636,   83,
      682,  682,  682,  682,  682,  682,  682,  682,  683, 1321,
      288,  430, 1177,  684,  684, 1088, 1088, 1089, 1177,  881,
      881,  888,  684,  684,  684,  684,  684,  685,  685,  685,
      685,  685,  686,  687,  687,   82, 1321,  684,  684,  684,
      684,  684,  684,  684,  684,  288,  888,  691,  691,  691,
      691,  691,  691,  691,  691,  692,   82,   83,  430, 1020,
      693,  693, 1065, 1065, 1065, 1065, 1065, 1065,  888,  693,
      693,  693,  693,  693,  694,  694,  694,  694,  694,  695,

      696,  696,  430,  614,  698,  698,  698,  698,  698,  698,
      698,  698,  699,  895, 1168, 1321, 1160,  700,  700, 1072,
     1072, 1072, 1072, 1072, 1072,  895,  700,  700,  700,  700,
      700,  701,  701,  701,  701,  701,  702,  703,  703,  614,
      614,  705,  705,  705,  705,  705,  705,  705,  705,  706,
      895, 1160,  824, 1003,  707,  707, 1079, 1079, 1079, 1079,
     1079, 1079,  902,  707,  707,  707,  707,  707,  708,  708,
      708,  708,  708,  709,  710,  710,  603, 1155,  714,  714,
      714,  714,  714,  714,  608, 1155,  718,  718,  718,  718,
      718,  718,  614, 1321,  722,  722,  722,  722,  722,  722,

      722,  722,  616,  902,  998,  824, 1082,  723,  723, 1086,
     1086, 1086, 1086, 1086, 1086,  902,  723,  723,  723,  723,
      723,  724,  724,  725,  726,  726,  726,  726,  726, 1092,
     1092, 1093, 1009,  902,  727,  727, 1087, 1087, 1087, 1087,
     1087, 1087, 1011,  727,  727,  727,  727,  727,  728,  728,
      728,  728,  728,  728,  728,  728,  614, 1075,  728,  728,
      728,  728,  728,  728,  288,  625,  616,  733,  733,  733,
      733,  733,  733,  630, 1054,  737,  737,  737,  737,  737,
      737,  118,  895,  738,  738,  739,  740,  740,  740,  740,
      740,  636,   83,  741,  741,  741,  741,  741,  741,  741,

      741,  638, 1096, 1096, 1097, 1068,  742,  742,   82,   83,
     1107, 1107, 1108,   82,   83,  742,  742,  742,  742,  742,
      743,  743,  744,  745,  745,  745,  745,  745,   82,   83,
     1111, 1111, 1112,  746,  746,  888, 1321, 1321,   82,   83,
       82,   83,  746,  746,  746,  746,  746,   82,  848,  742,
      742,  742,  742,  742,  742,  742,  742,  747,  747,  747,
      747,  747,  747,  747,  747,  643, 1061,  751,  751,  751,
      751,  751,  751,  753,  881,  754,  754,  754,  754,  754,
      754,  754,  754,  755,   82,   83,   82,   83,  756,  756,
     1116, 1116, 1116, 1116, 1116, 1116, 1054,  756,  756,  756,

      756,  756,  757,  757,  757,  757,  757,  758,  759,  759,
      121,   83,  761,  761,  761,  761,  761,  761,  761,  761,
      655,   82,   83,   82,   83,  762,  762,   82,   83,   82,
       83, 1153, 1154, 1154,  762,  762,  762,  762,  762,   82,
     1125,  762,  762,  762,  762,  762,  762,  762,  762,  764,
      764,  764,  764,  764,  764,  764,  764,  201,   83,  765,
      765,  765,  765,  765,  765,  765,  765,  662,   82,   83,
      430,  961,  766,  766, 1129, 1129, 1129, 1129, 1129, 1129,
     1061,  766,  766,  766,  766,  766,   82,  946,  766,  766,
      766,  766,  766,  766,  766,  766,  768,  768,  768,  768,

      768,  768,  768,  768,  306,   83,  769,  769,  769,  769,
      769,  769,  769,  769,  669,  614,  824, 1009, 1117,  770,
      770,   82,   83, 1117, 1009, 1068, 1075, 1082,  770,  770,
      770,  770,  770,   82, 1011,  770,  770,  770,  770,  770,
      770,  770,  770,  772,  772,  772,  772,  772,  772,  772,
      772,  452,   83,  773,  773,  773,  773,  773,  773,  773,
      773,  676, 1321, 1009,   82,   83,  774,  774,   82,   83,
     1025, 1123, 1011, 1011, 1025,  774,  774,  774,  774,  774,
       82, 1125,  774,  774,  774,  774,  774,  774,  774,  774,
      776,  776,  776,  776,  776,  776,  776,  776,  636,   83,

      777,  777,  777,  777,  777,  777,  777,  777,  683, 1183,
     1183, 1184, 1025,  778,  778, 1172, 1172, 1172, 1172, 1172,
     1172, 1020,  778,  778,  778,  778,  778,   82, 1020,  778,
      778,  778,  778,  778,  778,  778,  778,  780,  780,  780,
      780,  780,  780,  780,  780,  784,  784,  785,  786,  786,
      786,  786,  786, 1187, 1187, 1188,  288, 1020,  787,  787,
     1207, 1207, 1208, 1321,   82,   83, 1054,  787,  787,  787,
      787,  787,  288, 1054,  788,  788,  788,  788,  788,  788,
      788,  788,  692,  288,  430, 1321, 1011,  789,  789, 1211,
     1211, 1212,  826, 1054, 1061, 1061,  789,  789,  789,  789,

      789,  790,  790,  791,  792,  792,  792,  792,  792,  430,
      614, 1321,  614, 1003,  793,  793, 1215, 1215, 1216, 1061,
     1068, 1068, 1068,  793,  793,  793,  793,  793,  794,  794,
      794,  794,  794,  794,  794,  794,  288, 1003,  794,  794,
      794,  794,  794,  794,   82,   83,  692,  430,  824,  795,
      795,  795,  795,  795,  795,  795,  795,  699, 1075, 1321,
      824, 1003,  796,  796,   82,   83, 1223, 1223, 1224, 1075,
     1075,  796,  796,  796,  796,  796,  797,  797,  798,  799,
      799,  799,  799,  799, 1009, 1321, 1009, 1166,  998,  800,
      800,   82,   83,  998, 1082, 1082, 1082, 1168,  800,  800,

      800,  800,  800,  801,  801,  801,  801,  801,  801,  801,
      801,  430,  998,  801,  801,  801,  801,  801,  801,   82,
       83,  699,  614, 1082,  802,  802,  802,  802,  802,  802,
      802,  802,  706,   82,   83, 1123, 1075,  803,  803, 1206,
     1206, 1206, 1206, 1206, 1206, 1125,  803,  803,  803,  803,
      803,  804,  804,  805,  806,  806,  806,  806,  806,   82,
       83, 1321, 1123, 1068,  807,  807, 1061, 1321, 1321,   82,
       83, 1125, 1125,  807,  807,  807,  807,  807,  808,  808,
      808,  808,  808,  808,  808,  808,  614, 1054,  808,  808,
      808,  808,  808,  808,   82,   83,  706,  813, 1166,  815,

      815,  815,  815,  815,  816,  817,  817,  818, 1168,  820,
      820,  820,  820,  820,  821,  822,  822,  824,  961,  825,
      825,  825,  825,  825,  825,  825,  825,  826, 1246, 1247,
     1247,  783,  827,  827,   82,   83,   82,   83,   82,   83,
      755,  827,  827,  827,  827,  827,  828,  828,  828,  828,
      828,  829,  830,  830,   82,   83,  832,  832,  832,  832,
      832,  833,  834,  834,  835, 1321,  837,  837,  837,  837,
      837,  838,  839,  839,  840, 1168,  842,  842,  842,  842,
      842,  843,  844,  844,  846,   83,  847,  847,  847,  847,
      847,  847,  847,  847,  848, 1166,   82,   83,  946,  849,

      849, 1265, 1265, 1266,  946, 1168,   82,   83,  849,  849,
      849,  849,  849,  850,  850,  850,  850,  850,  851,  852,
      852,   82,  946,  849,  849,  849,  849,  849,  849,  849,
      849,  853,  853,  855,  855,  855,  855,  855,  856,  857,
      857,  753, 1025,  861,  861,  861,  861,  861,  861,  861,
      861,  755,   82,   83,   82,   83,  862,  862,   82,   83,
     1321, 1321, 1277, 1277, 1278,  862,  862,  862,  862,  862,
      865,  865,  865,  865,  865,  865,  865,  865,  753, 1025,
      865,  865,  865,  865,  865,  865,   82,   83,  755,  288,
      840,  880,  880,  880,  880,  880,  880,  880,  880,  881,

     1281, 1281, 1282, 1020,  882,  882, 1276, 1276, 1276, 1276,
     1276, 1276, 1020,  882,  882,  882,  882,  882,  883,  883,
      883,  883,  883,  884,  885,  885,  430,  835,  887,  887,
      887,  887,  887,  887,  887,  887,  888,   82,   83,   82,
       83,  889,  889, 1011, 1003, 1321, 1321, 1294, 1295, 1295,
      889,  889,  889,  889,  889,  890,  890,  890,  890,  890,
      891,  892,  892,  614, 1003,  894,  894,  894,  894,  894,
      894,  894,  894,  895, 1302, 1302, 1303,  818,  896,  896,
     1306, 1306, 1306, 1306, 1306, 1306,  998,  896,  896,  896,
      896,  896,  897,  897,  897,  897,  897,  898,  899,  899,

      824,  998,  901,  901,  901,  901,  901,  901,  901,  901,
      902, 1307, 1307, 1308,  813,  903,  903, 1313, 1314, 1314,
     1317, 1318, 1318,  902,  903,  903,  903,  903,  903,  904,
      904,  904,  904,  904,  905,  906,  906,  813,  706,  911,
      911,  911,  911,  911,  911,  818,  895,  915,  915,  915,
      915,  915,  915,  824,  699,  919,  919,  919,  919,  919,
      919,  919,  919,  826,  888,  692,  881,  961,  920,  920,
     1319, 1319, 1319, 1319, 1319, 1319,  783,  920,  920,  920,
      920,  920,  921,  921,  922,  923,  923,  923,  923,  923,
      946,  946,  853,  853,  853,  924,  924, 1320, 1320, 1320,

     1320, 1320, 1320,  846,  924,  924,  924,  924,  924,  925,
      925,  925,  925,  925,  925,  925,  925,  824,  840,  925,
      925,  925,  925,  925,  925,  840,  835,  826,  930,  930,
      930,  930,  930,  930,  840,  840,  934,  934,  934,  934,
      934,  934,  118,  835,  935,  935,  936,  937,  937,  937,
      937,  937,  846,   83,  938,  938,  938,  938,  938,  938,
      938,  938,  848,  835,  835,  826,  616,  939,  939,  818,
      818,  818,  813,  813,  813,  902,  939,  939,  939,  939,
      939,   82,  895,  939,  939,  939,  939,  939,  939,  939,
      939,  941,  941,  941,  941,  941,  941,  941,  941,  853,

      888,  945,  945,  945,  945,  945,  945,  946,  881,  948,
      948,  948,  948,  948,  949,  950,  950,  962,  962,  963,
      964,  964,  964,  964,  964,  879,  783,  584,  755,  864,
      965,  965,  549,  643,  853,  853,  840,  840,  630,  965,
      965,  965,  965,  965,  288,  835,  966,  966,  966,  966,
      966,  966,  966,  966,  881,  835,  625,  826,  818,  967,
      967,  818,  608,  813,  813,  603,  706,  505,  967,  967,
      967,  967,  967,  968,  968,  969,  970,  970,  970,  970,
      970,  699,  498,  692,  783,  584,  971,  971,  636,  452,
      306,  201,  121,  755,  549,  971,  971,  971,  971,  971,

      972,  972,  972,  972,  972,  972,  972,  972,  288,  643,
      972,  972,  972,  972,  972,  972,  643,  643,  881,  430,
      636,  973,  973,  973,  973,  973,  973,  973,  973,  888,
      630,  630,  630,  625,  974,  974,  625,  625,  616,  432,
      608,  608,  608,  974,  974,  974,  974,  974,  975,  975,
      976,  977,  977,  977,  977,  977,  603,  603,  603,  706,
      699,  978,  978,  692,  690,  584,  412,  549,  384,  459,
      978,  978,  978,  978,  978,  979,  979,  979,  979,  979,
      979,  979,  979,  430,  643,  979,  979,  979,  979,  979,
      979,  643,  630,  888,  614,  630,  980,  980,  980,  980,

      980,  980,  980,  980,  895,  446,  625,  625,  441,  981,
      981,  616,  608,  608,  424,  603,  603,  505,  981,  981,
      981,  981,  981,  982,  982,  983,  984,  984,  984,  984,
      984,  346,  498,  584,  412,  452,  985,  985,  306,  201,
      121,  549,  384,  459,  459,  985,  985,  985,  985,  985,
      986,  986,  986,  986,  986,  986,  986,  986,  614,  459,
      986,  986,  986,  986,  986,  986,  452,  446,  895,  824,
      446,  987,  987,  987,  987,  987,  987,  987,  987,  902,
      446,  441,  441,  441,  988,  988,  432,  290,  424,  424,
      424,  505,  498,  988,  988,  988,  988,  988,  989,  989,

      990,  991,  991,  991,  991,  991,  496,  412,  283,  466,
      384,  992,  992,  262,  459,  459,  446,  446,  300,  441,
      992,  992,  992,  992,  992,  993,  993,  993,  993,  993,
      993,  993,  993,  824,  441,  993,  993,  993,  993,  993,
      993,  295,  432,  902,  998,  424, 1000, 1000, 1000, 1000,
     1000, 1001, 1002, 1002, 1003,  424, 1005, 1005, 1005, 1005,
     1005, 1006, 1007, 1007, 1009,  346, 1010, 1010, 1010, 1010,
     1010, 1010, 1010, 1010, 1011,  412,  283,  306,  201, 1012,
     1012,  121,  384,  262,  306,  300,  300,  300, 1012, 1012,
     1012, 1012, 1012, 1013, 1013, 1013, 1013, 1013, 1014, 1015,

     1015,   82,   83, 1017, 1017, 1017, 1017, 1017, 1018, 1019,
     1019, 1020,  295, 1022, 1022, 1022, 1022, 1022, 1023, 1024,
     1024, 1025,  295, 1027, 1027, 1027, 1027, 1027, 1028, 1029,
     1029,  946,  295, 1039, 1039, 1039, 1039, 1039, 1039, 1048,
     1048, 1049, 1050, 1050, 1050, 1050, 1050, 1051,  290,  346,
      344,  283, 1052, 1052,  192,  321,  262,  179,  314,  313,
      300, 1052, 1052, 1052, 1052, 1052,  288,  300, 1053, 1053,
     1053, 1053, 1053, 1053, 1053, 1053, 1054,  195,  295,  295,
      290, 1055, 1055,  283,  192,  201,  121,  262,  179,  172,
     1055, 1055, 1055, 1055, 1055, 1056, 1056, 1056, 1056, 1056,

     1057, 1058, 1058,  430,  253, 1060, 1060, 1060, 1060, 1060,
     1060, 1060, 1060, 1061,  201,  195,  195,  195, 1062, 1062,
      234,  192,  218,  179,  112,  172,  172, 1062, 1062, 1062,
     1062, 1062, 1063, 1063, 1063, 1063, 1063, 1064, 1065, 1065,
      614,  172, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
     1068,  211,  210,  209,  208, 1069, 1069,  195,  195,  193,
      192,  121,  179,  112, 1069, 1069, 1069, 1069, 1069, 1070,
     1070, 1070, 1070, 1070, 1071, 1072, 1072,  824,  104, 1074,
     1074, 1074, 1074, 1074, 1074, 1074, 1074, 1075,  172,  172,
      171,  170, 1076, 1076,  169,  168,  166,   45,  121,  152,

       72, 1076, 1076, 1076, 1076, 1076, 1077, 1077, 1077, 1077,
     1077, 1078, 1079, 1079, 1009,  144, 1081, 1081, 1081, 1081,
     1081, 1081, 1081, 1081, 1082,  112,   45,  104,  104, 1083,
     1083,  104,  136,  135,  134,  133,  132,  131, 1083, 1083,
     1083, 1083, 1083, 1084, 1084, 1084, 1084, 1084, 1085, 1086,
     1086,  998,  130, 1091, 1091, 1091, 1091, 1091, 1091, 1003,
      129, 1095, 1095, 1095, 1095, 1095, 1095, 1009,  120, 1099,
     1099, 1099, 1099, 1099, 1099, 1099, 1099, 1011,  118,  117,
      112,   45, 1100, 1100,  104,  104,  102,  101,  100,   99,
       98, 1100, 1100, 1100, 1100, 1100, 1101, 1101, 1102, 1103,

     1103, 1103, 1103, 1103,   97,   96,   95,   94,   93, 1104,
     1104,   92,   91,   90,   89,   45,   79,   40, 1104, 1104,
     1104, 1104, 1104, 1105, 1105, 1105, 1105, 1105, 1105, 1105,
     1105, 1009,   70, 1105, 1105, 1105, 1105, 1105, 1105,   69,
     1020, 1011, 1110, 1110, 1110, 1110, 1110, 1110, 1025,   68,
     1114, 1114, 1114, 1114, 1114, 1114, 1117,   67, 1119, 1119,
     1119, 1119, 1119, 1120, 1121, 1121, 1123,   66, 1124, 1124,
     1124, 1124, 1124, 1124, 1124, 1124, 1125,   63,   62,   61,
       57, 1126, 1126,   56,   53,   52,   51,   50,   41,   40,
     1126, 1126, 1126, 1126, 1126, 1127, 1127, 1127, 1127, 1127,

     1128, 1129, 1129,  288, 1321, 1131, 1131, 1131, 1131, 1131,
     1131, 1131, 1131, 1054, 1321, 1321, 1321, 1321, 1132, 1132,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1132, 1132, 1132,
     1132, 1132, 1134, 1134, 1134, 1134, 1134, 1134, 1134, 1134,
      288, 1321, 1134, 1134, 1134, 1134, 1134, 1134, 1321, 1321,
     1054,  430, 1321, 1135, 1135, 1135, 1135, 1135, 1135, 1135,
     1135, 1061, 1321, 1321, 1321, 1321, 1136, 1136, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1136, 1136, 1136, 1136, 1136,
     1138, 1138, 1138, 1138, 1138, 1138, 1138, 1138,  430, 1321,
     1138, 1138, 1138, 1138, 1138, 1138, 1321, 1321, 1061,  614,

     1321, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1139, 1068,
     1321, 1321, 1321, 1321, 1140, 1140, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1140, 1140, 1140, 1140, 1140, 1142, 1142,
     1142, 1142, 1142, 1142, 1142, 1142,  614, 1321, 1142, 1142,
     1142, 1142, 1142, 1142, 1321, 1321, 1068,  824, 1321, 1143,
     1143, 1143, 1143, 1143, 1143, 1143, 1143, 1075, 1321, 1321,
     1321, 1321, 1144, 1144, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1144, 1144, 1144, 1144, 1144, 1146, 1146, 1146, 1146,
     1146, 1146, 1146, 1146,  824, 1321, 1146, 1146, 1146, 1146,
     1146, 1146, 1321, 1321, 1075, 1009, 1321, 1147, 1147, 1147,

     1147, 1147, 1147, 1147, 1147, 1082, 1321, 1321, 1321, 1321,
     1148, 1148, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1148,
     1148, 1148, 1148, 1148, 1150, 1150, 1150, 1150, 1150, 1150,
     1150, 1150, 1009, 1321, 1150, 1150, 1150, 1150, 1150, 1150,
     1321, 1321, 1082, 1155, 1321, 1157, 1157, 1157, 1157, 1157,
     1158, 1159, 1159, 1160, 1321, 1162, 1162, 1162, 1162, 1162,
     1163, 1164, 1164, 1166, 1321, 1167, 1167, 1167, 1167, 1167,
     1167, 1167, 1167, 1168, 1321, 1321, 1321, 1321, 1169, 1169,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1169, 1169, 1169,
     1169, 1169, 1170, 1170, 1170, 1170, 1170, 1171, 1172, 1172,

       82,   83, 1174, 1174, 1174, 1174, 1174, 1175, 1176, 1176,
     1177, 1321, 1179, 1179, 1179, 1179, 1179, 1180, 1181, 1181,
     1117, 1321, 1186, 1186, 1186, 1186, 1186, 1186, 1123, 1321,
     1190, 1190, 1190, 1190, 1190, 1190, 1190, 1190, 1125, 1321,
     1321, 1321, 1321, 1191, 1191, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1191, 1191, 1191, 1191, 1191, 1194, 1194, 1194,
     1194, 1194, 1194, 1194, 1194, 1123, 1321, 1194, 1194, 1194,
     1194, 1194, 1194, 1321, 1155, 1125, 1210, 1210, 1210, 1210,
     1210, 1210, 1160, 1321, 1214, 1214, 1214, 1214, 1214, 1214,
     1166, 1321, 1218, 1218, 1218, 1218, 1218, 1218, 1218, 1218,

     1168, 1321, 1321, 1321, 1321, 1219, 1219, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1219, 1219, 1219, 1219, 1219, 1221,
     1221, 1221, 1221, 1221, 1221, 1221, 1221, 1166, 1321, 1221,
     1221, 1221, 1221, 1221, 1221, 1321, 1177, 1168, 1226, 1226,
     1226, 1226, 1226, 1226,   82,   83, 1228, 1228, 1228, 1228,
     1228, 1229, 1230, 1230, 1231, 1321, 1233, 1233, 1233, 1233,
     1233, 1234, 1235, 1235, 1248, 1321, 1250, 1250, 1250, 1250,
     1250, 1251, 1252, 1252, 1253, 1321, 1255, 1255, 1255, 1255,
     1255, 1256, 1257, 1257,   82,   83, 1261, 1261, 1261, 1261,
     1261, 1262, 1263, 1263, 1231, 1321, 1268, 1268, 1268, 1268,

     1268, 1268, 1248, 1321, 1280, 1280, 1280, 1280, 1280, 1280,
     1253, 1321, 1284, 1284, 1284, 1284, 1284, 1284, 1287, 1321,
     1289, 1289, 1289, 1289, 1289, 1290, 1291, 1291, 1296, 1321,
     1298, 1298, 1298, 1298, 1298, 1299, 1300, 1300, 1287, 1321,
     1305, 1305, 1305, 1305, 1305, 1305, 1296, 1321, 1310, 1310,
     1310, 1310, 1310, 1310,   38,   38,   38,   38,   38,   38,
       38,   38,   71, 1321,   71,   71,   71,   71,   71,   71,
       78,   78,   78,   77,   77,   77,  105, 1321,  105,  108,
     1321,  108,  110,  110,  110,  111,  111,  111,  140, 1321,
      140,  141, 1321,  141,  141,  142,  142,  142,  143,  143,

      143,  151,  151,  151,  173, 1321,  173,  176, 1321,  176,
      177,  177,  177,  178,  178,  178,  191,  191,  191,  196,
     1321,  196,  199, 1321,  199,  200,  200,  200,  200,  200,
      215, 1321,  215,  216,  216,  216,  217,  217,  217,  225,
      225,  225,  225,  225,  232,  232,  232,  233,  233,  233,
      242, 1321,  242,  256,  256,  256,  259,  259,  259,  260,
      260,  260,  261,  261,  261,  281,  281,  281,  282,  282,
      282,  291,  291,  291,  296, 1321,  296,  299, 1321,  299,
      301, 1321,  301,  304, 1321,  304,  305,  305,  305,  305,
      305,  318,  318,  318,  319,  319,  319,  320,  320,  320,

      328,  328,  328,  328,  328,  335,  335,  335,  335,  335,
      342,  342,  342,  343,  343,  343,  347,  347,  347,  355,
      355,  355,  299, 1321,  299,  364, 1321,  364,  304, 1321,
      304,  368, 1321,  368,   55, 1321,   55,   55,  382,  382,
      382,  383,  383,  383,  410,  410,  410,  411,  411,  411,
      418,  418,  418,  425, 1321,  425,  428, 1321,  428,  429,
     1321,  429,  429,  429,  433,  433,  433,  437,  437,  437,
      440,  440,  440,  442, 1321,  442,  445, 1321,  445,  447,
     1321,  447,  450, 1321,  450,  451,  451,  451,  451,  451,
      460, 1321,  460,  463, 1321,  463,  464,  464,  464,  465,

      465,  465,  473,  473,  473,  473,  473,  480,  480,  480,
      480,  480,  487,  487,  487,  487,  487,  494,  494,  494,
      495,  495,  495,  499,  499,  499,  503, 1321,  503,  503,
      503,  506,  506,  506,  428, 1321,  428,  513, 1321,  513,
      518,  518,  518,  440,  440,  440,  524,  524,  524,  445,
     1321,  445,  528, 1321,  528,  450, 1321,  450,  532, 1321,
      532,  463, 1321,  463,  546, 1321,  546,  547,  547,  547,
      548,  548,  548,  582,  582,  582,  583,  583,  583,  590,
      590,  590,  597,  597,  597,  604, 1321,  604,  607, 1321,
      607,  609, 1321,  609,  612, 1321,  612,  613, 1321,  613,

      613,  613,  617,  617,  617,  621,  621,  621,  624,  624,
      624,  626, 1321,  626,  629, 1321,  629,  631, 1321,  631,
      634, 1321,  634,  635,  635,  635,  635,  635,  644, 1321,
      644,  647, 1321,  647,  648,  648,  648,  660,  660,  660,
      660,  660,  667,  667,  667,  667,  667,  674,  674,  674,
      674,  674,  681,  681,  681,  681,  681,  688,  688,  688,
      689,  689,  689,  693,  693,  693,  697, 1321,  697,  697,
      697,  700,  700,  700,  704, 1321,  704,  704,  704,  707,
      707,  707,  607, 1321,  607,  714, 1321,  714,  612, 1321,
      612,  718, 1321,  718,  723,  723,  723,  624,  624,  624,

      729,  729,  729,  629, 1321,  629,  733, 1321,  733,  634,
     1321,  634,  737, 1321,  737,  647, 1321,  647,  751, 1321,
      751,  752,  752,  752,  760,  760,  760, 1321,  760,  756,
      756,  756,  763, 1321,  763,  767, 1321,  767,  771, 1321,
      771,  775, 1321,  775,  779, 1321,  779,  781,  781,  781,
      782,  782,  782,  789,  789,  789,  796,  796,  796,  803,
      803,  803,  814, 1321,  814,  817, 1321,  817,  819, 1321,
      819,  822, 1321,  822,  823, 1321,  823,  823,  823,  827,
      827,  827,  831,  831,  831,  834,  834,  834,  836, 1321,
      836,  839, 1321,  839,  841, 1321,  841,  844, 1321,  844,

      845,  845,  845,  845,  845,  854, 1321,  854,  857, 1321,
      857,  863,  863,  863,  862,  862,  862,  866,  866,  866,
     1321,  866,  867,  867,  867,  867,  867,  868,  868,  868,
     1321,  868,  869,  869,  869,  869,  869,  870,  870,  870,
     1321,  870,  871,  871,  871,  871,  871,  872,  872,  872,
     1321,  872,  873,  873,  873,  873,  873,  874,  874,  874,
     1321,  874,  875,  875,  875,  875,  875,  876,  876,  876,
     1321,  876,  877,  877,  877,  878,  878,  878,  882,  882,
      882,  886, 1321,  886,  886,  886,  889,  889,  889,  893,
     1321,  893,  893,  893,  896,  896,  896,  900, 1321,  900,

      900,  900,  903,  903,  903,  817, 1321,  817,  911, 1321,
      911,  822, 1321,  822,  915, 1321,  915,  920,  920,  920,
      834,  834,  834,  926,  926,  926,  839, 1321,  839,  930,
     1321,  930,  844, 1321,  844,  934, 1321,  934,  940, 1321,
      940,  857, 1321,  857,  945, 1321,  945,  947, 1321,  947,
      950, 1321,  950,  951, 1321,  951,  951,  951,  952,  952,
      952, 1321,  952,  953,  953,  953, 1321,  953,  954,  954,
      954, 1321,  954,  955,  955,  955, 1321,  955,  956,  956,
      956, 1321,  956,  957,  957,  957, 1321,  957,  958,  958,
      958, 1321,  958,  959,  959,  959,  960,  960,  960,  967,

      967,  967,  974,  974,  974,  981,  981,  981,  988,  988,
      988,  999, 1321,  999, 1002, 1321, 1002, 1004, 1321, 1004,
     1007, 1321, 1007, 1008, 1321, 1008, 1008, 1008, 1012, 1012,
     1012, 1016, 1016, 1016, 1019, 1019, 1019, 1021, 1321, 1021,
     1024, 1321, 1024, 1026, 1321, 1026, 1029, 1321, 1029, 1030,
     1030, 1030, 1030, 1030, 1031, 1031, 1031, 1321, 1031,  950,
     1321,  950, 1039, 1321, 1039, 1040, 1040, 1040, 1321, 1040,
     1041, 1041, 1041, 1321, 1041, 1042, 1042, 1042, 1321, 1042,
     1043, 1043, 1043, 1321, 1043, 1044, 1044, 1044, 1321, 1044,
     1045, 1045, 1045, 1321, 1045, 1046, 1046, 1046, 1321, 1046,

     1047, 1047, 1047, 1055, 1055, 1055, 1059, 1321, 1059, 1059,
     1059, 1062, 1062, 1062, 1066, 1321, 1066, 1066, 1066, 1069,
     1069, 1069, 1073, 1321, 1073, 1073, 1073, 1076, 1076, 1076,
     1080, 1321, 1080, 1080, 1080, 1083, 1083, 1083, 1002, 1321,
     1002, 1091, 1321, 1091, 1007, 1321, 1007, 1095, 1321, 1095,
     1100, 1100, 1100, 1019, 1019, 1019, 1106, 1106, 1106, 1024,
     1321, 1024, 1110, 1321, 1110, 1029, 1321, 1029, 1114, 1321,
     1114, 1115, 1115, 1115, 1321, 1115, 1118, 1321, 1118, 1121,
     1321, 1121,  864,  864,  864, 1321,  864, 1122, 1122, 1122,
     1130, 1321, 1130, 1126, 1126, 1126, 1133, 1321, 1133, 1132,

     1132, 1132, 1137, 1321, 1137, 1136, 1136, 1136, 1141, 1321,
     1141, 1140, 1140, 1140, 1145, 1321, 1145, 1144, 1144, 1144,
     1149, 1321, 1149, 1148, 1148, 1148, 1156, 1321, 1156, 1159,
     1321, 1159, 1161, 1321, 1161, 1164, 1321, 1164, 1165, 1321,
     1165, 1165, 1165, 1169, 1169, 1169, 1173, 1173, 1173, 1176,
     1176, 1176, 1178, 1321, 1178, 1181, 1321, 1181, 1182, 1182,
     1182, 1321, 1182, 1121, 1321, 1121, 1186, 1321, 1186, 1192,
     1192, 1192, 1191, 1191, 1191, 1195, 1321, 1195, 1196, 1321,
     1196, 1196, 1196, 1197, 1321, 1197, 1198, 1321, 1198, 1198,
     1198, 1199, 1321, 1199, 1200, 1321, 1200, 1200, 1200, 1201,

     1321, 1201, 1202, 1321, 1202, 1202, 1202, 1203, 1321, 1203,
     1204, 1321, 1204, 1204, 1204, 1205, 1321, 1205, 1159, 1321,
     1159, 1210, 1321, 1210, 1164, 1321, 1164, 1214, 1321, 1214,
     1220, 1321, 1220, 1219, 1219, 1219, 1176, 1176, 1176, 1222,
     1222, 1222, 1181, 1321, 1181, 1226, 1321, 1226, 1227, 1227,
     1227, 1230, 1230, 1230, 1232, 1321, 1232, 1235, 1321, 1235,
     1236, 1321, 1236, 1236, 1236, 1237, 1321, 1237, 1238, 1321,
     1238, 1239, 1321, 1239, 1240, 1321, 1240, 1241, 1321, 1241,
     1242, 1321, 1242, 1243, 1321, 1243, 1249, 1321, 1249, 1252,
     1321, 1252, 1254, 1321, 1254, 1257, 1321, 1257, 1258, 1321,

     1258, 1258, 1258, 1259, 1321, 1259, 1260, 1260, 1260, 1263,
     1263, 1263, 1264, 1264, 1264, 1268, 1321, 1268, 1269, 1321,
     1269, 1270, 1321, 1270, 1271, 1321, 1271, 1272, 1321, 1272,
     1273, 1321, 1273, 1274, 1321, 1274, 1275, 1321, 1275, 1280,
     1321, 1280, 1284, 1321, 1284, 1285, 1321, 1285, 1286, 1286,
     1286, 1288, 1321, 1288, 1291, 1321, 1291, 1193, 1321, 1193,
     1297, 1321, 1297, 1300, 1321, 1300, 1301, 1321, 1301, 1305,
     1321, 1305, 1310, 1321, 1310,    5, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321
    } ;

static yyconst short int yy_chk[7429] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    3,    3,    4,    4,   16, 1762,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   48,   48,  109,
     1761,   16,   16,   18,   18,   18,   18,   18,   18,  109,
       16,   16,   16,   16,   16,   17,   17,   17,   17,   17,
       17,   17,   17,   24,   24,   24,   24,   24,   24,   24,

       24,   24,  104,  104,  104, 1760,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   25,   25,   25,   25,   25,   25,   25,   25,
       25,   28,   28,   32, 1759,   25,   25,  126,  126,   28,
       32,  120,  120,  120,   25,   25,   25,   25,   25,   43,
      141,   43,   43,   43,   43,   43,   43,   43,   43,   44,
      141,   44,   44,   44,   44,   44,   44,   44,   44,   44,
      149,  149,  159,  159,   44,   44,   86,   86,   86,   86,
       86,   86,  159,   44,   44,   44,   44,   44,   47,   47,

       47,   47,   47,   47,   47,   47,   49,   49,   49,   49,
       49,   49,   49,   49,   50,   50,   50,   50,   50,   50,
       50,   50,   50,   50,  206,  206,  130,  160,  160,   50,
       50,  115,  115,  115,  115,  115,  115,  160,   50,   50,
       50,   50,   50,   54,   54,   54,   54,   54,   54,   54,
       54,  130,  172,  172,  172, 1758,   54,   54,  155,  155,
      155,  155,  155,  155,  155,   54,   54,   54,   54,   54,
       74,  294,   74,   74,   74,   74,   74,   74,   74,   74,
       76,  294,   76,   76,   76,   76,   76,   76,   76,   76,
       76,  212,  212,  165,  165,   76,   76,  163,  163,  163,

      163,  163,  163,  165,   76,   76,   76,   76,   76,   79,
       79,   79,   79,   79,   79,   79,   79,   79,   79,  195,
      195,  195,  184,  184,   79,   79,  182,  182,  182,  182,
      182,  182,  184,   79,   79,   79,   79,   79,   84,   84,
       84,   84,   84,   84,   84,   84,   84,   84,   84,  185,
      185,  190,  190,   84,   84,  214,  214,  223,  223,  185,
     1757,  190,   84,   84,   84,   84,   84,   85,   85,   85,
       85,   85,   85,   85,   85,   87, 1756,   87,   87,   87,
       87,   87,   87,   87,   87,   88,   88,   88,   88,   88,
       88,   88,   88,  230,  230, 1755,  200,  200,   88,   88,

      188,  188,  188,  188,  188,  188,  200,   88,   88,   88,
       88,   88,  107, 1753,  107,  107,  107,  107,  107,  107,
      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
      113,  225,  225,  246,  246,  113,  113,  256,  256,  257,
      257,  225, 1752,  246,  113,  113,  113,  113,  113,  114,
      114,  114,  114,  114,  114,  114,  114,  116,  350,  116,
      116,  116,  116,  116,  116,  116,  116,  121,  350,  121,
      121,  121,  121,  121,  121,  121,  121,  122,  122,  122,
      122,  122,  122,  122,  122,  122,  122,  122,  259,  259,
      247,  247,  122,  122,  237,  237,  237,  237,  237,  237,

      247,  122,  122,  122,  122,  122,  123,  123,  123,  123,
      123,  123,  123,  123,  288,  288,  288,  252,  252,  123,
      123,  250,  250,  250,  250,  250,  250,  252,  123,  123,
      123,  123,  123,  124, 1750,  124,  124,  124,  124,  124,
      124,  124,  124,  125,  125,  125,  125,  125,  125,  125,
      125,  138, 1746,  138,  138,  138,  138,  138,  138,  138,
      138,  144,  144,  144,  144,  144,  144,  144,  144,  144,
      144,  258,  258,  267,  267, 1745,  144,  144, 1744,  258,
      258,  311,  311,  267, 1737,  144,  144,  144,  144,  144,
      145,  145,  145,  145,  145,  145,  145,  145,  145,  145,

      145,  318,  318,  268,  268,  145,  145,  265,  265,  265,
      265,  265,  265,  268,  145,  145,  145,  145,  145,  146,
      146,  146,  146,  146,  146,  146,  146,  295,  295,  295,
      273,  273,  146,  146,  271,  271,  271,  271,  271,  271,
      273,  146,  146,  146,  146,  146,  147, 1735,  147,  147,
      147,  147,  147,  147,  147,  147,  148,  148,  148,  148,
      148,  148,  148,  148,  157, 1734,  157,  157,  157,  157,
      157,  157,  157,  157,  161,  161,  161,  161,  161,  161,
      161,  161,  161,  161,  161,  274,  274,  275,  275,  161,
      161,  300,  300,  300, 1725,  274, 1715,  275,  161,  161,

      161,  161,  161,  162,  162,  162,  162,  162,  162,  162,
      162,  164,  354,  164,  164,  164,  164,  164,  164,  164,
      164,  175,  354,  175,  175,  175,  175,  175,  175,  180,
      180,  180,  180,  180,  180,  180,  180,  180,  180,  180,
      326,  326,  280,  280,  180,  180,  278,  278,  278,  278,
      278,  278,  280,  180,  180,  180,  180,  180,  181,  181,
      181,  181,  181,  181,  181,  181,  183, 1714,  183,  183,
      183,  183,  183,  183,  183,  183,  186,  186,  186,  186,
      186,  186,  186,  186,  186,  186,  186,  333,  333,  305,
      305,  186,  186,  286,  286,  286,  286,  286,  286,  305,

      186,  186,  186,  186,  186,  187,  187,  187,  187,  187,
      187,  187,  187,  189, 1713,  189,  189,  189,  189,  189,
      189,  189,  189,  193,  193,  193,  193,  193,  193,  193,
      193,  314,  314,  314,  328,  328,  193,  193,  316,  316,
      316,  335,  335, 1698,  328,  193,  193,  193,  193,  193,
      198,  335,  198,  198,  198,  198,  198,  198,  201, 1693,
      201,  201,  201,  201,  201,  201,  201,  201,  202,  202,
      202,  202,  202,  202,  202,  202,  202,  202,  202,  340,
      340,  355, 1690,  202,  202,  358,  358,  358,  358,  358,
      358,  355,  202,  202,  202,  202,  202,  203,  203,  203,

      203,  203,  203,  203,  203,  360,  361,  361,  363,  363,
      203,  203,  424,  424,  424,  360,  430,  430,  430,  203,
      203,  203,  203,  203,  204, 1687,  204,  204,  204,  204,
      204,  204,  204,  204,  205,  205,  205,  205,  205,  205,
      205,  205,  213,  213,  213,  213,  213,  213,  213,  213,
      213,  213,  218,  218,  218,  218,  218,  218,  218,  218,
      218,  218,  372,  372,  373,  373, 1686,  218,  218,  437,
      437, 1685,  372, 1671,  373, 1668,  218,  218,  218,  218,
      218,  219,  219,  219,  219,  219,  219,  219,  219,  219,
      219,  219,  438,  438,  378,  378,  219,  219,  376,  376,

      376,  376,  376,  376,  378,  219,  219,  219,  219,  219,
      220,  220,  220,  220,  220,  220,  220,  220,  440,  440,
     1656,  389,  389,  220,  220,  387,  387,  387,  387,  387,
      387,  389,  220,  220,  220,  220,  220,  221, 1655,  221,
      221,  221,  221,  221,  221,  221,  221,  222,  222,  222,
      222,  222,  222,  222,  222,  226,  226,  226,  226,  226,
      226,  226,  226,  226,  226,  226,  390,  390,  395,  395,
      226,  226,  441,  441,  441, 1654,  390, 1637,  395,  226,
      226,  226,  226,  226,  227,  227,  227,  227,  227,  227,
      227,  227,  446,  446,  446,  396,  396,  227,  227,  393,

      393,  393,  393,  393,  393,  396,  227,  227,  227,  227,
      227,  228, 1636,  228,  228,  228,  228,  228,  228,  228,
      228,  229,  229,  229,  229,  229,  229,  229,  229,  234,
      234,  234,  234,  234,  234,  234,  234,  397,  397,  402,
      402, 1632,  234,  234,  457,  457, 1629,  397, 1625,  402,
     1622,  234,  234,  234,  234,  234,  235,  417,  235,  235,
      235,  235,  235,  235,  235,  235,  235,  417, 1619,  403,
      403,  235,  235,  400,  400,  400,  400,  400,  400,  403,
      235,  235,  235,  235,  235,  236,  236,  236,  236,  236,
      236,  236,  236,  240,  418,  240,  240,  240,  240,  240,

      240,  240,  240,  244,  418,  244,  244,  244,  244,  244,
      244,  244,  244,  248,  248,  248,  248,  248,  248,  248,
      248,  248,  248,  248,  404,  404,  409,  409,  248,  248,
      459,  459,  459, 1618,  404, 1617,  409,  248,  248,  248,
      248,  248,  249,  249,  249,  249,  249,  249,  249,  249,
      251, 1597,  251,  251,  251,  251,  251,  251,  251,  251,
      255,  255,  255,  255,  255,  255,  255,  255,  263,  263,
      263,  263,  263,  263,  263,  263,  263,  263,  263,  471,
      471,  423, 1596,  263,  263,  407,  407,  407,  407,  407,
      407,  423,  263,  263,  263,  263,  263,  264,  264,  264,

      264,  264,  264,  264,  264,  266, 1595,  266,  266,  266,
      266,  266,  266,  266,  266,  269,  269,  269,  269,  269,
      269,  269,  269,  269,  269,  269,  478,  478,  436, 1594,
      269,  269,  415,  415,  415,  415,  415,  415,  436,  269,
      269,  269,  269,  269,  270,  270,  270,  270,  270,  270,
      270,  270,  272, 1579,  272,  272,  272,  272,  272,  272,
      272,  272,  276,  276,  276,  276,  276,  276,  276,  276,
      276,  276,  276,  485,  485,  451,  451,  276,  276,  421,
      421,  421,  421,  421,  421,  451,  276,  276,  276,  276,
      276,  277,  277,  277,  277,  277,  277,  277,  277,  279,

      502,  279,  279,  279,  279,  279,  279,  279,  279,  284,
      502,  284,  284,  284,  284,  284,  284,  284,  284,  284,
      439,  439,  473,  473,  284,  284,  492,  492,  439,  439,
      524,  524,  473,  284,  284,  284,  284,  284,  285,  285,
      285,  285,  285,  285,  285,  285,  289, 1578,  289,  289,
      289,  289,  289,  289,  289,  289,  289,  480,  480,  487,
      487,  289,  289,  525,  525,  527,  527,  480, 1577,  487,
      289,  289,  289,  289,  289,  290,  290,  290,  290,  290,
      290,  290,  290,  509,  517,  518,  523, 1558,  290,  290,
      603,  603,  603,  509,  517,  518,  523,  290,  290,  290,

      290,  290,  292,  292,  292,  292,  292,  292,  292,  292,
      293, 1554,  293,  293,  293,  293,  293,  293,  589,  298,
      293,  298,  298,  298,  298,  298,  298,  303,  589,  303,
      303,  303,  303,  303,  303,  306, 1551,  306,  306,  306,
      306,  306,  306,  306,  306,  307,  307,  307,  307,  307,
      307,  307,  307,  307,  307,  307,  621,  621,  536,  536,
      307,  307,  521,  521,  521,  521,  521,  521,  536,  307,
      307,  307,  307,  307,  308,  308,  308,  308,  308,  308,
      308,  308,  537,  537,  542,  542, 1547,  308,  308,  608,
      608,  608,  537, 1544,  542, 1541,  308,  308,  308,  308,

      308,  309, 1540,  309,  309,  309,  309,  309,  309,  309,
      309,  310,  310,  310,  310,  310,  310,  310,  310,  321,
      321,  321,  321,  321,  321,  321,  321,  321,  321,  614,
      614,  614,  554,  554,  321,  321,  540,  540,  540,  540,
      540,  540,  554,  321,  321,  321,  321,  321,  322,  322,
      322,  322,  322,  322,  322,  322,  322,  322,  322,  622,
      622,  555,  555,  322,  322,  552,  552,  552,  552,  552,
      552,  555,  322,  322,  322,  322,  322,  323,  323,  323,
      323,  323,  323,  323,  323,  624,  624, 1539,  560,  560,
      323,  323,  558,  558,  558,  558,  558,  558,  560,  323,

      323,  323,  323,  323,  324, 1516,  324,  324,  324,  324,
      324,  324,  324,  324,  325,  325,  325,  325,  325,  325,
      325,  325,  329,  329,  329,  329,  329,  329,  329,  329,
      329,  329,  329,  561,  561,  562,  562,  329,  329,  625,
      625,  625, 1500,  561, 1499,  562,  329,  329,  329,  329,
      329,  330,  330,  330,  330,  330,  330,  330,  330,  630,
      630,  630,  567,  567,  330,  330,  565,  565,  565,  565,
      565,  565,  567,  330,  330,  330,  330,  330,  331, 1498,
      331,  331,  331,  331,  331,  331,  331,  331,  332,  332,
      332,  332,  332,  332,  332,  332,  336,  336,  336,  336,

      336,  336,  336,  336,  336,  336,  336,  568,  568,  569,
      569,  336,  336,  641,  641,  652,  652,  568, 1482,  569,
      336,  336,  336,  336,  336,  337,  337,  337,  337,  337,
      337,  337,  337,  643,  643,  643,  574,  574,  337,  337,
      572,  572,  572,  572,  572,  572,  574,  337,  337,  337,
      337,  337,  338, 1479,  338,  338,  338,  338,  338,  338,
      338,  338,  339,  339,  339,  339,  339,  339,  339,  339,
      344,  344,  344,  344,  344,  344,  344,  344,  575,  575,
      576,  576, 1476,  344,  344,  658,  658, 1472,  575, 1469,
      576, 1466,  344,  344,  344,  344,  344,  345,  590,  345,

      345,  345,  345,  345,  345,  345,  345,  345,  590, 1430,
      581,  581,  345,  345,  579,  579,  579,  579,  579,  579,
      581,  345,  345,  345,  345,  345,  346,  346,  346,  346,
      346,  346,  346,  346,  665,  665, 1427,  595, 1424,  346,
      346,  587,  587,  587,  587,  587,  587,  595,  346,  346,
      346,  346,  346,  348,  348,  348,  348,  348,  348,  348,
      348,  349, 1420,  349,  349,  349,  349,  349,  349,  672,
      672,  349,  352,  596,  352,  352,  352,  352,  352,  352,
      352,  352,  356,  596,  356,  356,  356,  356,  356,  356,
      356,  356,  356,  679,  679,  597, 1417,  356,  356,  593,

      593,  593,  593,  593,  593,  597,  356,  356,  356,  356,
      356,  357,  357,  357,  357,  357,  357,  357,  357,  362,
      362,  362,  362,  362,  362,  362,  362,  362,  362,  366,
      602,  366,  366,  366,  366,  366,  366,  366,  366,  370,
      602,  370,  370,  370,  370,  370,  370,  370,  370,  374,
      374,  374,  374,  374,  374,  374,  374,  374,  374,  374,
      686,  686,  620, 1388,  374,  374,  600,  600,  600,  600,
      600,  600,  620,  374,  374,  374,  374,  374,  375,  375,
      375,  375,  375,  375,  375,  375,  377,  696,  377,  377,
      377,  377,  377,  377,  377,  377,  380,  696,  380,  380,

      380,  380,  380,  380,  380,  380,  385,  385,  385,  385,
      385,  385,  385,  385,  385,  385,  385,  623,  623,  635,
      635,  385,  385,  729,  729,  623,  623,  730,  730,  635,
      385,  385,  385,  385,  385,  386,  386,  386,  386,  386,
      386,  386,  386,  388, 1387,  388,  388,  388,  388,  388,
      388,  388,  388,  391,  391,  391,  391,  391,  391,  391,
      391,  391,  391,  391,  732,  732,  660,  660,  391,  391,
      651,  651,  651,  651,  651,  651,  660,  391,  391,  391,
      391,  391,  392,  392,  392,  392,  392,  392,  392,  392,
      394, 1383,  394,  394,  394,  394,  394,  394,  394,  394,

      398,  398,  398,  398,  398,  398,  398,  398,  398,  398,
      398,  667,  667,  674,  674,  398,  398,  712,  712,  712,
     1380,  667, 1378,  674,  398,  398,  398,  398,  398,  399,
      399,  399,  399,  399,  399,  399,  399,  401, 1356,  401,
      401,  401,  401,  401,  401,  401,  401,  405,  405,  405,
      405,  405,  405,  405,  405,  405,  405,  405,  681,  681,
      703, 1349,  405,  405,  753,  753,  753, 1345,  681, 1339,
      703,  405,  405,  405,  405,  405,  406,  406,  406,  406,
      406,  406,  406,  406,  408,  710,  408,  408,  408,  408,
      408,  408,  408,  408,  413,  710,  413,  413,  413,  413,

      413,  413,  413,  413,  413,  722,  723,  728, 1333,  413,
      413,  760,  760,  763,  763,  722,  723,  728,  413,  413,
      413,  413,  413,  414,  414,  414,  414,  414,  414,  414,
      414,  419,  759,  419,  419,  419,  419,  419,  419,  419,
      419,  419,  759, 1332,  741,  741,  419,  419,  726,  726,
      726,  726,  726,  726,  741,  419,  419,  419,  419,  419,
      420,  420,  420,  420,  420,  420,  420,  420,  427, 1327,
      427,  427,  427,  427,  427,  427,  431, 1323,  431,  431,
      431,  431,  431,  431,  431,  431,  431,  742,  742,  747,
      747,  431,  431,  767,  767,  771,  771,  742, 1310,  747,

      431,  431,  431,  431,  431,  432,  432,  432,  432,  432,
      432,  432,  432,  775,  775, 1305,  761,  761,  432,  432,
      745,  745,  745,  745,  745,  745,  761,  432,  432,  432,
      432,  432,  434,  434,  434,  434,  434,  434,  434,  434,
      435, 1300,  435,  435,  435,  435,  435,  435,  788,  444,
      435,  444,  444,  444,  444,  444,  444,  449,  788,  449,
      449,  449,  449,  449,  449,  452, 1298,  452,  452,  452,
      452,  452,  452,  452,  452,  453,  453,  453,  453,  453,
      453,  453,  453,  453,  453,  453,  762,  762,  764,  764,
      453,  453,  779,  779,  831,  831,  762, 1297,  764,  453,

      453,  453,  453,  453,  454,  454,  454,  454,  454,  454,
      454,  454,  765,  765,  766,  766, 1291,  454,  454,  813,
      813,  813,  765, 1289,  766, 1288,  454,  454,  454,  454,
      454,  455, 1284,  455,  455,  455,  455,  455,  455,  455,
      455,  456,  456,  456,  456,  456,  456,  456,  456,  462,
     1283,  462,  462,  462,  462,  462,  462,  466,  466,  466,
      466,  466,  466,  466,  466,  466,  466,  768,  768,  769,
      769, 1281,  466,  466,  818,  818,  818,  768, 1280,  769,
     1268,  466,  466,  466,  466,  466,  467,  467,  467,  467,
      467,  467,  467,  467,  467,  467,  467,  770,  770,  772,

      772,  467,  467,  824,  824,  824, 1267,  770, 1265,  772,
      467,  467,  467,  467,  467,  468,  468,  468,  468,  468,
      468,  468,  468,  773,  773,  774,  774, 1258,  468,  468,
      832,  832, 1257,  773, 1255,  774, 1254,  468,  468,  468,
      468,  468,  469, 1252,  469,  469,  469,  469,  469,  469,
      469,  469,  470,  470,  470,  470,  470,  470,  470,  470,
      474,  474,  474,  474,  474,  474,  474,  474,  474,  474,
      474,  776,  776,  777,  777,  474,  474,  834,  834,  851,
      851,  776, 1250,  777,  474,  474,  474,  474,  474,  475,
      475,  475,  475,  475,  475,  475,  475,  778,  778,  780,

      780, 1249,  475,  475,  835,  835,  835,  778, 1236,  780,
     1235,  475,  475,  475,  475,  475,  476, 1233,  476,  476,
      476,  476,  476,  476,  476,  476,  477,  477,  477,  477,
      477,  477,  477,  477,  481,  481,  481,  481,  481,  481,
      481,  481,  481,  481,  481,  863,  863,  789, 1232,  481,
      481,  786,  786,  786,  786,  786,  786,  789,  481,  481,
      481,  481,  481,  482,  482,  482,  482,  482,  482,  482,
      482,  840,  840,  840,  794, 1226,  482,  482,  792,  792,
      792,  792,  792,  792,  794,  482,  482,  482,  482,  482,
      483, 1217,  483,  483,  483,  483,  483,  483,  483,  483,

      484,  484,  484,  484,  484,  484,  484,  484,  488,  488,
      488,  488,  488,  488,  488,  488,  488,  488,  488,  795,
      796,  801, 1215,  488,  488,  853,  853,  853, 1214,  795,
      796,  801,  488,  488,  488,  488,  488,  489,  489,  489,
      489,  489,  489,  489,  489,  864,  864, 1213,  802, 1211,
      489,  489,  799,  799,  799,  799,  799,  799,  802,  489,
      489,  489,  489,  489,  490, 1210,  490,  490,  490,  490,
      490,  490,  490,  490,  491,  491,  491,  491,  491,  491,
      491,  491,  496,  496,  496,  496,  496,  496,  496,  496,
      803,  808,  830,  845,  845,  496,  496,  866,  866, 1204,

      803,  808,  830,  845,  496,  496,  496,  496,  496,  497,
      861,  497,  497,  497,  497,  497,  497,  497,  497,  497,
      861, 1202,  862, 1200,  497,  497,  806,  806,  806,  806,
      806,  806,  862,  497,  497,  497,  497,  497,  498,  498,
      498,  498,  498,  498,  498,  498,  868,  868, 1198,  865,
     1196,  498,  498,  811,  811,  811,  811,  811,  811,  865,
      498,  498,  498,  498,  498,  500,  500,  500,  500,  500,
      500,  500,  500,  501, 1189,  501,  501,  501,  501,  501,
      501,  870,  870,  501,  504, 1187,  504,  504,  504,  504,
      504,  504,  504,  504,  504,  833,  833,  867,  867,  504,

      504,  872,  872,  833,  833,  874,  874,  867,  504,  504,
      504,  504,  504,  505,  505,  505,  505,  505,  505,  505,
      505,  869,  869,  871,  871, 1186,  505,  505,  876,  876,
     1181,  869, 1179,  871, 1178,  505,  505,  505,  505,  505,
      507,  507,  507,  507,  507,  507,  507,  507,  508, 1169,
      508,  508,  508,  508,  508,  508,  926,  926,  508,  511,
      885,  511,  511,  511,  511,  511,  511,  511,  511,  515,
      885,  515,  515,  515,  515,  515,  515,  515,  515,  519,
     1165,  519,  519,  519,  519,  519,  519,  519,  519,  519,
      873,  873,  875,  875,  519,  519,  909,  909,  909, 1164,

      873, 1162,  875,  519,  519,  519,  519,  519,  520,  520,
      520,  520,  520,  520,  520,  520,  526,  526,  526,  526,
      526,  526,  526,  526,  526,  526,  530,  892,  530,  530,
      530,  530,  530,  530,  530,  530,  534,  892,  534,  534,
      534,  534,  534,  534,  534,  534,  538,  538,  538,  538,
      538,  538,  538,  538,  538,  538,  538,  899,  906,  919,
     1161,  538,  538,  927,  927,  929,  929,  899,  906,  919,
      538,  538,  538,  538,  538,  539,  539,  539,  539,  539,
      539,  539,  539,  541,  920,  541,  541,  541,  541,  541,
      541,  541,  541,  544,  920,  544,  544,  544,  544,  544,

      544,  544,  544,  549,  549,  549,  549,  549,  549,  549,
      549,  549,  940,  940,  925, 1159,  549,  549,  923,  923,
      923,  923,  923,  923,  925,  549,  549,  549,  549,  549,
      550,  550,  550,  550,  550,  550,  550,  550,  550,  550,
      550,  938,  938,  939,  939,  550,  550,  943,  943,  943,
     1157,  938, 1156,  939,  550,  550,  550,  550,  550,  551,
      551,  551,  551,  551,  551,  551,  551,  553, 1126,  553,
      553,  553,  553,  553,  553,  553,  553,  556,  556,  556,
      556,  556,  556,  556,  556,  556,  556,  556,  941,  941,
      952,  952,  556,  556,  946,  946,  946, 1125,  941,  953,

      953,  556,  556,  556,  556,  556,  557,  557,  557,  557,
      557,  557,  557,  557,  559, 1122,  559,  559,  559,  559,
      559,  559,  559,  559,  563,  563,  563,  563,  563,  563,
      563,  563,  563,  563,  563,  954,  954,  955,  955,  563,
      563,  956,  956,  957,  957,  958,  958, 1121,  563,  563,
      563,  563,  563,  564,  564,  564,  564,  564,  564,  564,
      564,  566, 1119,  566,  566,  566,  566,  566,  566,  566,
      566,  570,  570,  570,  570,  570,  570,  570,  570,  570,
      570,  570, 1016, 1016,  966, 1118,  570,  570,  964,  964,
      964,  964,  964,  964,  966,  570,  570,  570,  570,  570,

      571,  571,  571,  571,  571,  571,  571,  571,  573, 1114,
      573,  573,  573,  573,  573,  573,  573,  573,  577,  577,
      577,  577,  577,  577,  577,  577,  577,  577,  577,  967,
      972,  973, 1113,  577,  577,  998,  998,  998, 1111,  967,
      972,  973,  577,  577,  577,  577,  577,  578,  578,  578,
      578,  578,  578,  578,  578,  580,  974,  580,  580,  580,
      580,  580,  580,  580,  580,  585,  974,  585,  585,  585,
      585,  585,  585,  585,  585,  585, 1017, 1017,  979, 1110,
      585,  585,  970,  970,  970,  970,  970,  970,  979,  585,
      585,  585,  585,  585,  586,  586,  586,  586,  586,  586,

      586,  586,  591,  980,  591,  591,  591,  591,  591,  591,
      591,  591,  591,  980, 1104,  981, 1098,  591,  591,  977,
      977,  977,  977,  977,  977,  981,  591,  591,  591,  591,
      591,  592,  592,  592,  592,  592,  592,  592,  592,  598,
      986,  598,  598,  598,  598,  598,  598,  598,  598,  598,
      986, 1096,  987, 1095,  598,  598,  984,  984,  984,  984,
      984,  984,  987,  598,  598,  598,  598,  598,  599,  599,
      599,  599,  599,  599,  599,  599,  606, 1094,  606,  606,
      606,  606,  606,  606,  611, 1092,  611,  611,  611,  611,
      611,  611,  615,  988,  615,  615,  615,  615,  615,  615,

      615,  615,  615,  988, 1091,  993, 1083,  615,  615,  991,
      991,  991,  991,  991,  991,  993,  615,  615,  615,  615,
      615,  616,  616,  616,  616,  616,  616,  616,  616, 1003,
     1003, 1003, 1015, 1080,  616,  616,  996,  996,  996,  996,
      996,  996, 1015,  616,  616,  616,  616,  616,  618,  618,
      618,  618,  618,  618,  618,  618,  619, 1076,  619,  619,
      619,  619,  619,  619, 1058,  628,  619,  628,  628,  628,
      628,  628,  628,  633, 1058,  633,  633,  633,  633,  633,
      633,  636, 1073,  636,  636,  636,  636,  636,  636,  636,
      636,  637,  637,  637,  637,  637,  637,  637,  637,  637,

      637,  637, 1009, 1009, 1009, 1069,  637,  637, 1019, 1019,
     1020, 1020, 1020, 1031, 1031,  637,  637,  637,  637,  637,
      638,  638,  638,  638,  638,  638,  638,  638, 1018, 1018,
     1025, 1025, 1025,  638,  638, 1066, 1018, 1018, 1030, 1030,
     1040, 1040,  638,  638,  638,  638,  638,  639, 1030,  639,
      639,  639,  639,  639,  639,  639,  639,  640,  640,  640,
      640,  640,  640,  640,  640,  646, 1062,  646,  646,  646,
      646,  646,  646,  649, 1059,  649,  649,  649,  649,  649,
      649,  649,  649,  649, 1041, 1041, 1042, 1042,  649,  649,
     1034, 1034, 1034, 1034, 1034, 1034, 1055,  649,  649,  649,

      649,  649,  650,  650,  650,  650,  650,  650,  650,  650,
      654,  654,  654,  654,  654,  654,  654,  654,  654,  654,
      654, 1043, 1043, 1044, 1044,  654,  654, 1045, 1045, 1046,
     1046, 1089, 1089, 1089,  654,  654,  654,  654,  654,  656,
     1052,  656,  656,  656,  656,  656,  656,  656,  656,  657,
      657,  657,  657,  657,  657,  657,  657,  661,  661,  661,
      661,  661,  661,  661,  661,  661,  661,  661, 1106, 1106,
     1065, 1047,  661,  661, 1050, 1050, 1050, 1050, 1050, 1050,
     1065,  661,  661,  661,  661,  661,  663, 1039,  663,  663,
      663,  663,  663,  663,  663,  663,  664,  664,  664,  664,

      664,  664,  664,  664,  668,  668,  668,  668,  668,  668,
      668,  668,  668,  668,  668, 1072, 1079, 1086, 1038,  668,
      668, 1107, 1107, 1036, 1099, 1072, 1079, 1086,  668,  668,
      668,  668,  668,  670, 1099,  670,  670,  670,  670,  670,
      670,  670,  670,  671,  671,  671,  671,  671,  671,  671,
      671,  675,  675,  675,  675,  675,  675,  675,  675,  675,
      675,  675, 1100, 1105, 1109, 1109,  675,  675, 1115, 1115,
     1029, 1129, 1100, 1105, 1027,  675,  675,  675,  675,  675,
      677, 1129,  677,  677,  677,  677,  677,  677,  677,  677,
      678,  678,  678,  678,  678,  678,  678,  678,  682,  682,

      682,  682,  682,  682,  682,  682,  682,  682,  682, 1117,
     1117, 1117, 1026,  682,  682, 1103, 1103, 1103, 1103, 1103,
     1103, 1024,  682,  682,  682,  682,  682,  684, 1022,  684,
      684,  684,  684,  684,  684,  684,  684,  685,  685,  685,
      685,  685,  685,  685,  685,  690,  690,  690,  690,  690,
      690,  690,  690, 1123, 1123, 1123, 1131, 1021,  690,  690,
     1155, 1155, 1155, 1132, 1173, 1173, 1131,  690,  690,  690,
      690,  690,  691, 1132,  691,  691,  691,  691,  691,  691,
      691,  691,  691, 1134, 1135, 1136, 1012,  691,  691, 1160,
     1160, 1160, 1008, 1134, 1135, 1136,  691,  691,  691,  691,

      691,  692,  692,  692,  692,  692,  692,  692,  692, 1138,
     1139, 1140, 1142, 1007,  692,  692, 1166, 1166, 1166, 1138,
     1139, 1140, 1142,  692,  692,  692,  692,  692,  694,  694,
      694,  694,  694,  694,  694,  694,  695, 1005,  695,  695,
      695,  695,  695,  695, 1174, 1174,  695,  698, 1143,  698,
      698,  698,  698,  698,  698,  698,  698,  698, 1143, 1144,
     1146, 1004,  698,  698, 1176, 1176, 1177, 1177, 1177, 1144,
     1146,  698,  698,  698,  698,  698,  699,  699,  699,  699,
      699,  699,  699,  699, 1147, 1148, 1150, 1172, 1002,  699,
      699, 1182, 1182, 1000, 1147, 1148, 1150, 1172,  699,  699,

      699,  699,  699,  701,  701,  701,  701,  701,  701,  701,
      701,  702,  999,  702,  702,  702,  702,  702,  702, 1183,
     1183,  702,  705,  992,  705,  705,  705,  705,  705,  705,
      705,  705,  705, 1185, 1185, 1190,  985,  705,  705, 1153,
     1153, 1153, 1153, 1153, 1153, 1190,  705,  705,  705,  705,
      705,  706,  706,  706,  706,  706,  706,  706,  706, 1175,
     1175, 1191, 1194,  978,  706,  706,  971, 1175, 1175, 1222,
     1222, 1191, 1194,  706,  706,  706,  706,  706,  708,  708,
      708,  708,  708,  708,  708,  708,  709,  965,  709,  709,
      709,  709,  709,  709, 1223, 1223,  709,  716, 1218,  716,

      716,  716,  716,  716,  716,  716,  716,  720, 1218,  720,
      720,  720,  720,  720,  720,  720,  720,  724,  960,  724,
      724,  724,  724,  724,  724,  724,  724,  724, 1208, 1208,
     1208,  959,  724,  724, 1225, 1225, 1227, 1227, 1228, 1228,
      951,  724,  724,  724,  724,  724,  725,  725,  725,  725,
      725,  725,  725,  725,  731,  731,  731,  731,  731,  731,
      731,  731,  731,  731,  735, 1219,  735,  735,  735,  735,
      735,  735,  735,  735,  739, 1219,  739,  739,  739,  739,
      739,  739,  739,  739,  743,  743,  743,  743,  743,  743,
      743,  743,  743,  743,  743, 1221, 1230, 1230,  950,  743,

      743, 1231, 1231, 1231,  948, 1221, 1260, 1260,  743,  743,
      743,  743,  743,  744,  744,  744,  744,  744,  744,  744,
      744,  746,  947,  746,  746,  746,  746,  746,  746,  746,
      746,  749,  945,  749,  749,  749,  749,  749,  749,  749,
      749,  754,  937,  754,  754,  754,  754,  754,  754,  754,
      754,  754, 1229, 1229, 1261, 1261,  754,  754, 1263, 1263,
     1229, 1229, 1248, 1248, 1248,  754,  754,  754,  754,  754,
      757,  757,  757,  757,  757,  757,  757,  757,  758,  935,
      758,  758,  758,  758,  758,  758, 1264, 1264,  758,  784,
      934,  784,  784,  784,  784,  784,  784,  784,  784,  784,

     1253, 1253, 1253,  933,  784,  784, 1246, 1246, 1246, 1246,
     1246, 1246,  931,  784,  784,  784,  784,  784,  785,  785,
      785,  785,  785,  785,  785,  785,  790,  930,  790,  790,
      790,  790,  790,  790,  790,  790,  790, 1262, 1262, 1286,
     1286,  790,  790,  924,  918, 1262, 1262, 1278, 1278, 1278,
      790,  790,  790,  790,  790,  791,  791,  791,  791,  791,
      791,  791,  791,  797,  916,  797,  797,  797,  797,  797,
      797,  797,  797,  797, 1287, 1287, 1287,  915,  797,  797,
     1294, 1294, 1294, 1294, 1294, 1294,  914,  797,  797,  797,
      797,  797,  798,  798,  798,  798,  798,  798,  798,  798,

      804,  912,  804,  804,  804,  804,  804,  804,  804,  804,
      804, 1296, 1296, 1296,  911,  804,  804, 1303, 1303, 1303,
     1308, 1308, 1308,  903,  804,  804,  804,  804,  804,  805,
      805,  805,  805,  805,  805,  805,  805,  816,  900,  816,
      816,  816,  816,  816,  816,  821,  896,  821,  821,  821,
      821,  821,  821,  825,  893,  825,  825,  825,  825,  825,
      825,  825,  825,  825,  889,  886,  882,  878,  825,  825,
     1313, 1313, 1313, 1313, 1313, 1313,  877,  825,  825,  825,
      825,  825,  826,  826,  826,  826,  826,  826,  826,  826,
      860,  858,  857,  855,  854,  826,  826, 1317, 1317, 1317,

     1317, 1317, 1317,  852,  826,  826,  826,  826,  826,  828,
      828,  828,  828,  828,  828,  828,  828,  829,  844,  829,
      829,  829,  829,  829,  829,  842,  838,  829,  838,  838,
      838,  838,  838,  838,  843,  841,  843,  843,  843,  843,
      843,  843,  846,  839,  846,  846,  846,  846,  846,  846,
      846,  846,  847,  847,  847,  847,  847,  847,  847,  847,
      847,  847,  847,  837,  836,  827,  823,  847,  847,  822,
      820,  819,  817,  815,  814,  807,  847,  847,  847,  847,
      847,  849,  800,  849,  849,  849,  849,  849,  849,  849,
      849,  850,  850,  850,  850,  850,  850,  850,  850,  856,

      793,  856,  856,  856,  856,  856,  856,  859,  787,  859,
      859,  859,  859,  859,  859,  859,  859,  879,  879,  879,
      879,  879,  879,  879,  879,  783,  782,  781,  756,  755,
      879,  879,  752,  751,  750,  748,  740,  738,  737,  879,
      879,  879,  879,  879,  880,  736,  880,  880,  880,  880,
      880,  880,  880,  880,  880,  734,  733,  727,  721,  880,
      880,  719,  718,  717,  715,  714,  707,  704,  880,  880,
      880,  880,  880,  881,  881,  881,  881,  881,  881,  881,
      881,  700,  697,  693,  689,  688,  881,  881,  687,  680,
      673,  666,  659,  653,  648,  881,  881,  881,  881,  881,

      883,  883,  883,  883,  883,  883,  883,  883,  884,  647,
      884,  884,  884,  884,  884,  884,  645,  644,  884,  887,
      642,  887,  887,  887,  887,  887,  887,  887,  887,  887,
      634,  632,  631,  629,  887,  887,  627,  626,  617,  613,
      612,  610,  609,  887,  887,  887,  887,  887,  888,  888,
      888,  888,  888,  888,  888,  888,  607,  605,  604,  601,
      594,  888,  888,  588,  584,  583,  582,  548,  547,  546,
      888,  888,  888,  888,  888,  890,  890,  890,  890,  890,
      890,  890,  890,  891,  545,  891,  891,  891,  891,  891,
      891,  543,  535,  891,  894,  533,  894,  894,  894,  894,

      894,  894,  894,  894,  894,  532,  531,  529,  528,  894,
      894,  522,  516,  514,  513,  512,  510,  506,  894,  894,
      894,  894,  894,  895,  895,  895,  895,  895,  895,  895,
      895,  503,  499,  495,  494,  493,  895,  895,  486,  479,
      472,  465,  464,  463,  461,  895,  895,  895,  895,  895,
      897,  897,  897,  897,  897,  897,  897,  897,  898,  460,
      898,  898,  898,  898,  898,  898,  458,  450,  898,  901,
      448,  901,  901,  901,  901,  901,  901,  901,  901,  901,
      447,  445,  443,  442,  901,  901,  433,  429,  428,  426,
      425,  422,  416,  901,  901,  901,  901,  901,  902,  902,

      902,  902,  902,  902,  902,  902,  412,  411,  410,  384,
      383,  902,  902,  382,  381,  379,  371,  369,  368,  367,
      902,  902,  902,  902,  902,  904,  904,  904,  904,  904,
      904,  904,  904,  905,  365,  905,  905,  905,  905,  905,
      905,  364,  359,  905,  913,  353,  913,  913,  913,  913,
      913,  913,  913,  913,  917,  351,  917,  917,  917,  917,
      917,  917,  917,  917,  921,  347,  921,  921,  921,  921,
      921,  921,  921,  921,  921,  343,  342,  341,  334,  921,
      921,  327,  320,  319,  312,  304,  302,  301,  921,  921,
      921,  921,  921,  922,  922,  922,  922,  922,  922,  922,

      922,  928,  928,  928,  928,  928,  928,  928,  928,  928,
      928,  932,  299,  932,  932,  932,  932,  932,  932,  932,
      932,  936,  297,  936,  936,  936,  936,  936,  936,  936,
      936,  949,  296,  949,  949,  949,  949,  949,  949,  961,
      961,  961,  961,  961,  961,  961,  961,  961,  291,  287,
      283,  282,  961,  961,  281,  262,  261,  260,  254,  253,
      245,  961,  961,  961,  961,  961,  962,  243,  962,  962,
      962,  962,  962,  962,  962,  962,  962,  242,  241,  239,
      238,  962,  962,  233,  232,  231,  224,  217,  216,  215,
      962,  962,  962,  962,  962,  963,  963,  963,  963,  963,

      963,  963,  963,  968,  210,  968,  968,  968,  968,  968,
      968,  968,  968,  968,  207,  199,  197,  196,  968,  968,
      192,  191,  179,  178,  177,  176,  174,  968,  968,  968,
      968,  968,  969,  969,  969,  969,  969,  969,  969,  969,
      975,  173,  975,  975,  975,  975,  975,  975,  975,  975,
      975,  171,  170,  169,  167,  975,  975,  158,  156,  152,
      151,  150,  143,  142,  975,  975,  975,  975,  975,  976,
      976,  976,  976,  976,  976,  976,  976,  982,  140,  982,
      982,  982,  982,  982,  982,  982,  982,  982,  139,  137,
      135,  134,  982,  982,  133,  131,  129,  128,  127,  118,

      117,  982,  982,  982,  982,  982,  983,  983,  983,  983,
      983,  983,  983,  983,  989,  112,  989,  989,  989,  989,
      989,  989,  989,  989,  989,  111,  110,  108,  106,  989,
      989,  105,  101,  100,   99,   97,   96,   95,  989,  989,
      989,  989,  989,  990,  990,  990,  990,  990,  990,  990,
      990, 1001,   91, 1001, 1001, 1001, 1001, 1001, 1001, 1006,
       89, 1006, 1006, 1006, 1006, 1006, 1006, 1010,   83, 1010,
     1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010,   82,   81,
       78,   77, 1010, 1010,   75,   73,   70,   69,   68,   67,
       65, 1010, 1010, 1010, 1010, 1010, 1011, 1011, 1011, 1011,

     1011, 1011, 1011, 1011,   64,   63,   62,   61,   60, 1011,
     1011,   59,   58,   57,   56,   46,   45,   40, 1011, 1011,
     1011, 1011, 1011, 1013, 1013, 1013, 1013, 1013, 1013, 1013,
     1013, 1014,   37, 1014, 1014, 1014, 1014, 1014, 1014,   36,
     1023, 1014, 1023, 1023, 1023, 1023, 1023, 1023, 1028,   35,
     1028, 1028, 1028, 1028, 1028, 1028, 1037,   34, 1037, 1037,
     1037, 1037, 1037, 1037, 1037, 1037, 1048,   33, 1048, 1048,
     1048, 1048, 1048, 1048, 1048, 1048, 1048,   31,   30,   29,
       27, 1048, 1048,   26,   23,   22,   21,   19,    9,    7,
     1048, 1048, 1048, 1048, 1048, 1049, 1049, 1049, 1049, 1049,

     1049, 1049, 1049, 1053,    5, 1053, 1053, 1053, 1053, 1053,
     1053, 1053, 1053, 1053,    0,    0,    0,    0, 1053, 1053,
        0,    0,    0,    0,    0,    0,    0, 1053, 1053, 1053,
     1053, 1053, 1056, 1056, 1056, 1056, 1056, 1056, 1056, 1056,
     1057,    0, 1057, 1057, 1057, 1057, 1057, 1057,    0,    0,
     1057, 1060,    0, 1060, 1060, 1060, 1060, 1060, 1060, 1060,
     1060, 1060,    0,    0,    0,    0, 1060, 1060,    0,    0,
        0,    0,    0,    0,    0, 1060, 1060, 1060, 1060, 1060,
     1063, 1063, 1063, 1063, 1063, 1063, 1063, 1063, 1064,    0,
     1064, 1064, 1064, 1064, 1064, 1064,    0,    0, 1064, 1067,

        0, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067, 1067,
        0,    0,    0,    0, 1067, 1067,    0,    0,    0,    0,
        0,    0,    0, 1067, 1067, 1067, 1067, 1067, 1070, 1070,
     1070, 1070, 1070, 1070, 1070, 1070, 1071,    0, 1071, 1071,
     1071, 1071, 1071, 1071,    0,    0, 1071, 1074,    0, 1074,
     1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,    0,    0,
        0,    0, 1074, 1074,    0,    0,    0,    0,    0,    0,
        0, 1074, 1074, 1074, 1074, 1074, 1077, 1077, 1077, 1077,
     1077, 1077, 1077, 1077, 1078,    0, 1078, 1078, 1078, 1078,
     1078, 1078,    0,    0, 1078, 1081,    0, 1081, 1081, 1081,

     1081, 1081, 1081, 1081, 1081, 1081,    0,    0,    0,    0,
     1081, 1081,    0,    0,    0,    0,    0,    0,    0, 1081,
     1081, 1081, 1081, 1081, 1084, 1084, 1084, 1084, 1084, 1084,
     1084, 1084, 1085,    0, 1085, 1085, 1085, 1085, 1085, 1085,
        0,    0, 1085, 1093,    0, 1093, 1093, 1093, 1093, 1093,
     1093, 1093, 1093, 1097,    0, 1097, 1097, 1097, 1097, 1097,
     1097, 1097, 1097, 1101,    0, 1101, 1101, 1101, 1101, 1101,
     1101, 1101, 1101, 1101,    0,    0,    0,    0, 1101, 1101,
        0,    0,    0,    0,    0,    0,    0, 1101, 1101, 1101,
     1101, 1101, 1102, 1102, 1102, 1102, 1102, 1102, 1102, 1102,

     1108, 1108, 1108, 1108, 1108, 1108, 1108, 1108, 1108, 1108,
     1112,    0, 1112, 1112, 1112, 1112, 1112, 1112, 1112, 1112,
     1120,    0, 1120, 1120, 1120, 1120, 1120, 1120, 1124,    0,
     1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124,    0,
        0,    0,    0, 1124, 1124,    0,    0,    0,    0,    0,
        0,    0, 1124, 1124, 1124, 1124, 1124, 1127, 1127, 1127,
     1127, 1127, 1127, 1127, 1127, 1128,    0, 1128, 1128, 1128,
     1128, 1128, 1128,    0, 1158, 1128, 1158, 1158, 1158, 1158,
     1158, 1158, 1163,    0, 1163, 1163, 1163, 1163, 1163, 1163,
     1167,    0, 1167, 1167, 1167, 1167, 1167, 1167, 1167, 1167,

     1167,    0,    0,    0,    0, 1167, 1167,    0,    0,    0,
        0,    0,    0,    0, 1167, 1167, 1167, 1167, 1167, 1170,
     1170, 1170, 1170, 1170, 1170, 1170, 1170, 1171,    0, 1171,
     1171, 1171, 1171, 1171, 1171,    0, 1180, 1171, 1180, 1180,
     1180, 1180, 1180, 1180, 1184, 1184, 1184, 1184, 1184, 1184,
     1184, 1184, 1184, 1184, 1188,    0, 1188, 1188, 1188, 1188,
     1188, 1188, 1188, 1188, 1212,    0, 1212, 1212, 1212, 1212,
     1212, 1212, 1212, 1212, 1216,    0, 1216, 1216, 1216, 1216,
     1216, 1216, 1216, 1216, 1224, 1224, 1224, 1224, 1224, 1224,
     1224, 1224, 1224, 1224, 1234,    0, 1234, 1234, 1234, 1234,

     1234, 1234, 1251,    0, 1251, 1251, 1251, 1251, 1251, 1251,
     1256,    0, 1256, 1256, 1256, 1256, 1256, 1256, 1266,    0,
     1266, 1266, 1266, 1266, 1266, 1266, 1266, 1266, 1282,    0,
     1282, 1282, 1282, 1282, 1282, 1282, 1282, 1282, 1290,    0,
     1290, 1290, 1290, 1290, 1290, 1290, 1299,    0, 1299, 1299,
     1299, 1299, 1299, 1299, 1322, 1322, 1322, 1322, 1322, 1322,
     1322, 1322, 1324,    0, 1324, 1324, 1324, 1324, 1324, 1324,
     1325, 1325, 1325, 1326, 1326, 1326, 1328,    0, 1328, 1329,
        0, 1329, 1330, 1330, 1330, 1331, 1331, 1331, 1334,    0,
     1334, 1335,    0, 1335, 1335, 1336, 1336, 1336, 1337, 1337,

     1337, 1338, 1338, 1338, 1340,    0, 1340, 1341,    0, 1341,
     1342, 1342, 1342, 1343, 1343, 1343, 1344, 1344, 1344, 1346,
        0, 1346, 1347,    0, 1347, 1348, 1348, 1348, 1348, 1348,
     1350,    0, 1350, 1351, 1351, 1351, 1352, 1352, 1352, 1353,
     1353, 1353, 1353, 1353, 1354, 1354, 1354, 1355, 1355, 1355,
     1357,    0, 1357, 1358, 1358, 1358, 1359, 1359, 1359, 1360,
     1360, 1360, 1361, 1361, 1361, 1362, 1362, 1362, 1363, 1363,
     1363, 1364, 1364, 1364, 1365,    0, 1365, 1366,    0, 1366,
     1367,    0, 1367, 1368,    0, 1368, 1369, 1369, 1369, 1369,
     1369, 1370, 1370, 1370, 1371, 1371, 1371, 1372, 1372, 1372,

     1373, 1373, 1373, 1373, 1373, 1374, 1374, 1374, 1374, 1374,
     1375, 1375, 1375, 1376, 1376, 1376, 1377, 1377, 1377, 1379,
     1379, 1379, 1381,    0, 1381, 1382,    0, 1382, 1384,    0,
     1384, 1385,    0, 1385, 1386,    0, 1386, 1386, 1389, 1389,
     1389, 1390, 1390, 1390, 1391, 1391, 1391, 1392, 1392, 1392,
     1393, 1393, 1393, 1394,    0, 1394, 1395,    0, 1395, 1396,
        0, 1396, 1396, 1396, 1397, 1397, 1397, 1398, 1398, 1398,
     1399, 1399, 1399, 1400,    0, 1400, 1401,    0, 1401, 1402,
        0, 1402, 1403,    0, 1403, 1404, 1404, 1404, 1404, 1404,
     1405,    0, 1405, 1406,    0, 1406, 1407, 1407, 1407, 1408,

     1408, 1408, 1409, 1409, 1409, 1409, 1409, 1410, 1410, 1410,
     1410, 1410, 1411, 1411, 1411, 1411, 1411, 1412, 1412, 1412,
     1413, 1413, 1413, 1414, 1414, 1414, 1415,    0, 1415, 1415,
     1415, 1416, 1416, 1416, 1418,    0, 1418, 1419,    0, 1419,
     1421, 1421, 1421, 1422, 1422, 1422, 1423, 1423, 1423, 1425,
        0, 1425, 1426,    0, 1426, 1428,    0, 1428, 1429,    0,
     1429, 1431,    0, 1431, 1432,    0, 1432, 1433, 1433, 1433,
     1434, 1434, 1434, 1435, 1435, 1435, 1436, 1436, 1436, 1437,
     1437, 1437, 1438, 1438, 1438, 1439,    0, 1439, 1440,    0,
     1440, 1441,    0, 1441, 1442,    0, 1442, 1443,    0, 1443,

     1443, 1443, 1444, 1444, 1444, 1445, 1445, 1445, 1446, 1446,
     1446, 1447,    0, 1447, 1448,    0, 1448, 1449,    0, 1449,
     1450,    0, 1450, 1451, 1451, 1451, 1451, 1451, 1452,    0,
     1452, 1453,    0, 1453, 1454, 1454, 1454, 1455, 1455, 1455,
     1455, 1455, 1456, 1456, 1456, 1456, 1456, 1457, 1457, 1457,
     1457, 1457, 1458, 1458, 1458, 1458, 1458, 1459, 1459, 1459,
     1460, 1460, 1460, 1461, 1461, 1461, 1462,    0, 1462, 1462,
     1462, 1463, 1463, 1463, 1464,    0, 1464, 1464, 1464, 1465,
     1465, 1465, 1467,    0, 1467, 1468,    0, 1468, 1470,    0,
     1470, 1471,    0, 1471, 1473, 1473, 1473, 1474, 1474, 1474,

     1475, 1475, 1475, 1477,    0, 1477, 1478,    0, 1478, 1480,
        0, 1480, 1481,    0, 1481, 1483,    0, 1483, 1484,    0,
     1484, 1485, 1485, 1485, 1486, 1486, 1486,    0, 1486, 1487,
     1487, 1487, 1488,    0, 1488, 1489,    0, 1489, 1490,    0,
     1490, 1491,    0, 1491, 1492,    0, 1492, 1493, 1493, 1493,
     1494, 1494, 1494, 1495, 1495, 1495, 1496, 1496, 1496, 1497,
     1497, 1497, 1501,    0, 1501, 1502,    0, 1502, 1503,    0,
     1503, 1504,    0, 1504, 1505,    0, 1505, 1505, 1505, 1506,
     1506, 1506, 1507, 1507, 1507, 1508, 1508, 1508, 1509,    0,
     1509, 1510,    0, 1510, 1511,    0, 1511, 1512,    0, 1512,

     1513, 1513, 1513, 1513, 1513, 1514,    0, 1514, 1515,    0,
     1515, 1517, 1517, 1517, 1518, 1518, 1518, 1519, 1519, 1519,
        0, 1519, 1520, 1520, 1520, 1520, 1520, 1521, 1521, 1521,
        0, 1521, 1522, 1522, 1522, 1522, 1522, 1523, 1523, 1523,
        0, 1523, 1524, 1524, 1524, 1524, 1524, 1525, 1525, 1525,
        0, 1525, 1526, 1526, 1526, 1526, 1526, 1527, 1527, 1527,
        0, 1527, 1528, 1528, 1528, 1528, 1528, 1529, 1529, 1529,
        0, 1529, 1530, 1530, 1530, 1531, 1531, 1531, 1532, 1532,
     1532, 1533,    0, 1533, 1533, 1533, 1534, 1534, 1534, 1535,
        0, 1535, 1535, 1535, 1536, 1536, 1536, 1537,    0, 1537,

     1537, 1537, 1538, 1538, 1538, 1542,    0, 1542, 1543,    0,
     1543, 1545,    0, 1545, 1546,    0, 1546, 1548, 1548, 1548,
     1549, 1549, 1549, 1550, 1550, 1550, 1552,    0, 1552, 1553,
        0, 1553, 1555,    0, 1555, 1556,    0, 1556, 1557,    0,
     1557, 1559,    0, 1559, 1560,    0, 1560, 1561,    0, 1561,
     1562,    0, 1562, 1563,    0, 1563, 1563, 1563, 1564, 1564,
     1564,    0, 1564, 1565, 1565, 1565,    0, 1565, 1566, 1566,
     1566,    0, 1566, 1567, 1567, 1567,    0, 1567, 1568, 1568,
     1568,    0, 1568, 1569, 1569, 1569,    0, 1569, 1570, 1570,
     1570,    0, 1570, 1571, 1571, 1571, 1572, 1572, 1572, 1573,

     1573, 1573, 1574, 1574, 1574, 1575, 1575, 1575, 1576, 1576,
     1576, 1580,    0, 1580, 1581,    0, 1581, 1582,    0, 1582,
     1583,    0, 1583, 1584,    0, 1584, 1584, 1584, 1585, 1585,
     1585, 1586, 1586, 1586, 1587, 1587, 1587, 1588,    0, 1588,
     1589,    0, 1589, 1590,    0, 1590, 1591,    0, 1591, 1592,
     1592, 1592, 1592, 1592, 1593, 1593, 1593,    0, 1593, 1598,
        0, 1598, 1599,    0, 1599, 1600, 1600, 1600,    0, 1600,
     1601, 1601, 1601,    0, 1601, 1602, 1602, 1602,    0, 1602,
     1603, 1603, 1603,    0, 1603, 1604, 1604, 1604,    0, 1604,
     1605, 1605, 1605,    0, 1605, 1606, 1606, 1606,    0, 1606,

     1607, 1607, 1607, 1608, 1608, 1608, 1609,    0, 1609, 1609,
     1609, 1610, 1610, 1610, 1611,    0, 1611, 1611, 1611, 1612,
     1612, 1612, 1613,    0, 1613, 1613, 1613, 1614, 1614, 1614,
     1615,    0, 1615, 1615, 1615, 1616, 1616, 1616, 1620,    0,
     1620, 1621,    0, 1621, 1623,    0, 1623, 1624,    0, 1624,
     1626, 1626, 1626, 1627, 1627, 1627, 1628, 1628, 1628, 1630,
        0, 1630, 1631,    0, 1631, 1633,    0, 1633, 1634,    0,
     1634, 1635, 1635, 1635,    0, 1635, 1638,    0, 1638, 1639,
        0, 1639, 1640, 1640, 1640,    0, 1640, 1641, 1641, 1641,
     1642,    0, 1642, 1643, 1643, 1643, 1644,    0, 1644, 1645,

     1645, 1645, 1646,    0, 1646, 1647, 1647, 1647, 1648,    0,
     1648, 1649, 1649, 1649, 1650,    0, 1650, 1651, 1651, 1651,
     1652,    0, 1652, 1653, 1653, 1653, 1657,    0, 1657, 1658,
        0, 1658, 1659,    0, 1659, 1660,    0, 1660, 1661,    0,
     1661, 1661, 1661, 1662, 1662, 1662, 1663, 1663, 1663, 1664,
     1664, 1664, 1665,    0, 1665, 1666,    0, 1666, 1667, 1667,
     1667,    0, 1667, 1669,    0, 1669, 1670,    0, 1670, 1672,
     1672, 1672, 1673, 1673, 1673, 1674,    0, 1674, 1675,    0,
     1675, 1675, 1675, 1676,    0, 1676, 1677,    0, 1677, 1677,
     1677, 1678,    0, 1678, 1679,    0, 1679, 1679, 1679, 1680,

        0, 1680, 1681,    0, 1681, 1681, 1681, 1682,    0, 1682,
     1683,    0, 1683, 1683, 1683, 1684,    0, 1684, 1688,    0,
     1688, 1689,    0, 1689, 1691,    0, 1691, 1692,    0, 1692,
     1694,    0, 1694, 1695, 1695, 1695, 1696, 1696, 1696, 1697,
     1697, 1697, 1699,    0, 1699, 1700,    0, 1700, 1701, 1701,
     1701, 1702, 1702, 1702, 1703,    0, 1703, 1704,    0, 1704,
     1705,    0, 1705, 1705, 1705, 1706,    0, 1706, 1707,    0,
     1707, 1708,    0, 1708, 1709,    0, 1709, 1710,    0, 1710,
     1711,    0, 1711, 1712,    0, 1712, 1716,    0, 1716, 1717,
        0, 1717, 1718,    0, 1718, 1719,    0, 1719, 1720,    0,

     1720, 1720, 1720, 1721,    0, 1721, 1722, 1722, 1722, 1723,
     1723, 1723, 1724, 1724, 1724, 1726,    0, 1726, 1727,    0,
     1727, 1728,    0, 1728, 1729,    0, 1729, 1730,    0, 1730,
     1731,    0, 1731, 1732,    0, 1732, 1733,    0, 1733, 1736,
        0, 1736, 1738,    0, 1738, 1739,    0, 1739, 1740, 1740,
     1740, 1741,    0, 1741, 1742,    0, 1742, 1743,    0, 1743,
     1747,    0, 1747, 1748,    0, 1748, 1749,    0, 1749, 1751,
        0, 1751, 1754,    0, 1754, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "policy.l"
#define INITIAL 0
#line 2 "policy.l"

#include "policy_module.h"
#include "libxorp/xorp.h"

#include "policy/common/policy_utils.hh"
#include <vector>
#include <string>
#include <sstream>
#include "policy_parser.hh"
#include "yacc.yy_policy_parser.cc.h"

#define yylval yy_policy_parserlval
#define yyerror yy_policy_parsererror
#define yyparse yy_policy_parserparse

void yyerror(const char *m);
extern int yyparse(void);

using namespace policy_parser;

// instantiate the globals here.
vector<Node*>* policy_parser::_parser_nodes;
unsigned policy_parser::_parser_lineno;

// try not to pollute
namespace {
	string _last_error;
	Term::BLOCKS _block;
}

#define YY_NO_UNPUT 1
#define YY_NEVER_INTERACTIVE 1
#define STR 1

#line 2588 "lex.yy_policy_parser.cc"

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

#line 62 "policy.l"


#line 2742 "lex.yy_policy_parser.cc"

	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1322 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 7376 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 64 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINTRANGE;
		}  
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 68 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINT;
		}  
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 72 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_INT;
		}  
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 76 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 80 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 84 "policy.l"
BEGIN(STR);
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 86 "policy.l"
BEGIN(INITIAL);
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 88 "policy.l"
{ yylval.c_str = strdup(yytext); 
		  _parser_lineno += policy_utils::count_nl(yytext);
		  /* XXX: a string can be started with " but terminated with '
		   * and vice versa...
		   */ 
		  return YY_STR;
		}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 96 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4RANGE;
		}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 101 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4;
		}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 106 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4NET;
		}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 112 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6RANGE;
		}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 117 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6;
		}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 122 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6NET;
		}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 127 "policy.l"
{
		  // the colon is an alias for asignment in action and equality
		  // in the source / dest blocks.
		  if (_block == Term::ACTION)
		  	return YY_ASSIGN;
		  else
		  	return YY_EQ;
		}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 136 "policy.l"
return YY_LPAR;
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 137 "policy.l"
return YY_RPAR;
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 139 "policy.l"
return YY_EQ; 
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 140 "policy.l"
return YY_NE;
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 141 "policy.l"
return YY_LE;
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 142 "policy.l"
return YY_GE;
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 143 "policy.l"
return YY_LT;
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 144 "policy.l"
return YY_GT;
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 146 "policy.l"
return YY_AND;
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 147 "policy.l"
return YY_OR;
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 148 "policy.l"
return YY_XOR;
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 149 "policy.l"
return YY_NOT;
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 151 "policy.l"
return YY_ADD;
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 152 "policy.l"
return YY_ADD;
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 153 "policy.l"
return YY_SUB;
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 154 "policy.l"
return YY_MUL;
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 155 "policy.l"
return YY_ASSIGN;
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 157 "policy.l"
return YY_HEAD;
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 158 "policy.l"
return YY_CTR;
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 159 "policy.l"
return YY_NE_INT;
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 161 "policy.l"
return YY_ACCEPT;
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 162 "policy.l"
return YY_REJECT;
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 164 "policy.l"
return YY_SET;
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 165 "policy.l"
return YY_REGEX;
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 167 "policy.l"
return YY_PROTOCOL;
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 169 "policy.l"
{ yylval.c_str = strdup(yytext);
					  return YY_ID;
					}  
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 173 "policy.l"
return YY_SEMICOLON;
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 175 "policy.l"
/* eat blanks */
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 177 "policy.l"
_parser_lineno++;
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 179 "policy.l"
{ yyerror("Unknown character"); }
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 181 "policy.l"
ECHO;
	YY_BREAK
#line 3098 "lex.yy_policy_parser.cc"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(STR):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1322 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1322 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1321);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;


	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 181 "policy.l"


void yyerror(const char *m)
{
        ostringstream oss;
        oss << "Error on line " <<  _parser_lineno << " near (";

	for(int i = 0; i < yyleng; i++)
		oss << yytext[i];
	oss << "): " << m;

        _last_error = oss.str();
}

// Everything is put in the lexer because of YY_BUFFER_STATE...
int 
policy_parser::policy_parse(vector<Node*>& outnodes, const Term::BLOCKS& block, 
			    const string& conf, string& outerr)
{

        YY_BUFFER_STATE yybuffstate = yy_scan_string(conf.c_str());

        _last_error = "No error";
        _parser_nodes = &outnodes;
        _parser_lineno = 1;
	_block = block;

        int res = yyparse();
        
        yy_delete_buffer(yybuffstate);
        outerr = _last_error;
        
        return res;
}
