/*
 * Copyright (c) 2001-2005 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by 'tgt-gen'.
 *
 * $XORP: xorp/xrl/targets/mld6igmp.xrls,v 1.20 2005/06/01 00:37:01 pavlin Exp $
 */

/**
 *  Get name of Xrl Target
 */
finder://mld6igmp/common/0.1/get_target_name->name:txt

/**
 *  Get version string from Xrl Target
 */
finder://mld6igmp/common/0.1/get_version->version:txt

/**
 *  Get status of Xrl Target
 */
finder://mld6igmp/common/0.1/get_status->status:u32&reason:txt

/**
 *  Request clean shutdown of Xrl Target
 */
finder://mld6igmp/common/0.1/shutdown

/**
 *  Process a CLI command.
 *
 *  @param processor_name the processor name for this command.
 *
 *  @param cli_term_name the terminal name the command was entered from.
 *
 *  @param cli_session_id the CLI session ID the command was entered from.
 *
 *  @param command_name the command name to process.
 *
 *  @param command_args the command arguments to process.
 *
 *  @param ret_processor_name the processor name to return back to the CLI.
 *
 *  @param ret_cli_term_name the terminal name to return back.
 *
 *  @param ret_cli_session_id the CLI session ID to return back.
 *
 *  @param ret_command_output the command output to return back.
 */
finder://mld6igmp/cli_processor/0.1/process_command?processor_name:txt&cli_term_name:txt&cli_session_id:u32&command_name:txt&command_args:txt->ret_processor_name:txt&ret_cli_term_name:txt&ret_cli_session_id:u32&ret_command_output:txt

/**
 *  Announce target birth to observer.
 *
 *  @param target_class the target class name.
 *
 *  @param target_instance the target instance name.
 */
finder://mld6igmp/finder_event_observer/0.1/xrl_target_birth?target_class:txt&target_instance:txt

/**
 *  Announce target death to observer.
 *
 *  @param target_class the target class name.
 *
 *  @param target_instance the target instance name.
 */
finder://mld6igmp/finder_event_observer/0.1/xrl_target_death?target_class:txt&target_instance:txt

/**
 *  Add a new vif.
 *
 *  @param vif_name the name of the new vif.
 *
 *  @param vif_index the index of the new vif.
 */
finder://mld6igmp/mfea_client/0.1/new_vif?vif_name:txt&vif_index:u32

/**
 *  Delete an existing vif.
 *
 *  @param vif_name the name of the vif to delete.
 */
finder://mld6igmp/mfea_client/0.1/delete_vif?vif_name:txt

/**
 *  Add an address to a vif.
 *
 *  @param vif_name the name of the vif.
 *
 *  @param addr the unicast address to add.
 *
 *  @param subnet the subnet address to add.
 *
 *  @param broadcast the broadcast address (when applicable).
 *
 *  @param peer the peer address (when applicable).
 */
finder://mld6igmp/mfea_client/0.1/add_vif_addr4?vif_name:txt&addr:ipv4&subnet:ipv4net&broadcast:ipv4&peer:ipv4

finder://mld6igmp/mfea_client/0.1/add_vif_addr6?vif_name:txt&addr:ipv6&subnet:ipv6net&broadcast:ipv6&peer:ipv6

/**
 *  Delete an address from a vif.
 *
 *  @param vif_name the name of the vif.
 *
 *  @param addr the unicast address to delete.
 */
finder://mld6igmp/mfea_client/0.1/delete_vif_addr4?vif_name:txt&addr:ipv4

finder://mld6igmp/mfea_client/0.1/delete_vif_addr6?vif_name:txt&addr:ipv6

/**
 *  Set flags to a vif.
 *
 *  @param vif_name the name of the vif.
 *
 *  @param is_pim_register true if this is a PIM Register vif.
 *
 *  @param is_p2p true if this is a point-to-point vif.
 *
 *  @param is_loopback true if this is a loopback interface.
 *
 *  @param is_multicast true if the vif is multicast-capable.
 *
 *  @param is_broadcast true if the vif is broadcast-capable.
 *
 *  @param is_up true if the vif is UP and running.
 */
finder://mld6igmp/mfea_client/0.1/set_vif_flags?vif_name:txt&is_pim_register:bool&is_p2p:bool&is_loopback:bool&is_multicast:bool&is_broadcast:bool&is_up:bool

/**
 *  Complete all transactions with vif information.
 */
finder://mld6igmp/mfea_client/0.1/set_all_vifs_done

/**
 *  Test if the vif setup is completed.
 *
 *  @param is_completed if true the vif setup is completed.
 */
finder://mld6igmp/mfea_client/0.1/is_vif_setup_completed->is_completed:bool

/**
 *  Receive a protocol message from the MFEA.
 *
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *
 *  @param protocol_name the name of the protocol that sends a message.
 *
 *  @param protocol_id the ID of the protocol that sends a message (both sides
 *  must agree on the particular values).
 *
 *  @param vif_name the name of the vif the message was received on.
 *
 *  @param vif_index the index of the vif the message was received on.
 *
 *  @param source_address the address of the sender.
 *
 *  @param dest_address the destination address.
 *
 *  @param ip_ttl the TTL of the received IP packet. If it has a negative
 *  value, it should be ignored.
 *
 *  @param ip_tos the TOS of the received IP packet. If it has a negative
 *  value, it should be ignored.
 *
 *  @param is_router_alert if true, the IP Router Alert option in the IP packet
 *  was set (when applicable).
 *
 *  @param protocol_message the protocol message.
 */
finder://mld6igmp/mfea_client/0.1/recv_protocol_message4?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&vif_name:txt&vif_index:u32&source_address:ipv4&dest_address:ipv4&ip_ttl:i32&ip_tos:i32&is_router_alert:bool&protocol_message:binary

finder://mld6igmp/mfea_client/0.1/recv_protocol_message6?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&vif_name:txt&vif_index:u32&source_address:ipv6&dest_address:ipv6&ip_ttl:i32&ip_tos:i32&is_router_alert:bool&protocol_message:binary

/**
 *  Receive a kernel signal message from the MFEA.
 *
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *
 *  @param protocol_name the name of the protocol that sends a message.
 *
 *  @param protocol_id the ID of the protocol that sends a message (both sides
 *  must agree on the particular values).
 *
 *  @param message_type the type of the kernel signal message (TODO: integer
 *  for now: the particular types are well-known by both sides).
 *
 *  @param vif_name the name of the vif the message was received on.
 *
 *  @param vif_index the index of the vif the message was received on.
 *
 *  @param source_address the address of the sender.
 *
 *  @param dest_address the destination address.
 *
 *  @param protocol_message the protocol message.
 */
finder://mld6igmp/mfea_client/0.1/recv_kernel_signal_message4?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&message_type:u32&vif_name:txt&vif_index:u32&source_address:ipv4&dest_address:ipv4&protocol_message:binary

finder://mld6igmp/mfea_client/0.1/recv_kernel_signal_message6?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&message_type:u32&vif_name:txt&vif_index:u32&source_address:ipv6&dest_address:ipv6&protocol_message:binary

/**
 *  A signal that a dataflow-related pre-condition is true.
 *
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *
 *  @param source_address the source address of the dataflow.
 *
 *  @param group_address the group address of the dataflow.
 *
 *  @param threshold_interval_sec the number of seconds in the interval
 *  requested for measurement.
 *
 *  @param threshold_interval_usec the number of microseconds in the interval
 *  requested for measurement.
 *
 *  @param measured_interval_sec the number of seconds in the last measured
 *  interval that has triggered the signal.
 *
 *  @param measured_interval_usec the number of microseconds in the last
 *  measured interval that has triggered the signal.
 *
 *  @param threshold_packets the threshold value to trigger a signal (in number
 *  of packets).
 *
 *  @param threshold_bytes the threshold value to trigger a signal (in bytes).
 *
 *  @param measured_packets the number of packets measured within the measured
 *  interval.
 *
 *  @param measured_bytes the number of bytes measured within the measured
 *  interval.
 *
 *  @param is_threshold_in_packets if true, threshold_packets is valid.
 *
 *  @param is_threshold_in_bytes if true, threshold_bytes is valid.
 *
 *  @param is_geq_upcall if true, the operation for comparison is ">=".
 *
 *  @param is_leq_upcall if true, the operation for comparison is "<=".
 */
finder://mld6igmp/mfea_client/0.1/recv_dataflow_signal4?xrl_sender_name:txt&source_address:ipv4&group_address:ipv4&threshold_interval_sec:u32&threshold_interval_usec:u32&measured_interval_sec:u32&measured_interval_usec:u32&threshold_packets:u32&threshold_bytes:u32&measured_packets:u32&measured_bytes:u32&is_threshold_in_packets:bool&is_threshold_in_bytes:bool&is_geq_upcall:bool&is_leq_upcall:bool

finder://mld6igmp/mfea_client/0.1/recv_dataflow_signal6?xrl_sender_name:txt&source_address:ipv6&group_address:ipv6&threshold_interval_sec:u32&threshold_interval_usec:u32&measured_interval_sec:u32&measured_interval_usec:u32&threshold_packets:u32&threshold_bytes:u32&measured_packets:u32&measured_bytes:u32&is_threshold_in_packets:bool&is_threshold_in_bytes:bool&is_geq_upcall:bool&is_leq_upcall:bool

/**
 *  Enable/disable/start/stop a MLD6IGMP vif interface.
 *
 *  @param vif_name the name of the vif to enable/disable/start/stop.
 *
 *  @param enable if true, then enable the vif, otherwise disable it.
 */
finder://mld6igmp/mld6igmp/0.1/enable_vif?vif_name:txt&enable:bool

finder://mld6igmp/mld6igmp/0.1/start_vif?vif_name:txt

finder://mld6igmp/mld6igmp/0.1/stop_vif?vif_name:txt

/**
 *  Enable/disable/start/stop all MLD6IGMP vif interfaces.
 *
 *  @param enable if true, then enable the vifs, otherwise disable them.
 */
finder://mld6igmp/mld6igmp/0.1/enable_all_vifs?enable:bool

finder://mld6igmp/mld6igmp/0.1/start_all_vifs

finder://mld6igmp/mld6igmp/0.1/stop_all_vifs

/**
 *  Enable/disable/start/stop the MLD6IGMP protocol.
 *
 *  @param enable if true, then enable the MLD6IGMP protocol, otherwise disable
 *  it.
 */
finder://mld6igmp/mld6igmp/0.1/enable_mld6igmp?enable:bool

finder://mld6igmp/mld6igmp/0.1/start_mld6igmp

finder://mld6igmp/mld6igmp/0.1/stop_mld6igmp

/**
 *  Enable/disable/start/stop the MLD6IGMP CLI access.
 *
 *  @param enable if true, then enable the MLD6IGMP CLI access, otherwise
 *  disable it.
 */
finder://mld6igmp/mld6igmp/0.1/enable_cli?enable:bool

finder://mld6igmp/mld6igmp/0.1/start_cli

finder://mld6igmp/mld6igmp/0.1/stop_cli

/**
 *  Get the configured protocol version per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param proto_version the protocol version.
 */
finder://mld6igmp/mld6igmp/0.1/get_vif_proto_version?vif_name:txt->proto_version:u32

/**
 *  Set the protocol version per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param proto_version the protocol version.
 */
finder://mld6igmp/mld6igmp/0.1/set_vif_proto_version?vif_name:txt&proto_version:u32

/**
 *  Reset the protocol version per interface to its default value.
 *
 *  @param vif_name the name of the vif to apply to.
 */
finder://mld6igmp/mld6igmp/0.1/reset_vif_proto_version?vif_name:txt

/**
 *  Get the IP Router Alert option check per interface for received packets.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param enabled if true, then the IP Router Alert option check was enabled,
 *  otherwise it was disabled.
 */
finder://mld6igmp/mld6igmp/0.1/get_vif_ip_router_alert_option_check?vif_name:txt->enabled:bool

/**
 *  Set the IP Router Alert option check per interface for received packets.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param enable if true, then enable the IP Router Alert option check,
 *  otherwise disable it.
 */
finder://mld6igmp/mld6igmp/0.1/set_vif_ip_router_alert_option_check?vif_name:txt&enable:bool

/**
 *  Reset the IP Router Alert option check for received packets per per
 *  interface to its default value.
 *
 *  @param vif_name the name of the vif to apply to.
 */
finder://mld6igmp/mld6igmp/0.1/reset_vif_ip_router_alert_option_check?vif_name:txt

/**
 *  Get the Query Interval per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param interval_sec the number of seconds in the interval.
 *
 *  @param interval_usec the number of microseconds (in addition to
 *  interval_sec) in the interval.
 */
finder://mld6igmp/mld6igmp/0.1/get_vif_query_interval?vif_name:txt->interval_sec:u32&interval_usec:u32

/**
 *  Set the Query Interval per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param interval_sec the number of seconds in the interval.
 *
 *  @param interval_usec the number of microseconds (in addition to
 *  interval_sec) in the interval.
 */
finder://mld6igmp/mld6igmp/0.1/set_vif_query_interval?vif_name:txt&interval_sec:u32&interval_usec:u32

/**
 *  Reset the Query Interval per interface to its default value.
 *
 *  @param vif_name the name of the vif to apply to.
 */
finder://mld6igmp/mld6igmp/0.1/reset_vif_query_interval?vif_name:txt

/**
 *  Get the Last Member Query Interval per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param interval_sec the number of seconds in the interval.
 *
 *  @param interval_usec the number of microseconds (in addition to
 *  interval_sec) in the interval.
 */
finder://mld6igmp/mld6igmp/0.1/get_vif_query_last_member_interval?vif_name:txt->interval_sec:u32&interval_usec:u32

/**
 *  Set the Last Member Query Interval per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param interval_sec the number of seconds in the interval.
 *
 *  @param interval_usec the number of microseconds (in addition to
 *  interval_sec) in the interval.
 */
finder://mld6igmp/mld6igmp/0.1/set_vif_query_last_member_interval?vif_name:txt&interval_sec:u32&interval_usec:u32

/**
 *  Reset the Last Member Query Interval per interface to its default value.
 *
 *  @param vif_name the name of the vif to apply to.
 */
finder://mld6igmp/mld6igmp/0.1/reset_vif_query_last_member_interval?vif_name:txt

/**
 *  Get the Query Response Interval per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param interval_sec the number of seconds in the interval.
 *
 *  @param interval_usec the number of microseconds (in addition to
 *  interval_sec) in the interval.
 */
finder://mld6igmp/mld6igmp/0.1/get_vif_query_response_interval?vif_name:txt->interval_sec:u32&interval_usec:u32

/**
 *  Set the Query Response Interval per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param interval_sec the number of seconds in the interval.
 *
 *  @param interval_usec the number of microseconds (in addition to
 *  interval_sec) in the interval.
 */
finder://mld6igmp/mld6igmp/0.1/set_vif_query_response_interval?vif_name:txt&interval_sec:u32&interval_usec:u32

/**
 *  Reset the Query Response Interval per interface to its default value.
 *
 *  @param vif_name the name of the vif to apply to.
 */
finder://mld6igmp/mld6igmp/0.1/reset_vif_query_response_interval?vif_name:txt

/**
 *  Get the Robustness Variable count per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param robust_count the count value.
 */
finder://mld6igmp/mld6igmp/0.1/get_vif_robust_count?vif_name:txt->robust_count:u32

/**
 *  Set the Robustness Variable count per interface.
 *
 *  @param vif_name the name of the vif to apply to.
 *
 *  @param robust_count the count value.
 */
finder://mld6igmp/mld6igmp/0.1/set_vif_robust_count?vif_name:txt&robust_count:u32

/**
 *  Reset the Robustness Variable count per interface to its default value.
 *
 *  @param vif_name the name of the vif to apply to.
 */
finder://mld6igmp/mld6igmp/0.1/reset_vif_robust_count?vif_name:txt

/**
 *  Enable/disable the MLD6IGMP trace log for all operations.
 *
 *  @param enable if true, then enable the trace log, otherwise disable it.
 */
finder://mld6igmp/mld6igmp/0.1/log_trace_all?enable:bool

/**
 *  Add/delete a client protocol in the MLD/IGMP protocol.
 *
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *
 *  @param protocol_name the name of the protocol to add/delete.
 *
 *  @param protocol_id the ID of the protocol to add/delete (both sides must
 *  agree on the particular values).
 *
 *  @param vif_name the name of the vif the protocol add/delete to apply to.
 *
 *  @param vif_index the index of the vif the protocol add/delete to apply to.
 *  The added protocol will receive Join/Leave membership information about
 *  same-LAN members for the particular vif.
 */
finder://mld6igmp/mld6igmp/0.1/add_protocol4?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&vif_name:txt&vif_index:u32

finder://mld6igmp/mld6igmp/0.1/add_protocol6?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&vif_name:txt&vif_index:u32

finder://mld6igmp/mld6igmp/0.1/delete_protocol4?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&vif_name:txt&vif_index:u32

finder://mld6igmp/mld6igmp/0.1/delete_protocol6?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&vif_name:txt&vif_index:u32

