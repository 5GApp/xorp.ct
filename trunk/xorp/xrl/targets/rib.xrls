/*
 * Copyright (c) 2001-2003 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by 'tgt-gen'.
 *
 * $XORP: xorp/xrl/targets/rib.xrls,v 1.15 2004/02/06 22:43:27 pavlin Exp $
 */

/**
 *  Enable/disable/start/stop RIB.
 */
finder://rib/rib/0.1/enable_rib

finder://rib/rib/0.1/disable_rib

finder://rib/rib/0.1/start_rib

finder://rib/rib/0.1/stop_rib

/**
 *  Add/delete/enable/disable a RIB client. Add/delete/enable/disable a RIB
 *  client for a given target name, address family, and unicast/multicast
 *  flags.
 *
 *  @param target_name the target name of the RIB client.
 *
 *  @param unicast true if a client for the unicast RIB.
 *
 *  @param multicast true if a client for the multicast RIB.
 */
finder://rib/rib/0.1/add_rib_client4?target_name:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/add_rib_client6?target_name:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/delete_rib_client4?target_name:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/delete_rib_client6?target_name:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/enable_rib_client4?target_name:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/enable_rib_client6?target_name:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/disable_rib_client4?target_name:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/disable_rib_client6?target_name:txt&unicast:bool&multicast:bool

/**
 *  Don't send anything to the FEA - used for testing only
 */
finder://rib/rib/0.1/no_fea

/**
 *  Make errors fatal; used to detect errors we'd normally mask
 */
finder://rib/rib/0.1/make_errors_fatal

/**
 *  Add/delete an IGP or EGP table.
 *
 *  @param protocol the name of the protocol.
 *
 *  @param target_class the target class of the protocol.
 *
 *  @param target_instance the target instance of the protocol.
 *
 *  @param unicast true if the table is for the unicast RIB.
 *
 *  @param multicast true if the table is for the multicast RIB.
 */
finder://rib/rib/0.1/add_igp_table4?protocol:txt&target_class:txt&target_instance:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/add_igp_table6?protocol:txt&target_class:txt&target_instance:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/delete_igp_table4?protocol:txt&target_class:txt&target_instance:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/delete_igp_table6?protocol:txt&target_class:txt&target_instance:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/add_egp_table4?protocol:txt&target_class:txt&target_instance:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/add_egp_table6?protocol:txt&target_class:txt&target_instance:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/delete_egp_table4?protocol:txt&target_class:txt&target_instance:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/delete_egp_table6?protocol:txt&target_class:txt&target_instance:txt&unicast:bool&multicast:bool

/**
 *  Add/replace/delete a route.
 *
 *  @param protocol the name of the protocol this route comes from.
 *
 *  @param unicast true if the route is for the unicast RIB.
 *
 *  @param multicast true if the route is for the multicast RIB.
 *
 *  @param network the network address prefix of the route.
 *
 *  @param nexthop the address of the next-hop router toward the destination.
 *
 *  @param metric the routing metric.
 */
finder://rib/rib/0.1/add_route4?protocol:txt&unicast:bool&multicast:bool&network:ipv4net&nexthop:ipv4&metric:u32

finder://rib/rib/0.1/add_route6?protocol:txt&unicast:bool&multicast:bool&network:ipv6net&nexthop:ipv6&metric:u32

finder://rib/rib/0.1/replace_route4?protocol:txt&unicast:bool&multicast:bool&network:ipv4net&nexthop:ipv4&metric:u32

finder://rib/rib/0.1/replace_route6?protocol:txt&unicast:bool&multicast:bool&network:ipv6net&nexthop:ipv6&metric:u32

finder://rib/rib/0.1/delete_route4?protocol:txt&unicast:bool&multicast:bool&network:ipv4net

finder://rib/rib/0.1/delete_route6?protocol:txt&unicast:bool&multicast:bool&network:ipv6net

/**
 *  Add/replace a route by explicitly specifying the network interface toward
 *  the destination.
 *
 *  @param protocol the name of the protocol this route comes from.
 *
 *  @param unicast true if the route is for the unicast RIB.
 *
 *  @param multicast true if the route is for the multicast RIB.
 *
 *  @param network the network address prefix of the route.
 *
 *  @param nexthop the address of the next-hop router toward the destination.
 *
 *  @param ifname of the name of the physical interface toward the destination.
 *
 *  @param vifname of the name of the virtual interface toward the destination.
 *
 *  @param metric the routing metric.
 */
finder://rib/rib/0.1/add_interface_route4?protocol:txt&unicast:bool&multicast:bool&network:ipv4net&nexthop:ipv4&ifname:txt&vifname:txt&metric:u32

finder://rib/rib/0.1/add_interface_route6?protocol:txt&unicast:bool&multicast:bool&network:ipv6net&nexthop:ipv6&ifname:txt&vifname:txt&metric:u32

finder://rib/rib/0.1/replace_interface_route4?protocol:txt&unicast:bool&multicast:bool&network:ipv4net&nexthop:ipv4&ifname:txt&vifname:txt&metric:u32

finder://rib/rib/0.1/replace_interface_route6?protocol:txt&unicast:bool&multicast:bool&network:ipv6net&nexthop:ipv6&ifname:txt&vifname:txt&metric:u32

/**
 *  Lookup nexthop.
 *
 *  @param addr address to lookup.
 *
 *  @param unicast look in unicast RIB.
 *
 *  @param multicast look in multicast RIB.
 *
 *  @param nexthop contains the resolved nexthop if successful, IPv4::ZERO
 *  otherwise. It is an error for the unicast and multicast fields to both be
 *  true or both false.
 */
finder://rib/rib/0.1/lookup_route4?addr:ipv4&unicast:bool&multicast:bool->nexthop:ipv4

/**
 *  Lookup nexthop.
 *
 *  @param addr address to lookup.
 *
 *  @param unicast look in unicast RIB.
 *
 *  @param multicast look in multicast RIB.
 *
 *  @param nexthop contains the resolved nexthop if successful, IPv6::ZERO
 *  otherwise. It is an error for the unicast and multicast fields to both be
 *  true or both false.
 */
finder://rib/rib/0.1/lookup_route6?addr:ipv6&unicast:bool&multicast:bool->nexthop:ipv6

finder://rib/rib/0.1/new_vif?name:txt

finder://rib/rib/0.1/add_vif_addr4?name:txt&addr:ipv4&subnet:ipv4net

finder://rib/rib/0.1/add_vif_addr6?name:txt&addr:ipv6&subnet:ipv6net

finder://rib/rib/0.1/redist_enable4?from:txt&to:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/redist_enable6?from:txt&to:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/redist_disable4?from:txt&to:txt&unicast:bool&multicast:bool

finder://rib/rib/0.1/redist_disable6?from:txt&to:txt&unicast:bool&multicast:bool

/**
 *  Register an interest in a route
 *
 *  @param target the name of the XRL module to notify when the information
 *  returned by this call becomes invalid.
 *
 *  @param addr address of interest
 *
 *  @param resolves returns whether or not the address resolves to a route that
 *  can be used for forwarding.
 *
 *  @param base_addr returns the address of interest (actually the base address
 *  of the subnet covered by addr/prefix_len).
 *
 *  @param prefix_len returns the prefix length that the registration covers.
 *  This response applies to all addresses in addr/prefix_len.
 *
 *  @param real_prefix_len returns the actual prefix length of the route that
 *  will be used to route addr. If real_prefix_len is not the same as
 *  prefix_len, this is because there are some more specific routes that
 *  overlap addr/real_prefix_len. real_prefix_len is primarily given for
 *  debugging reasons.
 *
 *  @param nexthop returns the address of the next hop for packets sent to addr
 *
 *  @param metric returns the IGP metric for this route
 */
finder://rib/rib/0.1/register_interest4?target:txt&addr:ipv4->resolves:bool&base_addr:ipv4&prefix_len:u32&real_prefix_len:u32&nexthop:ipv4&metric:u32

/**
 *  De-register an interest in a route
 *
 *  @param target the name of the XRL module that registered the interest
 *
 *  @param addr the address of the previous registered interest. addr should be
 *  the base address of the add/prefix_len subnet.
 *
 *  @param prefix_len the prefix length of the registered interest, as given in
 *  the response from register_interest.
 */
finder://rib/rib/0.1/deregister_interest4?target:txt&addr:ipv4&prefix_len:u32

/**
 *  Register an interest in a route
 *
 *  @param target the name of the XRL module to notify when the information
 *  returned by this call becomes invalid.
 *
 *  @param addr address of interest
 *
 *  @param resolves returns whether or not the address resolves to a route that
 *  can be used for forwarding.
 *
 *  @param base_addr returns the address of interest (actually the base address
 *  of the subnet covered by addr/prefix_len).
 *
 *  @param prefix_len returns the prefix length that the registration covers.
 *  This response applies to all addresses in addr/prefix_len.
 *
 *  @param real_prefix_len returns the actual prefix length of the route that
 *  will be used to route addr. If real_prefix_len is not the same as
 *  prefix_len, this is because there are some more specific routes that
 *  overlap addr/real_prefix_len. real_prefix_len is primarily given for
 *  debugging reasons.
 *
 *  @param nexthop returns the address of the next hop for packets sent to addr
 *
 *  @param metric returns the IGP metric for this route
 */
finder://rib/rib/0.1/register_interest6?target:txt&addr:ipv6->resolves:bool&base_addr:ipv6&prefix_len:u32&real_prefix_len:u32&nexthop:ipv6&metric:u32

/**
 *  De-register an interest in a route
 *
 *  @param target the name of the XRL module that registered the interest
 *
 *  @param addr the address of the previous registered interest. addr should be
 *  the base address of the add/prefix_len subnet.
 *
 *  @param prefix_len the prefix length of the registered interest, as given in
 *  the response from register_interest.
 */
finder://rib/rib/0.1/deregister_interest6?target:txt&addr:ipv6&prefix_len:u32

finder://rib/fea_ifmgr_client/0.1/interface_update?ifname:txt&event:u32

finder://rib/fea_ifmgr_client/0.1/vif_update?ifname:txt&vifname:txt&event:u32

finder://rib/fea_ifmgr_client/0.1/vifaddr4_update?ifname:txt&vifname:txt&addr:ipv4&event:u32

finder://rib/fea_ifmgr_client/0.1/vifaddr6_update?ifname:txt&vifname:txt&addr:ipv6&event:u32

/**
 *  Announce target birth.
 */
finder://rib/finder_event_observer/0.1/xrl_target_birth?target_class:txt&target_instance:txt

/**
 *  Announce target death.
 */
finder://rib/finder_event_observer/0.1/xrl_target_death?target_class:txt&target_instance:txt

/**
 *  Get name of Xrl Target
 */
finder://rib/common/0.1/get_target_name->name:txt

/**
 *  Get version string from Xrl Target
 */
finder://rib/common/0.1/get_version->version:txt

/**
 *  Get status of Xrl Target
 */
finder://rib/common/0.1/get_status->status:u32&reason:txt

/**
 *  Request clean shutdown of Xrl Target
 */
finder://rib/common/0.1/shutdown

