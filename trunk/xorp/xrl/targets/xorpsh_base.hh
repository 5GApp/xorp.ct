/*
 * Copyright (c) 2001-2003 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by 'tgt-gen'.
 *
 * $XORP: xorp/xrl/targets/xorpsh_base.hh,v 1.7 2003/05/07 23:15:24 mjh Exp $
 */


#ifndef __XRL_INTERFACES_XORPSH_BASE_HH__
#define __XRL_INTERFACES_XORPSH_BASE_HH__

#undef XORP_LIBRARY_NAME
#define XORP_LIBRARY_NAME "XrlXorpshTarget"

#include "libxorp/xlog.h"
#include "libxipc/xrl_cmd_map.hh"

class XrlXorpshTargetBase {
protected:
    XrlCmdMap* _cmds;
    
public:
    XrlXorpshTargetBase(XrlCmdMap* cmds) : _cmds(cmds) { add_handlers(); }
    virtual ~XrlXorpshTargetBase() { remove_handlers(); }

    inline const string& name() const { return _cmds->name(); }
    inline const char* version() const { return "xorpsh/0.0"; }

protected:

    /**
     *  Pure-virtual function that needs to be implemented to:
     *  
     *  Get name of Xrl Target
     */
    virtual XrlCmdError common_0_1_get_target_name(
	// Output values, 
	string&	name) = 0;

    /**
     *  Pure-virtual function that needs to be implemented to:
     *  
     *  Get version string from Xrl Target
     */
    virtual XrlCmdError common_0_1_get_version(
	// Output values, 
	string&	version) = 0;

    /**
     *  Pure-virtual function that needs to be implemented to:
     *  
     *  Get status of Xrl Target
     */
    virtual XrlCmdError common_0_1_get_status(
	// Output values, 
	uint32_t&	status, 
	string&	reason) = 0;

    virtual XrlCmdError rtrmgr_client_0_1_new_config_user(
	// Input values, 
	const uint32_t&	userid) = 0;

    virtual XrlCmdError rtrmgr_client_0_1_config_change_done(
	// Input values, 
	const bool&	success, 
	const string&	errmsg) = 0;

    virtual XrlCmdError rtrmgr_client_0_1_config_changed(
	// Input values, 
	const uint32_t&	userid, 
	const string&	deltas, 
	const string&	deletions) = 0;

private:
    const XrlCmdError handle_common_0_1_get_target_name(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_common_0_1_get_version(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_common_0_1_get_status(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_rtrmgr_client_0_1_new_config_user(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_rtrmgr_client_0_1_config_change_done(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_rtrmgr_client_0_1_config_changed(const Xrl& x, XrlArgs* a);

    void add_handlers()
    {
	if (_cmds->add_handler("common/0.1/get_target_name", 
	    callback(this, &XrlXorpshTargetBase::handle_common_0_1_get_target_name)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://xorpsh/common/0.1/get_target_name");
	}
	if (_cmds->add_handler("common/0.1/get_version", 
	    callback(this, &XrlXorpshTargetBase::handle_common_0_1_get_version)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://xorpsh/common/0.1/get_version");
	}
	if (_cmds->add_handler("common/0.1/get_status", 
	    callback(this, &XrlXorpshTargetBase::handle_common_0_1_get_status)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://xorpsh/common/0.1/get_status");
	}
	if (_cmds->add_handler("rtrmgr_client/0.1/new_config_user", 
	    callback(this, &XrlXorpshTargetBase::handle_rtrmgr_client_0_1_new_config_user)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://xorpsh/rtrmgr_client/0.1/new_config_user");
	}
	if (_cmds->add_handler("rtrmgr_client/0.1/config_change_done", 
	    callback(this, &XrlXorpshTargetBase::handle_rtrmgr_client_0_1_config_change_done)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://xorpsh/rtrmgr_client/0.1/config_change_done");
	}
	if (_cmds->add_handler("rtrmgr_client/0.1/config_changed", 
	    callback(this, &XrlXorpshTargetBase::handle_rtrmgr_client_0_1_config_changed)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://xorpsh/rtrmgr_client/0.1/config_changed");
	}
	_cmds->finalize();
    }

    void remove_handlers()
    {
	_cmds->remove_handler("common/0.1/get_target_name");
	_cmds->remove_handler("common/0.1/get_version");
	_cmds->remove_handler("common/0.1/get_status");
	_cmds->remove_handler("rtrmgr_client/0.1/new_config_user");
	_cmds->remove_handler("rtrmgr_client/0.1/config_change_done");
	_cmds->remove_handler("rtrmgr_client/0.1/config_changed");
    }
};

#endif /* __XRL_INTERFACES_XORPSH_BASE_HH__ */
