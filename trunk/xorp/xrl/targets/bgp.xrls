/*
 * Copyright (c) 2002 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by '../scripts/tgt-gen'.
 *
 * $XORP$
 */

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get name of Xrl Target
 */
finder://bgp/common/0.1/get_target_name->name:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get version string from Xrl Target
 */
finder://bgp/common/0.1/get_version->version:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the BGP version currently running.
 */
finder://bgp/bgp/0.2/get_bgp_version->version:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get local config
 *  
 *  @param id our BGP ID.
 */
finder://bgp/bgp/0.2/local_config?as:u32&id:ipv4

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Set the local AS number.
 *  
 *  @param as our AS number.
 */
finder://bgp/bgp/0.2/set_local_as?as:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the local AS number.
 */
finder://bgp/bgp/0.2/get_local_as->as:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Set the BGP id.
 *  
 *  @param id our BGP ID.
 */
finder://bgp/bgp/0.2/set_bgpid?id:ipv4

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the BGP id.
 */
finder://bgp/bgp/0.2/get_bgpid->id:ipv4

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Add peer.
 *  
 *  @param as the peer's AS number.
 *  
 *  @param next_hop the local next hop.
 *  
 *  @param holdtime expects traffic in this time interval.
 */
finder://bgp/bgp/0.2/add_peer?local_ip:txt&local_port:u32&peer_ip:txt&peer_port:u32&as:u32&next_hop:ipv4&holdtime:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Delete peer.
 *  
 *  @param as the peer's AS number.
 */
finder://bgp/bgp/0.2/delete_peer?local_ip:txt&local_port:u32&peer_ip:txt&peer_port:u32&as:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Enable this peer.
 */
finder://bgp/bgp/0.2/enable_peer?local_ip:txt&local_port:u32&peer_ip:txt&peer_port:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Disable this peer.
 */
finder://bgp/bgp/0.2/disable_peer?local_ip:txt&local_port:u32&peer_ip:txt&peer_port:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Set next hop rewrite filter.
 */
finder://bgp/bgp/0.2/next_hop_rewrite_filter?local_ip:txt&local_port:u32&peer_ip:txt&peer_port:u32&next_hop:ipv4

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Set the peer state enabled or disabled.
 *  
 *  @param toggle enabled or disabled.
 */
finder://bgp/bgp/0.2/set_peer_state?local_ip:txt&local_port:u32&peer_ip:txt&peer_port:u32&toggle:bool

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the first item of a list of BGP peers See RFC 1657 (BGP MIB) for full
 *  definitions of return values.
 *  
 *  @param token returned token to be provided when calling get_peer_list_next.
 *  
 *  @param more returned to indicate whether there are more list items
 *  remaining.
 */
finder://bgp/bgp/0.2/get_peer_list_start->token:u32&more:bool

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the next item of a list of BGP peers
 *  
 *  @param token token from prior call to get_peer_list
 *  
 *  @param more returned to indicate whether there are more list items
 *  remaining.
 */
finder://bgp/bgp/0.2/get_peer_list_next?token:u32->local_ip:ipv4&local_port:u32&peer_ip:ipv4&peer_port:u32&more:bool

finder://bgp/bgp/0.2/get_peer_id?local_ip:ipv4&local_port:u32&peer_ip:ipv4&peer_port:u32->peer_id:ipv4

finder://bgp/bgp/0.2/get_peer_status?local_ip:ipv4&local_port:u32&peer_ip:ipv4&peer_port:u32->peer_state:u32&admin_status:u32

finder://bgp/bgp/0.2/get_peer_negotiated_version?local_ip:ipv4&local_port:u32&peer_ip:ipv4&peer_port:u32->neg_version:i32

finder://bgp/bgp/0.2/get_peer_as?local_ip:ipv4&local_port:u32&peer_ip:ipv4&peer_port:u32->peer_as:u32

finder://bgp/bgp/0.2/get_peer_msg_stats?local_ip:ipv4&local_port:u32&peer_ip:ipv4&peer_port:u32->in_updates:u32&out_updates:u32&in_msgs:u32&out_msgs:u32&last_error:u32&in_update_elapsed:u32

finder://bgp/bgp/0.2/get_peer_established_stats?local_ip:ipv4&local_port:u32&peer_ip:ipv4&peer_port:u32->transitions:u32&established_time:u32

finder://bgp/bgp/0.2/get_peer_timer_config?local_ip:ipv4&local_port:u32&peer_ip:ipv4&peer_port:u32->retry_interval:u32&hold_time:u32&keep_alive:u32&hold_time_conf:u32&keep_alive_conf:u32&min_as_orginiation_interval:u32&min_route_adv_interval:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Register rib.
 *  
 *  @param name rib name.
 */
finder://bgp/bgp/0.2/register_rib?name:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  add route
 *  
 *  @param origin the origin of the path information.
 *  
 *  @param next_hop the border router that should be used as a detination for
 *  the nlri.
 *  
 *  @param nlri network level reachability information.
 */
finder://bgp/bgp/0.2/add_route?origin:i32&asnum:i32&next_hop:ipv4&nlri:ipv4net

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  delete route
 *  
 *  @param nlri network level reachability information.
 */
finder://bgp/bgp/0.2/delete_route?nlri:ipv4net

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the first item of a list of BGP routes See RFC 1657 (BGP MIB) for full
 *  definitions of return values.
 *  
 *  @param token returned token to be provided when calling
 *  get_route_list_next.
 */
finder://bgp/bgp/0.2/get_v4_route_list_start->token:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the first item of a list of BGP routes See RFC 1657 (BGP MIB) for full
 *  definitions of return values.
 *  
 *  @param token returned token to be provided when calling
 *  get_route_list_next.
 */
finder://bgp/bgp/0.2/get_v6_route_list_start->token:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the next route in the list See RFC 1657 (BGP MIB) for full definitions
 *  of return values.
 */
finder://bgp/bgp/0.2/get_v4_route_list_next?token:u32->peer_id:ipv4&net:ipv4net&best_and_origin:u32&aspath:binary&nexthop:ipv4&med:i32&localpref:i32&atomic_agg:i32&aggregator:binary&calc_localpref:i32&attr_unknown:binary

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get the next route in the list See RFC 1657 (BGP MIB) for full definitions
 *  of return values.
 */
finder://bgp/bgp/0.2/get_v6_route_list_next?token:u32->peer_id:ipv4&net:ipv6net&best_and_origin:u32&aspath:binary&nexthop:ipv6&med:i32&localpref:i32&atomic_agg:i32&aggregator:binary&calc_localpref:i32&attr_unknown:binary

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Terminate bgp process
 */
finder://bgp/bgp/0.2/terminate

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Set which parameters we support per peer
 */
finder://bgp/bgp/0.2/set_parameter?local_ip:txt&local_port:u32&peer_ip:txt&peer_port:u32&parameter:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Route Info Changed route_info_changed is called by the RIB on the RIB
 *  client (typically a routing protocol) that had registered an interest in
 *  the routing of an address. This can be because the metric and/or nexthop
 *  changed.
 *  
 *  @param addr base address of the subnet that was registered
 *  
 *  @param prefix_len prefix length of the subnet that was registered
 */
finder://bgp/rib_client/0.1/route_info_changed4?addr:ipv4&prefix_len:u32&nexthop:ipv4&metric:u32

finder://bgp/rib_client/0.1/route_info_changed6?addr:ipv6&prefix_len:u32&nexthop:ipv6&metric:u32

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Route Info Invalid route_info_invalid is called by the RIB on the RIB
 *  client (typically a routing protocol) that had registere d an interest in
 *  the routing of an address. This can be because the information previously
 *  reported as applying no longer applies for any number of reasons. When the
 *  RIB sends this message, it has automatically de-registered interest in the
 *  route, and the client will normally need to send a register_interest
 *  request again.
 */
finder://bgp/rib_client/0.1/route_info_invalid4?addr:ipv4&prefix_len:u32

finder://bgp/rib_client/0.1/route_info_invalid6?addr:ipv6&prefix_len:u32

