/*
 * Copyright (c) 2002 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by '../scripts/tgt-gen'.
 *
 * $XORP: xorp/xrl/targets/pim.xrls,v 1.4 2003/01/13 20:40:24 pavlin Exp $
 */

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get name of Xrl Target
 */
finder://pim/common/0.1/get_target_name->name:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Get version string from Xrl Target
 */
finder://pim/common/0.1/get_version->version:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Process a CLI command.
 *  
 *  @param processor_name the processor name for this command.
 *  
 *  @param cli_term_name the terminal name the command was entered from.
 *  
 *  @param cli_session_id the CLI session ID the command was entered from.
 *  
 *  @param command_name the command name to process.
 *  
 *  @param command_args the command arguments to process.
 *  
 *  @param ret_processor_name the processor name to return back to the CLI.
 *  
 *  @param ret_cli_term_name the terminal name to return back.
 *  
 *  @param ret_cli_session_id the CLI session ID to return back.
 *  
 *  @param ret_command_output the command output to return back.
 */
finder://pim/cli_processor/0.1/process_command?processor_name:txt&cli_term_name:txt&cli_session_id:u32&command_name:txt&command_args:txt->ret_processor_name:txt&ret_cli_term_name:txt&ret_cli_session_id:u32&ret_command_output:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Add a new vif.
 *  
 *  @param vif_name the name of the new vif.
 *  
 *  @param vif_index the index of the new vif.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/new_vif?vif_name:txt&vif_index:u32->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Delete an existing vif.
 *  
 *  @param vif_name the name of the vif to delete.
 *  
 *  @param vif_index the index of the vif to delete.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/delete_vif?vif_name:txt&vif_index:u32->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Add an address to a vif.
 *  
 *  @param vif_name the name of the vif.
 *  
 *  @param vif_index the index of the vif.
 *  
 *  @param addr the unicast address to add.
 *  
 *  @param subnet the subnet address to add.
 *  
 *  @param broadcast the broadcast address (when applicable).
 *  
 *  @param peer the peer address (when applicable).
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/add_vif_addr4?vif_name:txt&vif_index:u32&addr:ipv4&subnet:ipv4net&broadcast:ipv4&peer:ipv4->fail:bool&reason:txt

finder://pim/mfea_client/0.1/add_vif_addr6?vif_name:txt&vif_index:u32&addr:ipv6&subnet:ipv6net&broadcast:ipv6&peer:ipv6->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Delete an address from a vif.
 *  
 *  @param vif_name the name of the vif.
 *  
 *  @param vif_index the index of the vif.
 *  
 *  @param addr the unicast address to delete.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/delete_vif_addr4?vif_name:txt&vif_index:u32&addr:ipv4->fail:bool&reason:txt

finder://pim/mfea_client/0.1/delete_vif_addr6?vif_name:txt&vif_index:u32&addr:ipv6->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Set flags to a vif.
 *  
 *  @param vif_name the name of the vif.
 *  
 *  @param vif_index the index of the vif.
 *  
 *  @param is_pim_register true if this is a PIM Register vif.
 *  
 *  @param is_p2p true if this is a point-to-point vif.
 *  
 *  @param is_loopback true if this is a loopback interface.
 *  
 *  @param is_multicast true if the vif is multicast-capable.
 *  
 *  @param is_broadcast true if the vif is broadcast-capable.
 *  
 *  @param is_up true if the vif is UP and running.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/set_vif_flags?vif_name:txt&vif_index:u32&is_pim_register:bool&is_p2p:bool&is_loopback:bool&is_multicast:bool&is_broadcast:bool&is_up:bool->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Complete a transaction with vif information.
 *  
 *  @param vif_name the name of the vif.
 *  
 *  @param vif_index the index of the vif.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/set_vif_done?vif_name:txt&vif_index:u32->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Complete all transactions with vif information.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/set_all_vifs_done->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Test if the vif setup is completed.
 *  
 *  @param is_completed if true the vif setup is completed.
 */
finder://pim/mfea_client/0.1/is_vif_setup_completed->is_completed:bool

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Receive a protocol message from the MFEA.
 *  
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *  
 *  @param protocol_name the name of the protocol that sends a message.
 *  
 *  @param protocol_id the ID of the protocol that sends a message (both sides
 *  must agree on the particular values).
 *  
 *  @param vif_name the name of the vif the message was received on.
 *  
 *  @param vif_index the index of the vif the message was received on.
 *  
 *  @param source_address the address of the sender.
 *  
 *  @param dest_address the destination address.
 *  
 *  @param ip_ttl the TTL of the received IP packet. If it has a negative
 *  value, it should be ignored.
 *  
 *  @param ip_tos the TOS of the received IP packet. If it has a negative
 *  value, it should be ignored.
 *  
 *  @param is_router_alert if true, the IP Router Alert option in the IP packet
 *  was set (when applicable).
 *  
 *  @param protocol_message the protocol message.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/recv_protocol_message4?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&vif_name:txt&vif_index:u32&source_address:ipv4&dest_address:ipv4&ip_ttl:i32&ip_tos:i32&is_router_alert:bool&protocol_message:binary->fail:bool&reason:txt

finder://pim/mfea_client/0.1/recv_protocol_message6?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&vif_name:txt&vif_index:u32&source_address:ipv6&dest_address:ipv6&ip_ttl:i32&ip_tos:i32&is_router_alert:bool&protocol_message:binary->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Receive a kernel signal message from the MFEA.
 *  
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *  
 *  @param protocol_name the name of the protocol that sends a message.
 *  
 *  @param protocol_id the ID of the protocol that sends a message (both sides
 *  must agree on the particular values).
 *  
 *  @param message_type the type of the kernel signal message (TODO: integer
 *  for now: the particular types are well-known by both sides).
 *  
 *  @param vif_name the name of the vif the message was received on.
 *  
 *  @param vif_index the index of the vif the message was received on.
 *  
 *  @param source_address the address of the sender.
 *  
 *  @param dest_address the destination address.
 *  
 *  @param protocol_message the protocol message.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/recv_kernel_signal_message4?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&message_type:u32&vif_name:txt&vif_index:u32&source_address:ipv4&dest_address:ipv4&protocol_message:binary->fail:bool&reason:txt

finder://pim/mfea_client/0.1/recv_kernel_signal_message6?xrl_sender_name:txt&protocol_name:txt&protocol_id:u32&message_type:u32&vif_name:txt&vif_index:u32&source_address:ipv6&dest_address:ipv6&protocol_message:binary->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Add Multicast Routing Information Base information.
 *  
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *  
 *  @param dest_prefix the destination prefix to add.
 *  
 *  @param next_hop_router_addr the address of the next-hop router toward the
 *  destination prefix.
 *  
 *  @param next_hop_vif_name the name of the vif toward the destination prefix.
 *  
 *  @param next_hop_vif_index the index of the vif toward the destination
 *  prefix.
 *  
 *  @param metric_preference the metric preference for this entry.
 *  
 *  @param metric the metric for this entry.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/add_mrib4?xrl_sender_name:txt&dest_prefix:ipv4net&next_hop_router_addr:ipv4&next_hop_vif_name:txt&next_hop_vif_index:u32&metric_preference:u32&metric:u32->fail:bool&reason:txt

finder://pim/mfea_client/0.1/add_mrib6?xrl_sender_name:txt&dest_prefix:ipv6net&next_hop_router_addr:ipv6&next_hop_vif_name:txt&next_hop_vif_index:u32&metric_preference:u32&metric:u32->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Delete Multicast Routing Information Base information.
 *  
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *  
 *  @param dest_prefix the destination prefix to delete.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/delete_mrib4?xrl_sender_name:txt&dest_prefix:ipv4net->fail:bool&reason:txt

finder://pim/mfea_client/0.1/delete_mrib6?xrl_sender_name:txt&dest_prefix:ipv6net->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Complete a transaction with MRIB information.
 *  
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mfea_client/0.1/set_mrib_done?xrl_sender_name:txt->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  A signal that a dataflow-related pre-condition is true.
 *  
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *  
 *  @param source_address the source address of the dataflow.
 *  
 *  @param group_address the group address of the dataflow.
 *  
 *  @param threshold_interval_sec the number of seconds in the interval
 *  requested for measurement.
 *  
 *  @param threshold_interval_usec the number of microseconds in the interval
 *  requested for measurement.
 *  
 *  @param measured_interval_sec the number of seconds in the last measured
 *  interval that has triggered the signal.
 *  
 *  @param measured_interval_usec the number of microseconds in the last
 *  measured interval that has triggered the signal.
 *  
 *  @param threshold_packets the threshold value to trigger a signal (in number
 *  of packets).
 *  
 *  @param threshold_bytes the threshold value to trigger a signal (in bytes).
 *  
 *  @param measured_packets the number of packets measured within the measured
 *  interval.
 *  
 *  @param measured_bytes the number of bytes measured within the measured
 *  interval.
 *  
 *  @param is_threshold_in_packets if true, threshold_packets is valid.
 *  
 *  @param is_threshold_in_bytes if true, threshold_bytes is valid.
 *  
 *  @param is_geq_upcall if true, the operation for comparison is ">=".
 *  
 *  @param is_leq_upcall if true, the operation for comparison is "<=".
 */
finder://pim/mfea_client/0.1/recv_dataflow_signal4?xrl_sender_name:txt&source_address:ipv4&group_address:ipv4&threshold_interval_sec:u32&threshold_interval_usec:u32&measured_interval_sec:u32&measured_interval_usec:u32&threshold_packets:u32&threshold_bytes:u32&measured_packets:u32&measured_bytes:u32&is_threshold_in_packets:bool&is_threshold_in_bytes:bool&is_geq_upcall:bool&is_leq_upcall:bool->fail:bool&reason:txt

finder://pim/mfea_client/0.1/recv_dataflow_signal6?xrl_sender_name:txt&source_address:ipv6&group_address:ipv6&threshold_interval_sec:u32&threshold_interval_usec:u32&measured_interval_sec:u32&measured_interval_usec:u32&threshold_packets:u32&threshold_bytes:u32&measured_packets:u32&measured_bytes:u32&is_threshold_in_packets:bool&is_threshold_in_bytes:bool&is_geq_upcall:bool&is_leq_upcall:bool->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Add/delete membership information.
 *  
 *  @param xrl_sender_name the XRL name of the originator of this XRL.
 *  
 *  @param vif_name the name of the new vif.
 *  
 *  @param vif_index the index of the new vif.
 *  
 *  @param source the source address that has been joined/left.
 *  
 *  @param group the group address that has been joined/left.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/mld6igmp_client/0.1/add_membership4?xrl_sender_name:txt&vif_name:txt&vif_index:u32&source:ipv4&group:ipv4->fail:bool&reason:txt

finder://pim/mld6igmp_client/0.1/add_membership6?xrl_sender_name:txt&vif_name:txt&vif_index:u32&source:ipv6&group:ipv6->fail:bool&reason:txt

finder://pim/mld6igmp_client/0.1/delete_membership4?xrl_sender_name:txt&vif_name:txt&vif_index:u32&source:ipv4&group:ipv4->fail:bool&reason:txt

finder://pim/mld6igmp_client/0.1/delete_membership6?xrl_sender_name:txt&vif_name:txt&vif_index:u32&source:ipv6&group:ipv6->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Enable/disable/start/stop a PIM vif interface.
 *  
 *  @param vif_name the name of the vif to enable/disable/start/stop.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/enable_vif?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/disable_vif?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/start_vif?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/stop_vif?vif_name:txt->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Enable/disable/start/stop all PIM vif interfaces.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/enable_all_vifs->fail:bool&reason:txt

finder://pim/pim/0.1/disable_all_vifs->fail:bool&reason:txt

finder://pim/pim/0.1/start_all_vifs->fail:bool&reason:txt

finder://pim/pim/0.1/stop_all_vifs->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Enable/disable/start/stop PIM protocol and PIM CLI access.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/enable_pim->fail:bool&reason:txt

finder://pim/pim/0.1/disable_pim->fail:bool&reason:txt

finder://pim/pim/0.1/enable_cli->fail:bool&reason:txt

finder://pim/pim/0.1/disable_cli->fail:bool&reason:txt

finder://pim/pim/0.1/start_pim->fail:bool&reason:txt

finder://pim/pim/0.1/stop_pim->fail:bool&reason:txt

finder://pim/pim/0.1/start_cli->fail:bool&reason:txt

finder://pim/pim/0.1/stop_cli->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Enable/disable/start/stop BSR.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/enable_bsr->fail:bool&reason:txt

finder://pim/pim/0.1/disable_bsr->fail:bool&reason:txt

finder://pim/pim/0.1/start_bsr->fail:bool&reason:txt

finder://pim/pim/0.1/stop_bsr->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Add/delete candidate-BSR configuration.
 *  
 *  @param is_admin_scope_zone true if configuring adminstratively scoped zone.
 *  
 *  @param admin_scope_zone_id the ID of the configured zone.
 *  
 *  @param vif_name the name of the vif to use its address as a candidate-BSR.
 *  
 *  @param bsr_priority the BSR priority (larger is better).
 *  
 *  @param hash_masklen the hash mask length.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/add_config_cand_bsr_by_vif_name4?is_admin_scope_zone:bool&admin_scope_zone_id:ipv4net&vif_name:txt&bsr_priority:u32&hash_masklen:u32->fail:bool&reason:txt

finder://pim/pim/0.1/add_config_cand_bsr_by_vif_name6?is_admin_scope_zone:bool&admin_scope_zone_id:ipv6net&vif_name:txt&bsr_priority:u32&hash_masklen:u32->fail:bool&reason:txt

finder://pim/pim/0.1/add_config_cand_bsr_by_addr4?is_admin_scope_zone:bool&admin_scope_zone_id:ipv4net&cand_bsr_addr:ipv4&bsr_priority:u32&hash_masklen:u32->fail:bool&reason:txt

finder://pim/pim/0.1/add_config_cand_bsr_by_addr6?is_admin_scope_zone:bool&admin_scope_zone_id:ipv6net&cand_bsr_addr:ipv6&bsr_priority:u32&hash_masklen:u32->fail:bool&reason:txt

finder://pim/pim/0.1/delete_config_cand_bsr4?is_admin_scope_zone:bool&admin_scope_zone_id:ipv4net->fail:bool&reason:txt

finder://pim/pim/0.1/delete_config_cand_bsr6?is_admin_scope_zone:bool&admin_scope_zone_id:ipv6net->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Add/delete Candidate-RP configuration.
 *  
 *  @param is_admin_scope_zone true if configuring adminstratively scoped zone.
 *  
 *  @param group_prefix the group prefix of the configured zone.
 *  
 *  @param vif_name the name of the vif to use its address as a candidate-RP.
 *  
 *  @param rp_priority the Cand-RP priority (smaller is better).
 *  
 *  @param rp_holdtime the Cand-RP holdtime (in seconds).
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/add_config_cand_rp_by_vif_name4?is_admin_scope_zone:bool&group_prefix:ipv4net&vif_name:txt&rp_priority:u32&rp_holdtime:u32->fail:bool&reason:txt

finder://pim/pim/0.1/add_config_cand_rp_by_vif_name6?is_admin_scope_zone:bool&group_prefix:ipv6net&vif_name:txt&rp_priority:u32&rp_holdtime:u32->fail:bool&reason:txt

finder://pim/pim/0.1/add_config_cand_rp_by_addr4?is_admin_scope_zone:bool&group_prefix:ipv4net&cand_rp_addr:ipv4&rp_priority:u32&rp_holdtime:u32->fail:bool&reason:txt

finder://pim/pim/0.1/add_config_cand_rp_by_addr6?is_admin_scope_zone:bool&group_prefix:ipv6net&cand_rp_addr:ipv6&rp_priority:u32&rp_holdtime:u32->fail:bool&reason:txt

finder://pim/pim/0.1/delete_config_cand_rp_by_vif_name4?is_admin_scope_zone:bool&group_prefix:ipv4net&vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/delete_config_cand_rp_by_vif_name6?is_admin_scope_zone:bool&group_prefix:ipv6net&vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/delete_config_cand_rp_by_addr4?is_admin_scope_zone:bool&group_prefix:ipv4net&cand_rp_addr:ipv4->fail:bool&reason:txt

finder://pim/pim/0.1/delete_config_cand_rp_by_addr6?is_admin_scope_zone:bool&group_prefix:ipv6net&cand_rp_addr:ipv6->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Add/delete/complete static RP configuration.
 *  
 *  @param group_prefix the group prefix for the RP.
 *  
 *  @param rp_addr the RP address.
 *  
 *  @param rp_priority the RP priority (smaller is better).
 *  
 *  @param hash_masklen the hash masklen used in computing an RP for a group.
 *  It should be same across all RPs. If set to zero, the default one will be
 *  used.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/add_config_rp4?group_prefix:ipv4net&rp_addr:ipv4&rp_priority:u32&hash_masklen:u32->fail:bool&reason:txt

finder://pim/pim/0.1/add_config_rp6?group_prefix:ipv6net&rp_addr:ipv6&rp_priority:u32&hash_masklen:u32->fail:bool&reason:txt

finder://pim/pim/0.1/delete_config_rp4?group_prefix:ipv4net&rp_addr:ipv4->fail:bool&reason:txt

finder://pim/pim/0.1/delete_config_rp6?group_prefix:ipv6net&rp_addr:ipv6->fail:bool&reason:txt

finder://pim/pim/0.1/config_rp_done->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Configure PIM Hello-related metrics. The 'set_foo' XRLs set the particular
 *  values. The 'reset_foo' XRLs reset the metrics to their default values.
 *  
 *  @param vif_name the name of the vif to configure.
 *  
 *  @param proto_version the protocol version.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/get_vif_proto_version?vif_name:txt->proto_version:u32&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_proto_version?vif_name:txt&proto_version:u32->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_proto_version?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_hello_triggered_delay?vif_name:txt->hello_triggered_delay:u32&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_hello_triggered_delay?vif_name:txt&hello_triggered_delay:u32->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_hello_triggered_delay?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_hello_period?vif_name:txt->hello_period:u32&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_hello_period?vif_name:txt&hello_period:u32->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_hello_period?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_hello_holdtime?vif_name:txt->hello_holdtime:u32&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_hello_holdtime?vif_name:txt&hello_holdtime:u32->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_hello_holdtime?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_dr_priority?vif_name:txt->dr_priority:u32&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_dr_priority?vif_name:txt&dr_priority:u32->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_dr_priority?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_lan_delay?vif_name:txt->lan_delay:u32&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_lan_delay?vif_name:txt&lan_delay:u32->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_lan_delay?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_override_interval?vif_name:txt->override_interval:u32&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_override_interval?vif_name:txt&override_interval:u32->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_override_interval?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_is_tracking_support_disabled?vif_name:txt->is_tracking_support_disabled:bool&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_is_tracking_support_disabled?vif_name:txt&is_tracking_support_disabled:bool->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_is_tracking_support_disabled?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_accept_nohello_neighbors?vif_name:txt->accept_nohello_neighbors:bool&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_accept_nohello_neighbors?vif_name:txt&accept_nohello_neighbors:bool->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_accept_nohello_neighbors?vif_name:txt->fail:bool&reason:txt

finder://pim/pim/0.1/get_vif_join_prune_period?vif_name:txt->join_prune_period:u32&fail:bool&reason:txt

finder://pim/pim/0.1/set_vif_join_prune_period?vif_name:txt&join_prune_period:u32->fail:bool&reason:txt

finder://pim/pim/0.1/reset_vif_join_prune_period?vif_name:txt->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Enable/disable the PIM trace log.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/enable_log_trace->fail:bool&reason:txt

finder://pim/pim/0.1/disable_log_trace->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Test-related methods: add Join/Prune entries, and send them to a neighbor.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/add_test_jp_entry4?source_addr:ipv4&group_addr:ipv4&group_masklen:u32&mrt_entry_type:txt&action_jp:txt&holdtime:u32&new_group_bool:bool->fail:bool&reason:txt

finder://pim/pim/0.1/add_test_jp_entry6?source_addr:ipv6&group_addr:ipv6&group_masklen:u32&mrt_entry_type:txt&action_jp:txt&holdtime:u32&new_group_bool:bool->fail:bool&reason:txt

finder://pim/pim/0.1/send_test_jp_entry4?nbr_addr:ipv4->fail:bool&reason:txt

finder://pim/pim/0.1/send_test_jp_entry6?nbr_addr:ipv6->fail:bool&reason:txt

/**
 *  Pure-virtual function that needs to be implemented to:
 *  
 *  Test-related methods: send an Assert message on an interface.
 *  
 *  @param vif_name the name of the vif to send the Assert on.
 *  
 *  @param source_addr the source address inside the Assert message.
 *  
 *  @param group_addr the group address inside the Assert message.
 *  
 *  @param rpt_bit the RPT-bit inside the Assert message.
 *  
 *  @param metric_preference the metric preference inside the Assert message.
 *  
 *  @param metric the metric inside the Assert message.
 *  
 *  @param fail true if failure has occured.
 *  
 *  @param reason contains failure reason if it occured.
 */
finder://pim/pim/0.1/send_test_assert4?vif_name:txt&source_addr:ipv4&group_addr:ipv4&rpt_bit:bool&metric_preference:u32&metric:u32->fail:bool&reason:txt

finder://pim/pim/0.1/send_test_assert6?vif_name:txt&source_addr:ipv6&group_addr:ipv6&rpt_bit:bool&metric_preference:u32&metric:u32->fail:bool&reason:txt

