/*
 * Copyright (c) 2001-2005 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by 'tgt-gen'.
 *
 * $XORP: xorp/xrl/targets/ospfv2.xrls,v 1.5 2005/09/15 18:33:28 atanu Exp $
 */

/**
 *  Get name of Xrl Target
 */
finder://ospfv2/common/0.1/get_target_name->name:txt

/**
 *  Get version string from Xrl Target
 */
finder://ospfv2/common/0.1/get_version->version:txt

/**
 *  Get status of Xrl Target
 */
finder://ospfv2/common/0.1/get_status->status:u32&reason:txt

/**
 *  Request clean shutdown of Xrl Target
 */
finder://ospfv2/common/0.1/shutdown

/**
 *  Receive an IPv4 packet from a raw socket.
 *
 *  @param if_name the interface name the packet arrived on.
 *
 *  @param vif_name the vif name the packet arrived on.
 *
 *  @param src_address the IP source address.
 *
 *  @param dst_address the IP destination address.
 *
 *  @param ip_protocol the IP protocol number.
 *
 *  @param ip_ttl the IP TTL (hop-limit). If it has a negative value, then the
 *  received value is unknown.
 *
 *  @param ip_tos the Type of Service (Diffserv/ECN bits for IPv4). If it has a
 *  negative value, then the received value is unknown.
 *
 *  @param ip_router_alert if true, the IP Router Alert option was included in
 *  the IP packet.
 */
finder://ospfv2/raw_packet4_client/0.1/recv?if_name:txt&vif_name:txt&src_address:ipv4&dst_address:ipv4&ip_protocol:u32&ip_ttl:i32&ip_tos:i32&ip_router_alert:bool&payload:binary

/**
 *  Set router id
 */
finder://ospfv2/ospfv2/0.1/set_router_id?id:ipv4

/**
 *  Create an area.
 *
 *  @param area id of the area
 *
 *  @param type of area "border", "stub", "nssa"
 */
finder://ospfv2/ospfv2/0.1/create_area_router?area:ipv4&type:txt

/**
 *  Destroy area.
 *
 *  @param area id of the area
 */
finder://ospfv2/ospfv2/0.1/destroy_area_router?area:ipv4

/**
 *  Create a binding to an interface.
 *
 *  @param ifname the interface that owns vif that has address.
 *
 *  @param vifname virtual interface owning address.
 *
 *  @param addr the address to be added.
 *
 *  @param prefix_len the prefix length XXX temporary.
 *
 *  @param mtu maximum transmission unit XXX temporary.
 *
 *  @param type of link "p2p", "broadcast", "nbma", "p2m", "vlink"
 */
finder://ospfv2/ospfv2/0.1/create_peer?ifname:txt&vifname:txt&addr:ipv4&prefix_len:u32&mtu:u32&type:txt&area:ipv4

/**
 *  Delete peer.
 */
finder://ospfv2/ospfv2/0.1/delete_peer?ifname:txt&vifname:txt

/**
 *  Set the peer state up or down.
 */
finder://ospfv2/ospfv2/0.1/set_peer_state?ifname:txt&vifname:txt&enable:bool

/**
 *  Add a neighbour to the peer.
 */
finder://ospfv2/ospfv2/0.1/add_neighbour?ifname:txt&vifname:txt&area:ipv4&neighbour_address:ipv4&neighbour_id:ipv4

/**
 *  Remove a neighbour from the peer.
 */
finder://ospfv2/ospfv2/0.1/remove_neighbour?ifname:txt&vifname:txt&area:ipv4&neighbour_address:ipv4&neighbour_id:ipv4

/**
 *  Used in the designated router election.
 */
finder://ospfv2/ospfv2/0.1/set_router_priority?ifname:txt&vifname:txt&area:ipv4&priority:u32

/**
 *  The interval between hello messages.
 */
finder://ospfv2/ospfv2/0.1/set_hello_interval?ifname:txt&vifname:txt&area:ipv4&interval:u32

/**
 *  The period to wait before considering a router dead.
 */
finder://ospfv2/ospfv2/0.1/set_router_dead_interval?ifname:txt&vifname:txt&area:ipv4&interval:u32

/**
 *  The edge cost of this interface.
 */
finder://ospfv2/ospfv2/0.1/set_interface_cost?ifname:txt&vifname:txt&area:ipv4&cost:u32

/**
 *  The estimated number of seconds it takes to transmit a Link State Update
 *  Packet over this interface. LSAs contained in the Link State Update packet
 *  will have their age incremented by this amount before transmission. This
 *  value should take into account transmission and propagation delays; it must
 *  be greater than zero.
 */
finder://ospfv2/ospfv2/0.1/set_inftransdelay?ifname:txt&vifname:txt&area:ipv4&delay:u32

/**
 *  Add area range.
 */
finder://ospfv2/ospfv2/0.1/area_range_add?area:ipv4&net:ipv4net&advertise:bool

/**
 *  Delete area range.
 */
finder://ospfv2/ospfv2/0.1/area_range_delete?area:ipv4&net:ipv4net

/**
 *  Change the advertised state of this area.
 */
finder://ospfv2/ospfv2/0.1/area_range_change_state?area:ipv4&net:ipv4net&advertise:bool

/**
 *  Get a single lsa from an area. A stateless mechanism to get LSAs. The
 *  client of this interface should start from zero and continue to request
 *  LSAs (incrementing index) until toohigh becomes true.
 *
 *  @param area database that is being searched.
 *
 *  @param index into database starting from 0.
 *
 *  @param valid true if a LSA has been returned. Some index values do not
 *  contain LSAs. This should not be considered an error.
 *
 *  @param toohigh true if no more LSA exist after this index.
 *
 *  @param lsa if valid is true the LSA at index.
 */
finder://ospfv2/ospfv2/0.1/get_lsa?area:ipv4&index:u32->valid:bool&toohigh:bool&lsa:binary

