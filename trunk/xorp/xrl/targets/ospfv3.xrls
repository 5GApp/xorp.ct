/*
 * Copyright (c) 2001-2006 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by 'tgt-gen'.
 *
 * $XORP: xorp/xrl/targets/ospfv3.xrls,v 1.9 2006/10/13 21:17:28 atanu Exp $
 */

/**
 *  Get name of Xrl Target
 */
finder://ospfv3/common/0.1/get_target_name->name:txt

/**
 *  Get version string from Xrl Target
 */
finder://ospfv3/common/0.1/get_version->version:txt

/**
 *  Get status of Xrl Target
 */
finder://ospfv3/common/0.1/get_status->status:u32&reason:txt

/**
 *  Request clean shutdown of Xrl Target
 */
finder://ospfv3/common/0.1/shutdown

/**
 *  Receive an IPv4 packet from a raw socket.
 *
 *  @param if_name the interface name the packet arrived on.
 *
 *  @param vif_name the vif name the packet arrived on.
 *
 *  @param src_address the IP source address.
 *
 *  @param dst_address the IP destination address.
 *
 *  @param ip_protocol the IP protocol number.
 *
 *  @param ip_ttl the IP TTL (hop-limit). If it has a negative value, then the
 *  received value is unknown.
 *
 *  @param ip_tos the Type of Service (Diffserv/ECN bits for IPv4). If it has a
 *  negative value, then the received value is unknown.
 *
 *  @param ip_router_alert if true, the IP Router Alert option was included in
 *  the IP packet.
 */
finder://ospfv3/raw_packet4_client/0.1/recv?if_name:txt&vif_name:txt&src_address:ipv4&dst_address:ipv4&ip_protocol:u32&ip_ttl:i32&ip_tos:i32&ip_router_alert:bool&payload:binary

/**
 *  Receive an IPv6 packet from a raw socket.
 *
 *  @param if_name the interface name the packet arrived on.
 *
 *  @param vif_name the vif name the packet arrived on.
 *
 *  @param src_address the IP source address.
 *
 *  @param dst_address the IP destination address.
 *
 *  @param ip_protocol the IP protocol number.
 *
 *  @param ip_ttl the IP TTL (hop-limit). If it has a negative value, then the
 *  received value is unknown.
 *
 *  @param ip_tos the Type Of Service (IP traffic class for IPv4). If it has a
 *  negative value, then the received value is unknown.
 *
 *  @param ip_router_alert if true, the IP Router Alert option was included in
 *  the IP packet.
 *
 *  @param ext_headers_type a list of u32 integers with the types of the
 *  optional extention headers.
 *
 *  @param ext_headers_payload a list of payload data, one for each optional
 *  extention header. The number of entries must match ext_headers_type.
 */
finder://ospfv3/raw_packet6_client/0.1/recv?if_name:txt&vif_name:txt&src_address:ipv6&dst_address:ipv6&ip_protocol:u32&ip_ttl:i32&ip_tos:i32&ip_router_alert:bool&ext_headers_type:list&ext_headers_payload:list&payload:binary

/**
 *  Set router id
 */
finder://ospfv3/ospfv3/0.1/set_router_id?id:ipv4

/**
 *  Set the router alert in the IP options.
 */
finder://ospfv3/ospfv3/0.1/set_ip_router_alert?ip_router_alert:bool

/**
 *  Create an area.
 *
 *  @param area id of the area
 *
 *  @param type of area "border", "stub", "nssa"
 */
finder://ospfv3/ospfv3/0.1/create_area_router?area:ipv4&type:txt

/**
 *  Change area type.
 *
 *  @param area id of the area
 *
 *  @param type of area "border", "stub", "nssa"
 */
finder://ospfv3/ospfv3/0.1/change_area_router_type?area:ipv4&type:txt

/**
 *  Destroy area.
 *
 *  @param area id of the area
 */
finder://ospfv3/ospfv3/0.1/destroy_area_router?area:ipv4

/**
 *  Create a binding to an interface.
 *
 *  @param ifname the interface that owns vif that has address.
 *
 *  @param vifname virtual interface owning address.
 *
 *  @param addr the address to be added.
 *
 *  @param type of link "p2p", "broadcast", "nbma", "p2m", "vlink"
 */
finder://ospfv3/ospfv3/0.1/create_peer?ifname:txt&vifname:txt&addr:ipv6&type:txt&area:ipv4

