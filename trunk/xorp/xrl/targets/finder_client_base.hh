/*
 * Copyright (c) 2002 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by '../scripts/tgt-gen'.
 *
 * $XORP: xorp/xrl/targets/finder_client_base.hh,v 1.2 2002/12/14 23:43:15 hodson Exp $
 */


#ifndef __XRL_INTERFACES_FINDER_CLIENT_BASE_HH__
#define __XRL_INTERFACES_FINDER_CLIENT_BASE_HH__

#undef XORP_LIBRARY_NAME
#define XORP_LIBRARY_NAME "XrlFinderClientTarget"

#include "libxorp/xlog.h"
#include "libxipc/xrl_cmd_map.hh"

class XrlFinderclientTargetBase {
protected:
    XrlCmdMap* _cmds;
    
public:
    XrlFinderclientTargetBase(XrlCmdMap* cmds) : _cmds(cmds) { add_handlers(); }
    virtual ~XrlFinderclientTargetBase() { remove_handlers(); }

    inline const string& name() const { return _cmds->name(); }

protected:

    /**
     *  Pure-virtual function that needs to be implemented to:
     *  
     *  Get name of Xrl Target
     */
    virtual XrlCmdError common_0_1_get_target_name(
	// Output values, 
	string&	name) = 0;

    /**
     *  Pure-virtual function that needs to be implemented to:
     *  
     *  Get version string from Xrl Target
     */
    virtual XrlCmdError common_0_1_get_version(
	// Output values, 
	string&	version) = 0;

    /**
     *  Pure-virtual function that needs to be implemented to:
     *  
     *  No op method used by finder to poll for liveness.
     */
    virtual XrlCmdError finder_client_0_1_hello() = 0;

    /**
     *  Pure-virtual function that needs to be implemented to:
     *  
     *  Remove Xrl from cache. The client should remove currently cached value
     *  for Xrl from it's cached. On the next invocation of Xrl, the client
     *  will need to consult the Finder for updated information, though
     *  implementations may consult the Finder for updated information before.
     */
    virtual XrlCmdError finder_client_0_1_remove_xrl_from_cache(
	// Input values, 
	const string&	xrl) = 0;

    /**
     *  Pure-virtual function that needs to be implemented to:
     *  
     *  Remove all Xrls relating to target from cache
     */
    virtual XrlCmdError finder_client_0_1_remove_xrls_for_target_from_cache(
	// Input values, 
	const string&	target_name) = 0;

private:
    const XrlCmdError handle_common_0_1_get_target_name(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_common_0_1_get_version(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_finder_client_0_1_hello(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_finder_client_0_1_remove_xrl_from_cache(const Xrl& x, XrlArgs* a);

    const XrlCmdError handle_finder_client_0_1_remove_xrls_for_target_from_cache(const Xrl& x, XrlArgs* a);

    void add_handlers()
    {
	if (_cmds->add_handler("common/0.1/get_target_name", 
	    callback(this, &XrlFinderclientTargetBase::handle_common_0_1_get_target_name)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://finderclient/common/0.1/get_target_name");
	}
	if (_cmds->add_handler("common/0.1/get_version", 
	    callback(this, &XrlFinderclientTargetBase::handle_common_0_1_get_version)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://finderclient/common/0.1/get_version");
	}
	if (_cmds->add_handler("finder_client/0.1/hello", 
	    callback(this, &XrlFinderclientTargetBase::handle_finder_client_0_1_hello)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://finderclient/finder_client/0.1/hello");
	}
	if (_cmds->add_handler("finder_client/0.1/remove_xrl_from_cache", 
	    callback(this, &XrlFinderclientTargetBase::handle_finder_client_0_1_remove_xrl_from_cache)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://finderclient/finder_client/0.1/remove_xrl_from_cache");
	}
	if (_cmds->add_handler("finder_client/0.1/remove_xrls_for_target_from_cache", 
	    callback(this, &XrlFinderclientTargetBase::handle_finder_client_0_1_remove_xrls_for_target_from_cache)) == false) {
	    XLOG_ERROR("Failed to xrl handler finder://finderclient/finder_client/0.1/remove_xrls_for_target_from_cache");
	}
    }

    void remove_handlers()
    {
	_cmds->remove_handler("common/0.1/get_target_name");
	_cmds->remove_handler("common/0.1/get_version");
	_cmds->remove_handler("finder_client/0.1/hello");
	_cmds->remove_handler("finder_client/0.1/remove_xrl_from_cache");
	_cmds->remove_handler("finder_client/0.1/remove_xrls_for_target_from_cache");
    }
};

#endif /* __XRL_INTERFACES_FINDER_CLIENT_BASE_HH__ */
