/*
 * Copyright (c) 2001-2006 International Computer Science Institute
 * See LICENSE file for licensing, conditions, and warranties on use.
 *
 * DO NOT EDIT THIS FILE - IT IS PROGRAMMATICALLY GENERATED
 *
 * Generated by 'clnt-gen'.
 *
 * $XORP: xorp/xrl/interfaces/fea_ifmgr_client_xif.hh,v 1.12 2006/03/16 00:06:10 pavlin Exp $
 */

#ifndef __XRL_INTERFACES_FEA_IFMGR_CLIENT_XIF_HH__
#define __XRL_INTERFACES_FEA_IFMGR_CLIENT_XIF_HH__

#undef XORP_LIBRARY_NAME
#define XORP_LIBRARY_NAME "XifFeaIfmgrClient"

#include "libxorp/xlog.h"
#include "libxorp/callback.hh"

#include "libxipc/xrl.hh"
#include "libxipc/xrl_error.hh"
#include "libxipc/xrl_sender.hh"


class XrlFeaIfmgrClientV0p1Client {
public:
    XrlFeaIfmgrClientV0p1Client(XrlSender* s) : _sender(s) {}
    virtual ~XrlFeaIfmgrClientV0p1Client() {}

    typedef XorpCallback1<void, const XrlError&>::RefPtr InterfaceUpdateCB;

    bool send_interface_update(
	const char*	dst_xrl_target_name,
	const string&	ifname,
	const uint32_t&	event,
	const InterfaceUpdateCB&	cb
    );

    typedef XorpCallback1<void, const XrlError&>::RefPtr VifUpdateCB;

    bool send_vif_update(
	const char*	dst_xrl_target_name,
	const string&	ifname,
	const string&	vifname,
	const uint32_t&	event,
	const VifUpdateCB&	cb
    );

    typedef XorpCallback1<void, const XrlError&>::RefPtr Vifaddr4UpdateCB;

    bool send_vifaddr4_update(
	const char*	dst_xrl_target_name,
	const string&	ifname,
	const string&	vifname,
	const IPv4&	addr,
	const uint32_t&	event,
	const Vifaddr4UpdateCB&	cb
    );

    typedef XorpCallback1<void, const XrlError&>::RefPtr Vifaddr6UpdateCB;

    bool send_vifaddr6_update(
	const char*	dst_xrl_target_name,
	const string&	ifname,
	const string&	vifname,
	const IPv6&	addr,
	const uint32_t&	event,
	const Vifaddr6UpdateCB&	cb
    );

    typedef XorpCallback1<void, const XrlError&>::RefPtr UpdatesCompletedCB;

    bool send_updates_completed(
	const char*	dst_xrl_target_name,
	const UpdatesCompletedCB&	cb
    );

protected:
    XrlSender* _sender;

private:
    void unmarshall_interface_update(
	const XrlError&	e,
	XrlArgs*	a,
	InterfaceUpdateCB		cb
    );

    void unmarshall_vif_update(
	const XrlError&	e,
	XrlArgs*	a,
	VifUpdateCB		cb
    );

    void unmarshall_vifaddr4_update(
	const XrlError&	e,
	XrlArgs*	a,
	Vifaddr4UpdateCB		cb
    );

    void unmarshall_vifaddr6_update(
	const XrlError&	e,
	XrlArgs*	a,
	Vifaddr6UpdateCB		cb
    );

    void unmarshall_updates_completed(
	const XrlError&	e,
	XrlArgs*	a,
	UpdatesCompletedCB		cb
    );

};

#endif /* __XRL_INTERFACES_FEA_IFMGR_CLIENT_XIF_HH__ */
