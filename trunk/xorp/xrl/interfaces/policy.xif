/* $XORP: xorp/xrl/interfaces/policy.xif,v 1.3 2005/07/01 22:55:09 abittau Exp $ */

/**
 * Policy manager XRL interface.
 */
interface policy/0.1 {
	/**
	 * Create a term in a policy.
	 *
	 * The term will be the last term in the policy statement.
	 *
	 * @param policy the name of the policy.
	 * @param order position of term.
	 * @param term the name of the term.
	 */
	create_term ? policy:txt & order:txt & term:txt

	/**
	 * Delete a term in a policy.
	 *
	 * @param policy the name of the policy.
	 * @param term the name of the term.
	 */
	delete_term ? policy:txt & term:txt

	/**
	 * Update the source/dest/action block of a term in a policy.
	 *
	 * Note: if variable, op and arg are all empty, the previous statement
	 * in that position will be deleted.
	 *
	 * @param policy the name of the policy.
	 * @param term the name of the term.
	 * @param block the block to update (0:source, 1:dest, 2:action).
	 * @param order numerical position (local) of statement.
	 * @param variable the attribute (such as metric) to operate on.
	 * @param op specific operation to perform on variable.
	 * @param arg the argument to the operator.
	 */
	update_term_block ? policy:txt & term:txt & block:u32 & order:txt \
			  & variable:txt & op:txt & arg:txt
	
	/**
	 * Create a policy.
	 *
	 * @param policy name of the policy.
	 */
	create_policy ? policy:txt

	/**
	 * Delete a policy.
	 *
	 * @param policy name of the policy.
	 */
	delete_policy ? policy:txt

	/**
	 * Create a set.
	 *
	 * @param set name of the set.
	 */
	create_set ? set:txt

	/**
	 * Replace elements in a set.
	 *
	 * @param set name of the set.
	 * @param elements comma delimited list of set elements.
	 */
	update_set ? set:txt & elements:txt

	/**
	 * Delete a set.
	 *
	 * @param set name of the set.
	 */
	delete_set ? set:txt

	/**
	 * Commit the configuration.
	 */
	done_global_policy_conf

	/**
	 * Replace import/export policies for a protocol.
	 *
	 * Will normally cause a delayed commit.
	 *
	 * @param protocol protocol for which policies must be replaced.
	 * @param policies comma separated list of policies.
	 */
	import ? protocol:txt & policies:txt
	export ? protocol:txt & policies:txt

	/**
	 * Add a variable to the varmap configuration.
	 *
	 * @param protocol the protocol this variable is available to.
	 * @param variable name of the variable.
	 * @param type the type of the variable.
	 * @param access the permissions on the variable (r/rw).
	 */
	add_varmap ? protocol:txt & variable:txt & type:txt & access:txt

	/**
	 * Dump state of policy manager.  To be used ONLY for debugging.
	 *
	 * @param id which aspect of the internal state to dump.
	 */
	dump_state ? id:u32 -> state:txt
}
