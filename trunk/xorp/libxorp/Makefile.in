# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am

# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# - The library


SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AR = @AR@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
GMAKE = @GMAKE@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MIBS = @MIBS@
OSPFD = @OSPFD@
OSPFD_OS = @OSPFD_OS@
PYTHON = @PYTHON@
PY_BUILD = @PY_BUILD@
RANLIB = @RANLIB@
net_snmp_found = @net_snmp_found@

noinst_LIBRARIES = libxorp.a
TESTS = test_asyncio test_callback test_config_param test_ipnet test_ipv4 test_ipv4net test_ipv6 test_ipv6net test_ipvx test_ipvxnet test_mac test_ref_ptr test_ref_trie test_test_main test_time_slice test_timer test_timeval test_trie  test_types test_vif 

noinst_PROGRAMS = $(TESTS)

# -- Libraries and library flags to link the binary programs
LDADD = $(noinst_LIBRARIES)

# -- Program Sources
test_asyncio_SOURCES = test_asyncio.cc
test_callback_SOURCES = test_callback.cc
test_config_param_SOURCES = test_config_param.cc
test_ipnet_SOURCES = test_ipnet.cc
test_ipv4_SOURCES = test_ipv4.cc
test_ipv4net_SOURCES = test_ipv4net.cc
test_ipv6_SOURCES = test_ipv6.cc
test_ipv6net_SOURCES = test_ipv6net.cc
test_ipvx_SOURCES = test_ipvx.cc
test_ipvxnet_SOURCES = test_ipvxnet.cc
test_mac_SOURCES = test_mac.cc
test_ref_ptr_SOURCES = test_ref_ptr.cc
test_ref_trie_SOURCES = test_ref_trie.cc
test_test_main_SOURCES = test_test_main.cc
test_time_slice_SOURCES = test_time_slice.cc
test_timer_SOURCES = test_timer.cc
test_timeval_SOURCES = test_timeval.cc
test_trie_SOURCES = test_trie.cc
test_types_SOURCES = test_types.cc
test_vif_SOURCES = test_vif.cc
libxorp_a_SOURCES = libxorp_module.h debug.h ether_compat.h xlog.h xorp.h utility.h asnum.hh asyncio.hh buffer.hh c_format.hh callback.hh config_param.hh eventloop.hh exceptions.hh heap.hh ipnet.hh ipv4.hh ipv4net.hh ipv6.hh ipv6net.hh ipvx.hh ipvxnet.hh mac.hh nexthop.hh old_trie.hh ref_ptr.hh selector.hh time_slice.hh timer.hh timeval.hh token.hh transaction.hh trie.hh utils.hh vif.hh debug.c xlog.c asyncio.cc c_format.cc eventloop.cc exceptions.cc heap.cc ipv4.cc ipv6.cc ipvx.cc mac.cc nexthop.cc ref_ptr.cc selector.cc time_slice.cc timer.cc token.cc transaction.cc vif.cc

BUILT_SOURCES = callback.hh

# -- Extra files and directories to add to the distribution
EXTRA_DIST = callback-gen.py
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = ../config.h
CONFIG_CLEAN_FILES = 
LIBRARIES =  $(noinst_LIBRARIES)


DEFS = @DEFS@ -I. -I$(srcdir) -I..
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
libxorp_a_LIBADD = 
libxorp_a_OBJECTS =  debug.o xlog.o asyncio.o c_format.o eventloop.o \
exceptions.o heap.o ipv4.o ipv6.o ipvx.o mac.o nexthop.o ref_ptr.o \
selector.o time_slice.o timer.o token.o transaction.o vif.o
PROGRAMS =  $(noinst_PROGRAMS)

test_asyncio_OBJECTS =  test_asyncio.o
test_asyncio_LDADD = $(LDADD)
test_asyncio_DEPENDENCIES =  libxorp.a
test_asyncio_LDFLAGS = 
test_callback_OBJECTS =  test_callback.o
test_callback_LDADD = $(LDADD)
test_callback_DEPENDENCIES =  libxorp.a
test_callback_LDFLAGS = 
test_config_param_OBJECTS =  test_config_param.o
test_config_param_LDADD = $(LDADD)
test_config_param_DEPENDENCIES =  libxorp.a
test_config_param_LDFLAGS = 
test_ipnet_OBJECTS =  test_ipnet.o
test_ipnet_LDADD = $(LDADD)
test_ipnet_DEPENDENCIES =  libxorp.a
test_ipnet_LDFLAGS = 
test_ipv4_OBJECTS =  test_ipv4.o
test_ipv4_LDADD = $(LDADD)
test_ipv4_DEPENDENCIES =  libxorp.a
test_ipv4_LDFLAGS = 
test_ipv4net_OBJECTS =  test_ipv4net.o
test_ipv4net_LDADD = $(LDADD)
test_ipv4net_DEPENDENCIES =  libxorp.a
test_ipv4net_LDFLAGS = 
test_ipv6_OBJECTS =  test_ipv6.o
test_ipv6_LDADD = $(LDADD)
test_ipv6_DEPENDENCIES =  libxorp.a
test_ipv6_LDFLAGS = 
test_ipv6net_OBJECTS =  test_ipv6net.o
test_ipv6net_LDADD = $(LDADD)
test_ipv6net_DEPENDENCIES =  libxorp.a
test_ipv6net_LDFLAGS = 
test_ipvx_OBJECTS =  test_ipvx.o
test_ipvx_LDADD = $(LDADD)
test_ipvx_DEPENDENCIES =  libxorp.a
test_ipvx_LDFLAGS = 
test_ipvxnet_OBJECTS =  test_ipvxnet.o
test_ipvxnet_LDADD = $(LDADD)
test_ipvxnet_DEPENDENCIES =  libxorp.a
test_ipvxnet_LDFLAGS = 
test_mac_OBJECTS =  test_mac.o
test_mac_LDADD = $(LDADD)
test_mac_DEPENDENCIES =  libxorp.a
test_mac_LDFLAGS = 
test_ref_ptr_OBJECTS =  test_ref_ptr.o
test_ref_ptr_LDADD = $(LDADD)
test_ref_ptr_DEPENDENCIES =  libxorp.a
test_ref_ptr_LDFLAGS = 
test_ref_trie_OBJECTS =  test_ref_trie.o
test_ref_trie_LDADD = $(LDADD)
test_ref_trie_DEPENDENCIES =  libxorp.a
test_ref_trie_LDFLAGS = 
test_test_main_OBJECTS =  test_test_main.o
test_test_main_LDADD = $(LDADD)
test_test_main_DEPENDENCIES =  libxorp.a
test_test_main_LDFLAGS = 
test_time_slice_OBJECTS =  test_time_slice.o
test_time_slice_LDADD = $(LDADD)
test_time_slice_DEPENDENCIES =  libxorp.a
test_time_slice_LDFLAGS = 
test_timer_OBJECTS =  test_timer.o
test_timer_LDADD = $(LDADD)
test_timer_DEPENDENCIES =  libxorp.a
test_timer_LDFLAGS = 
test_timeval_OBJECTS =  test_timeval.o
test_timeval_LDADD = $(LDADD)
test_timeval_DEPENDENCIES =  libxorp.a
test_timeval_LDFLAGS = 
test_trie_OBJECTS =  test_trie.o
test_trie_LDADD = $(LDADD)
test_trie_DEPENDENCIES =  libxorp.a
test_trie_LDFLAGS = 
test_types_OBJECTS =  test_types.o
test_types_LDADD = $(LDADD)
test_types_DEPENDENCIES =  libxorp.a
test_types_LDFLAGS = 
test_vif_OBJECTS =  test_vif.o
test_vif_LDADD = $(LDADD)
test_vif_DEPENDENCIES =  libxorp.a
test_vif_LDFLAGS = 
CXXFLAGS = @CXXFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@
DIST_COMMON =  README Makefile.am Makefile.in TODO


PACKAGE = @PACKAGE@
VERSION = @VERSION@

DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = gtar
GZIP_ENV = --best
DEP_FILES =  .deps/asyncio.P .deps/c_format.P .deps/debug.P \
.deps/eventloop.P .deps/exceptions.P .deps/heap.P .deps/ipv4.P \
.deps/ipv6.P .deps/ipvx.P .deps/mac.P .deps/nexthop.P .deps/ref_ptr.P \
.deps/selector.P .deps/test_asyncio.P .deps/test_callback.P \
.deps/test_config_param.P .deps/test_ipnet.P .deps/test_ipv4.P \
.deps/test_ipv4net.P .deps/test_ipv6.P .deps/test_ipv6net.P \
.deps/test_ipvx.P .deps/test_ipvxnet.P .deps/test_mac.P \
.deps/test_ref_ptr.P .deps/test_ref_trie.P .deps/test_test_main.P \
.deps/test_time_slice.P .deps/test_timer.P .deps/test_timeval.P \
.deps/test_trie.P .deps/test_types.P .deps/test_vif.P \
.deps/time_slice.P .deps/timer.P .deps/token.P .deps/transaction.P \
.deps/vif.P .deps/xlog.P
SOURCES = $(libxorp_a_SOURCES) $(test_asyncio_SOURCES) $(test_callback_SOURCES) $(test_config_param_SOURCES) $(test_ipnet_SOURCES) $(test_ipv4_SOURCES) $(test_ipv4net_SOURCES) $(test_ipv6_SOURCES) $(test_ipv6net_SOURCES) $(test_ipvx_SOURCES) $(test_ipvxnet_SOURCES) $(test_mac_SOURCES) $(test_ref_ptr_SOURCES) $(test_ref_trie_SOURCES) $(test_test_main_SOURCES) $(test_time_slice_SOURCES) $(test_timer_SOURCES) $(test_timeval_SOURCES) $(test_trie_SOURCES) $(test_types_SOURCES) $(test_vif_SOURCES)
OBJECTS = $(libxorp_a_OBJECTS) $(test_asyncio_OBJECTS) $(test_callback_OBJECTS) $(test_config_param_OBJECTS) $(test_ipnet_OBJECTS) $(test_ipv4_OBJECTS) $(test_ipv4net_OBJECTS) $(test_ipv6_OBJECTS) $(test_ipv6net_OBJECTS) $(test_ipvx_OBJECTS) $(test_ipvxnet_OBJECTS) $(test_mac_OBJECTS) $(test_ref_ptr_OBJECTS) $(test_ref_trie_OBJECTS) $(test_test_main_OBJECTS) $(test_time_slice_OBJECTS) $(test_timer_OBJECTS) $(test_timeval_OBJECTS) $(test_trie_OBJECTS) $(test_types_OBJECTS) $(test_vif_OBJECTS)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .S .c .cc .lo .o .s
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu libxorp/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status $(BUILT_SOURCES)
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-noinstLIBRARIES:

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

distclean-noinstLIBRARIES:

maintainer-clean-noinstLIBRARIES:

.s.o:
	$(COMPILE) -c $<

.S.o:
	$(COMPILE) -c $<

mostlyclean-compile:
	-rm -f *.o core *.core

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

.s.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

.S.lo:
	$(LIBTOOL) --mode=compile $(COMPILE) -c $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:

libxorp.a: $(libxorp_a_OBJECTS) $(libxorp_a_DEPENDENCIES)
	-rm -f libxorp.a
	$(AR) cru libxorp.a $(libxorp_a_OBJECTS) $(libxorp_a_LIBADD)
	$(RANLIB) libxorp.a

mostlyclean-noinstPROGRAMS:

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)

distclean-noinstPROGRAMS:

maintainer-clean-noinstPROGRAMS:

test_asyncio: $(test_asyncio_OBJECTS) $(test_asyncio_DEPENDENCIES)
	@rm -f test_asyncio
	$(CXXLINK) $(test_asyncio_LDFLAGS) $(test_asyncio_OBJECTS) $(test_asyncio_LDADD) $(LIBS)

test_callback: $(test_callback_OBJECTS) $(test_callback_DEPENDENCIES)
	@rm -f test_callback
	$(CXXLINK) $(test_callback_LDFLAGS) $(test_callback_OBJECTS) $(test_callback_LDADD) $(LIBS)

test_config_param: $(test_config_param_OBJECTS) $(test_config_param_DEPENDENCIES)
	@rm -f test_config_param
	$(CXXLINK) $(test_config_param_LDFLAGS) $(test_config_param_OBJECTS) $(test_config_param_LDADD) $(LIBS)

test_ipnet: $(test_ipnet_OBJECTS) $(test_ipnet_DEPENDENCIES)
	@rm -f test_ipnet
	$(CXXLINK) $(test_ipnet_LDFLAGS) $(test_ipnet_OBJECTS) $(test_ipnet_LDADD) $(LIBS)

test_ipv4: $(test_ipv4_OBJECTS) $(test_ipv4_DEPENDENCIES)
	@rm -f test_ipv4
	$(CXXLINK) $(test_ipv4_LDFLAGS) $(test_ipv4_OBJECTS) $(test_ipv4_LDADD) $(LIBS)

test_ipv4net: $(test_ipv4net_OBJECTS) $(test_ipv4net_DEPENDENCIES)
	@rm -f test_ipv4net
	$(CXXLINK) $(test_ipv4net_LDFLAGS) $(test_ipv4net_OBJECTS) $(test_ipv4net_LDADD) $(LIBS)

test_ipv6: $(test_ipv6_OBJECTS) $(test_ipv6_DEPENDENCIES)
	@rm -f test_ipv6
	$(CXXLINK) $(test_ipv6_LDFLAGS) $(test_ipv6_OBJECTS) $(test_ipv6_LDADD) $(LIBS)

test_ipv6net: $(test_ipv6net_OBJECTS) $(test_ipv6net_DEPENDENCIES)
	@rm -f test_ipv6net
	$(CXXLINK) $(test_ipv6net_LDFLAGS) $(test_ipv6net_OBJECTS) $(test_ipv6net_LDADD) $(LIBS)

test_ipvx: $(test_ipvx_OBJECTS) $(test_ipvx_DEPENDENCIES)
	@rm -f test_ipvx
	$(CXXLINK) $(test_ipvx_LDFLAGS) $(test_ipvx_OBJECTS) $(test_ipvx_LDADD) $(LIBS)

test_ipvxnet: $(test_ipvxnet_OBJECTS) $(test_ipvxnet_DEPENDENCIES)
	@rm -f test_ipvxnet
	$(CXXLINK) $(test_ipvxnet_LDFLAGS) $(test_ipvxnet_OBJECTS) $(test_ipvxnet_LDADD) $(LIBS)

test_mac: $(test_mac_OBJECTS) $(test_mac_DEPENDENCIES)
	@rm -f test_mac
	$(CXXLINK) $(test_mac_LDFLAGS) $(test_mac_OBJECTS) $(test_mac_LDADD) $(LIBS)

test_ref_ptr: $(test_ref_ptr_OBJECTS) $(test_ref_ptr_DEPENDENCIES)
	@rm -f test_ref_ptr
	$(CXXLINK) $(test_ref_ptr_LDFLAGS) $(test_ref_ptr_OBJECTS) $(test_ref_ptr_LDADD) $(LIBS)

test_ref_trie: $(test_ref_trie_OBJECTS) $(test_ref_trie_DEPENDENCIES)
	@rm -f test_ref_trie
	$(CXXLINK) $(test_ref_trie_LDFLAGS) $(test_ref_trie_OBJECTS) $(test_ref_trie_LDADD) $(LIBS)

test_test_main: $(test_test_main_OBJECTS) $(test_test_main_DEPENDENCIES)
	@rm -f test_test_main
	$(CXXLINK) $(test_test_main_LDFLAGS) $(test_test_main_OBJECTS) $(test_test_main_LDADD) $(LIBS)

test_time_slice: $(test_time_slice_OBJECTS) $(test_time_slice_DEPENDENCIES)
	@rm -f test_time_slice
	$(CXXLINK) $(test_time_slice_LDFLAGS) $(test_time_slice_OBJECTS) $(test_time_slice_LDADD) $(LIBS)

test_timer: $(test_timer_OBJECTS) $(test_timer_DEPENDENCIES)
	@rm -f test_timer
	$(CXXLINK) $(test_timer_LDFLAGS) $(test_timer_OBJECTS) $(test_timer_LDADD) $(LIBS)

test_timeval: $(test_timeval_OBJECTS) $(test_timeval_DEPENDENCIES)
	@rm -f test_timeval
	$(CXXLINK) $(test_timeval_LDFLAGS) $(test_timeval_OBJECTS) $(test_timeval_LDADD) $(LIBS)

test_trie: $(test_trie_OBJECTS) $(test_trie_DEPENDENCIES)
	@rm -f test_trie
	$(CXXLINK) $(test_trie_LDFLAGS) $(test_trie_OBJECTS) $(test_trie_LDADD) $(LIBS)

test_types: $(test_types_OBJECTS) $(test_types_DEPENDENCIES)
	@rm -f test_types
	$(CXXLINK) $(test_types_LDFLAGS) $(test_types_OBJECTS) $(test_types_LDADD) $(LIBS)

test_vif: $(test_vif_OBJECTS) $(test_vif_DEPENDENCIES)
	@rm -f test_vif
	$(CXXLINK) $(test_vif_LDFLAGS) $(test_vif_OBJECTS) $(test_vif_LDADD) $(LIBS)
.cc.o:
	$(CXXCOMPILE) -c $<
.cc.lo:
	$(LTCXXCOMPILE) -c $<

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	here=`pwd` && cd $(srcdir) \
	  && mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)'; \
	unique=`for i in $$list; do echo $$i; done | \
	  awk '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = libxorp

distdir: $(DISTFILES)
	here=`cd $(top_builddir) && pwd`; \
	top_distdir=`cd $(top_distdir) && pwd`; \
	distdir=`cd $(distdir) && pwd`; \
	cd $(top_srcdir) \
	  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --gnu libxorp/Makefile
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pr $$d/$$file $(distdir)/$$file; \
	  else \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done

DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)

-include $(DEP_FILES)

mostlyclean-depend:

clean-depend:

distclean-depend:
	-rm -rf .deps

maintainer-clean-depend:

%.o: %.c
	@echo '$(COMPILE) -c $<'; \
	$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.c
	@echo '$(LTCOMPILE) -c $<'; \
	$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp

%.o: %.cc
	@echo '$(CXXCOMPILE) -c $<'; \
	$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-cp .deps/$(*F).pp .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm .deps/$(*F).pp

%.lo: %.cc
	@echo '$(LTCXXCOMPILE) -c $<'; \
	$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<
	@-sed -e 's/^\([^:]*\)\.o[ 	]*:/\1.lo \1.o :/' \
	  < .deps/$(*F).pp > .deps/$(*F).P; \
	tr ' ' '\012' < .deps/$(*F).pp \
	  | sed -e 's/^\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \
	    >> .deps/$(*F).P; \
	rm -f .deps/$(*F).pp
check-TESTS: $(TESTS)
	@failed=0; all=0; \
	srcdir=$(srcdir); export srcdir; \
	for tst in $(TESTS); do \
	  if test -f $$tst; then dir=.; \
	  else dir="$(srcdir)"; fi; \
	  if $(TESTS_ENVIRONMENT) $$dir/$$tst; then \
	    all=`expr $$all + 1`; \
	    echo "PASS: $$tst"; \
	  elif test $$? -ne 77; then \
	    all=`expr $$all + 1`; \
	    failed=`expr $$failed + 1`; \
	    echo "FAIL: $$tst"; \
	  fi; \
	done; \
	if test "$$failed" -eq 0; then \
	  banner="All $$all tests passed"; \
	else \
	  banner="$$failed of $$all tests failed"; \
	fi; \
	dashes=`echo "$$banner" | sed s/./=/g`; \
	echo "$$dashes"; \
	echo "$$banner"; \
	echo "$$dashes"; \
	test "$$failed" -eq 0
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install
installdirs:


mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean-am:  mostlyclean-noinstLIBRARIES mostlyclean-compile \
		mostlyclean-libtool mostlyclean-noinstPROGRAMS \
		mostlyclean-tags mostlyclean-depend mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-noinstLIBRARIES clean-compile clean-libtool \
		clean-noinstPROGRAMS clean-tags clean-depend \
		clean-generic mostlyclean-am

clean: clean-am

distclean-am:  distclean-noinstLIBRARIES distclean-compile \
		distclean-libtool distclean-noinstPROGRAMS \
		distclean-tags distclean-depend distclean-generic \
		clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-noinstLIBRARIES \
		maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-noinstPROGRAMS maintainer-clean-tags \
		maintainer-clean-depend maintainer-clean-generic \
		distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-noinstLIBRARIES distclean-noinstLIBRARIES \
clean-noinstLIBRARIES maintainer-clean-noinstLIBRARIES \
mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool mostlyclean-noinstPROGRAMS \
distclean-noinstPROGRAMS clean-noinstPROGRAMS \
maintainer-clean-noinstPROGRAMS tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir mostlyclean-depend \
distclean-depend clean-depend maintainer-clean-depend check-TESTS \
info-am info dvi-am dvi check check-am installcheck-am installcheck \
install-exec-am install-exec install-data-am install-data install-am \
install uninstall-am uninstall all-redirect all-am all installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


################################################################

debug.o: debug.c
	$(subst -Wnon-const-format,,$(COMPILE)) -c $<

xlog.o: xlog.c
	$(subst -Wnon-const-format,,$(COMPILE)) -c $<

# If this code is commented out, please upgrade to python2.0 or above.

@PY_BUILD@callback.hh: callback-gen.py
@PY_BUILD@	$(PYTHON) callback-gen.py -b 6 -l 12 > callback.hh

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
