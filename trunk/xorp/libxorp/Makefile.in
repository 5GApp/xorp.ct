# Makefile.in generated by automake 1.10 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
bin_PROGRAMS =
check_PROGRAMS = test_asyncio$(EXEEXT) test_callback$(EXEEXT) \
	test_config_param$(EXEEXT) test_heap$(EXEEXT) \
	test_ipnet$(EXEEXT) test_ipv4$(EXEEXT) test_ipv4net$(EXEEXT) \
	test_ipv6$(EXEEXT) test_ipv6net$(EXEEXT) test_ipvx$(EXEEXT) \
	test_ipvxnet$(EXEEXT) test_mac$(EXEEXT) \
	test_observers$(EXEEXT) test_profile$(EXEEXT) \
	test_ref_ptr$(EXEEXT) test_ref_trie$(EXEEXT) \
	test_run_command$(EXEEXT) test_service$(EXEEXT) \
	test_task$(EXEEXT) test_test_main$(EXEEXT) \
	test_time_slice$(EXEEXT) test_timer$(EXEEXT) \
	test_timeval$(EXEEXT) test_trie$(EXEEXT) test_types$(EXEEXT) \
	test_utils$(EXEEXT) test_vif$(EXEEXT)
subdir = libxorp
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/compiler_flags.m4 \
	$(top_srcdir)/config/dmalloc.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libxorp_la_LIBADD =
am_libxorp_la_OBJECTS = daemon.lo debug.lo ether_compat.lo \
	gai_strerror.lo getopt.lo inet_ntop.lo inet_pton.lo random.lo \
	strlcpy.lo strptime.lo utility.lo win_io.lo xlog.lo asyncio.lo \
	buffered_asyncio.lo c_format.lo callback.lo clock.lo \
	eventloop.lo exceptions.lo heap.lo ipnet.lo ipv4.lo ipv6.lo \
	ipvx.lo mac.lo nexthop.lo popen.lo profile.lo ref_ptr.lo \
	round_robin.lo run_command.lo safe_callback_obj.lo selector.lo \
	service.lo task.lo time_slice.lo timer.lo token.lo \
	transaction.lo utils.lo vif.lo win_dispatcher.lo
libxorp_la_OBJECTS = $(am_libxorp_la_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_test_asyncio_OBJECTS = test_asyncio.$(OBJEXT)
test_asyncio_OBJECTS = $(am_test_asyncio_OBJECTS)
test_asyncio_LDADD = $(LDADD)
test_asyncio_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_callback_OBJECTS = test_callback.$(OBJEXT)
test_callback_OBJECTS = $(am_test_callback_OBJECTS)
test_callback_LDADD = $(LDADD)
test_callback_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_config_param_OBJECTS = test_config_param.$(OBJEXT)
test_config_param_OBJECTS = $(am_test_config_param_OBJECTS)
test_config_param_LDADD = $(LDADD)
test_config_param_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_heap_OBJECTS = test_heap.$(OBJEXT)
test_heap_OBJECTS = $(am_test_heap_OBJECTS)
test_heap_LDADD = $(LDADD)
test_heap_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ipnet_OBJECTS = test_ipnet.$(OBJEXT)
test_ipnet_OBJECTS = $(am_test_ipnet_OBJECTS)
test_ipnet_LDADD = $(LDADD)
test_ipnet_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ipv4_OBJECTS = test_ipv4.$(OBJEXT)
test_ipv4_OBJECTS = $(am_test_ipv4_OBJECTS)
test_ipv4_LDADD = $(LDADD)
test_ipv4_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ipv4net_OBJECTS = test_ipv4net.$(OBJEXT)
test_ipv4net_OBJECTS = $(am_test_ipv4net_OBJECTS)
test_ipv4net_LDADD = $(LDADD)
test_ipv4net_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ipv6_OBJECTS = test_ipv6.$(OBJEXT)
test_ipv6_OBJECTS = $(am_test_ipv6_OBJECTS)
test_ipv6_LDADD = $(LDADD)
test_ipv6_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ipv6net_OBJECTS = test_ipv6net.$(OBJEXT)
test_ipv6net_OBJECTS = $(am_test_ipv6net_OBJECTS)
test_ipv6net_LDADD = $(LDADD)
test_ipv6net_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ipvx_OBJECTS = test_ipvx.$(OBJEXT)
test_ipvx_OBJECTS = $(am_test_ipvx_OBJECTS)
test_ipvx_LDADD = $(LDADD)
test_ipvx_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ipvxnet_OBJECTS = test_ipvxnet.$(OBJEXT)
test_ipvxnet_OBJECTS = $(am_test_ipvxnet_OBJECTS)
test_ipvxnet_LDADD = $(LDADD)
test_ipvxnet_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_mac_OBJECTS = test_mac.$(OBJEXT)
test_mac_OBJECTS = $(am_test_mac_OBJECTS)
test_mac_LDADD = $(LDADD)
test_mac_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_observers_OBJECTS = test_observers.$(OBJEXT)
test_observers_OBJECTS = $(am_test_observers_OBJECTS)
test_observers_LDADD = $(LDADD)
test_observers_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_profile_OBJECTS = test_profile.$(OBJEXT)
test_profile_OBJECTS = $(am_test_profile_OBJECTS)
test_profile_LDADD = $(LDADD)
test_profile_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ref_ptr_OBJECTS = test_ref_ptr.$(OBJEXT)
test_ref_ptr_OBJECTS = $(am_test_ref_ptr_OBJECTS)
test_ref_ptr_LDADD = $(LDADD)
test_ref_ptr_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_ref_trie_OBJECTS = test_ref_trie.$(OBJEXT)
test_ref_trie_OBJECTS = $(am_test_ref_trie_OBJECTS)
test_ref_trie_LDADD = $(LDADD)
test_ref_trie_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_run_command_OBJECTS = test_run_command.$(OBJEXT)
test_run_command_OBJECTS = $(am_test_run_command_OBJECTS)
test_run_command_LDADD = $(LDADD)
test_run_command_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_service_OBJECTS = test_service.$(OBJEXT)
test_service_OBJECTS = $(am_test_service_OBJECTS)
test_service_LDADD = $(LDADD)
test_service_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_task_OBJECTS = test_task.$(OBJEXT)
test_task_OBJECTS = $(am_test_task_OBJECTS)
test_task_LDADD = $(LDADD)
test_task_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_test_main_OBJECTS = test_test_main.$(OBJEXT)
test_test_main_OBJECTS = $(am_test_test_main_OBJECTS)
test_test_main_LDADD = $(LDADD)
test_test_main_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_time_slice_OBJECTS = test_time_slice.$(OBJEXT)
test_time_slice_OBJECTS = $(am_test_time_slice_OBJECTS)
test_time_slice_LDADD = $(LDADD)
test_time_slice_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_timer_OBJECTS = test_timer.$(OBJEXT)
test_timer_OBJECTS = $(am_test_timer_OBJECTS)
test_timer_LDADD = $(LDADD)
test_timer_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_timeval_OBJECTS = test_timeval.$(OBJEXT)
test_timeval_OBJECTS = $(am_test_timeval_OBJECTS)
test_timeval_LDADD = $(LDADD)
test_timeval_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_trie_OBJECTS = test_trie.$(OBJEXT)
test_trie_OBJECTS = $(am_test_trie_OBJECTS)
test_trie_LDADD = $(LDADD)
test_trie_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_types_OBJECTS = test_types.$(OBJEXT)
test_types_OBJECTS = $(am_test_types_OBJECTS)
test_types_LDADD = $(LDADD)
test_types_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_utils_OBJECTS = test_utils.$(OBJEXT)
test_utils_OBJECTS = $(am_test_utils_OBJECTS)
test_utils_LDADD = $(LDADD)
test_utils_DEPENDENCIES = $(noinst_LTLIBRARIES)
am_test_vif_OBJECTS = test_vif.$(OBJEXT)
test_vif_OBJECTS = $(am_test_vif_OBJECTS)
test_vif_LDADD = $(LDADD)
test_vif_DEPENDENCIES = $(noinst_LTLIBRARIES)
DEFAULT_INCLUDES = -I. -I$(top_builddir)@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libxorp_la_SOURCES) $(test_asyncio_SOURCES) \
	$(test_callback_SOURCES) $(test_config_param_SOURCES) \
	$(test_heap_SOURCES) $(test_ipnet_SOURCES) \
	$(test_ipv4_SOURCES) $(test_ipv4net_SOURCES) \
	$(test_ipv6_SOURCES) $(test_ipv6net_SOURCES) \
	$(test_ipvx_SOURCES) $(test_ipvxnet_SOURCES) \
	$(test_mac_SOURCES) $(test_observers_SOURCES) \
	$(test_profile_SOURCES) $(test_ref_ptr_SOURCES) \
	$(test_ref_trie_SOURCES) $(test_run_command_SOURCES) \
	$(test_service_SOURCES) $(test_task_SOURCES) \
	$(test_test_main_SOURCES) $(test_time_slice_SOURCES) \
	$(test_timer_SOURCES) $(test_timeval_SOURCES) \
	$(test_trie_SOURCES) $(test_types_SOURCES) \
	$(test_utils_SOURCES) $(test_vif_SOURCES)
DIST_SOURCES = $(libxorp_la_SOURCES) $(test_asyncio_SOURCES) \
	$(test_callback_SOURCES) $(test_config_param_SOURCES) \
	$(test_heap_SOURCES) $(test_ipnet_SOURCES) \
	$(test_ipv4_SOURCES) $(test_ipv4net_SOURCES) \
	$(test_ipv6_SOURCES) $(test_ipv6net_SOURCES) \
	$(test_ipvx_SOURCES) $(test_ipvxnet_SOURCES) \
	$(test_mac_SOURCES) $(test_observers_SOURCES) \
	$(test_profile_SOURCES) $(test_ref_ptr_SOURCES) \
	$(test_ref_trie_SOURCES) $(test_run_command_SOURCES) \
	$(test_service_SOURCES) $(test_task_SOURCES) \
	$(test_test_main_SOURCES) $(test_time_slice_SOURCES) \
	$(test_timer_SOURCES) $(test_timeval_SOURCES) \
	$(test_trie_SOURCES) $(test_types_SOURCES) \
	$(test_utils_SOURCES) $(test_vif_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLI_CURSES_LIB = @CLI_CURSES_LIB@
CONTRIB_SUBDIRS = @CONTRIB_SUBDIRS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MIBS = @MIBS@
MKDIR_P = @MKDIR_P@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
POW_LIB = @POW_LIB@
PYTHON = @PYTHON@
PYTHON_BUILD = @PYTHON_BUILD@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# -- Test Programs
#TESTS	+= test_buffered_asyncio$(EXEEXT)
TESTS = test_asyncio$(EXEEXT) test_callback$(EXEEXT) \
	test_config_param$(EXEEXT) test_heap$(EXEEXT) \
	test_ipnet$(EXEEXT) test_ipv4$(EXEEXT) test_ipv4net$(EXEEXT) \
	test_ipv6$(EXEEXT) test_ipv6net$(EXEEXT) test_ipvx$(EXEEXT) \
	test_ipvxnet$(EXEEXT) test_mac$(EXEEXT) \
	test_observers$(EXEEXT) test_profile$(EXEEXT) \
	test_ref_ptr$(EXEEXT) test_ref_trie$(EXEEXT) \
	test_run_command.sh test_service$(EXEEXT) test_task$(EXEEXT) \
	test_test_main$(EXEEXT) test_time_slice$(EXEEXT) \
	test_timer$(EXEEXT) test_timeval$(EXEEXT) test_trie$(EXEEXT) \
	test_types$(EXEEXT) test_utils$(EXEEXT) test_vif$(EXEEXT)

# -- No-install Libraries
noinst_LTLIBRARIES = libxorp.la

# -- Libraries and library flags to link the binary programs
LDADD = $(noinst_LTLIBRARIES)

# -- Program Sources
test_asyncio_SOURCES = test_asyncio.cc
#test_buffered_asyncio_SOURCES	= test_buffered_asyncio.cc
test_callback_SOURCES = test_callback.cc
test_config_param_SOURCES = test_config_param.cc
test_heap_SOURCES = test_heap.cc
test_ipnet_SOURCES = test_ipnet.cc
test_ipv4_SOURCES = test_ipv4.cc
test_ipv4net_SOURCES = test_ipv4net.cc
test_ipv6_SOURCES = test_ipv6.cc
test_ipv6net_SOURCES = test_ipv6net.cc
test_ipvx_SOURCES = test_ipvx.cc
test_ipvxnet_SOURCES = test_ipvxnet.cc
test_mac_SOURCES = test_mac.cc
test_observers_SOURCES = test_observers.cc
test_profile_SOURCES = test_profile.cc
test_ref_ptr_SOURCES = test_ref_ptr.cc
test_ref_trie_SOURCES = test_ref_trie.cc
test_run_command_SOURCES = test_run_command.cc
test_service_SOURCES = test_service.cc
test_task_SOURCES = test_task.cc
test_test_main_SOURCES = test_test_main.cc
test_time_slice_SOURCES = test_time_slice.cc
test_timer_SOURCES = test_timer.cc
test_timeval_SOURCES = test_timeval.cc
test_trie_SOURCES = test_trie.cc
test_types_SOURCES = test_types.cc
test_utils_SOURCES = test_utils.cc
test_vif_SOURCES = test_vif.cc

# -- Library Sources
libxorp_la_SOURCES = libxorp_module.h daemon.h debug.h ether_compat.h \
	random.h xlog.h xorp.h utility.h win_io.h asnum.hh asyncio.hh \
	buffer.hh buffered_asyncio.hh c_format.hh callback.hh \
	callback_nodebug.hh callback_debug.hh clock.hh config_param.hh \
	eventloop.hh exceptions.hh heap.hh ioevents.hh ipnet.hh \
	ipv4.hh ipv4net.hh ipv6.hh ipv6net.hh ipvx.hh ipvxnet.hh \
	mac.hh nexthop.hh popen.hh profile.hh range.hh ref_ptr.hh \
	round_robin.hh run_command.hh safe_callback_obj.hh selector.hh \
	service.hh task.hh time_slice.hh timespent.hh timer.hh \
	timeval.hh tlv.hh token.hh tokenize.hh transaction.hh trie.hh \
	utils.hh vif.hh win_dispatcher.hh daemon.c debug.c \
	ether_compat.c gai_strerror.c getopt.c inet_ntop.c inet_pton.c \
	random.c strlcpy.c strptime.c utility.c win_io.c xlog.c \
	asyncio.cc buffered_asyncio.cc c_format.cc callback.cc \
	clock.cc eventloop.cc exceptions.cc heap.cc ipnet.cc ipv4.cc \
	ipv6.cc ipvx.cc mac.cc nexthop.cc popen.cc profile.cc \
	ref_ptr.cc round_robin.cc run_command.cc safe_callback_obj.cc \
	selector.cc service.cc task.cc time_slice.cc timer.cc token.cc \
	transaction.cc utils.cc vif.cc win_dispatcher.cc
BUILT_SOURCES = callback_nodebug.hh callback_debug.hh

# -- Extra files and directories to add to the distribution
EXTRA_DIST = callback_gen.py

################################################################
INCLUDES = -I$(top_srcdir)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  libxorp/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  libxorp/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libxorp.la: $(libxorp_la_OBJECTS) $(libxorp_la_DEPENDENCIES) 
	$(CXXLINK)  $(libxorp_la_OBJECTS) $(libxorp_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
test_asyncio$(EXEEXT): $(test_asyncio_OBJECTS) $(test_asyncio_DEPENDENCIES) 
	@rm -f test_asyncio$(EXEEXT)
	$(CXXLINK) $(test_asyncio_OBJECTS) $(test_asyncio_LDADD) $(LIBS)
test_callback$(EXEEXT): $(test_callback_OBJECTS) $(test_callback_DEPENDENCIES) 
	@rm -f test_callback$(EXEEXT)
	$(CXXLINK) $(test_callback_OBJECTS) $(test_callback_LDADD) $(LIBS)
test_config_param$(EXEEXT): $(test_config_param_OBJECTS) $(test_config_param_DEPENDENCIES) 
	@rm -f test_config_param$(EXEEXT)
	$(CXXLINK) $(test_config_param_OBJECTS) $(test_config_param_LDADD) $(LIBS)
test_heap$(EXEEXT): $(test_heap_OBJECTS) $(test_heap_DEPENDENCIES) 
	@rm -f test_heap$(EXEEXT)
	$(CXXLINK) $(test_heap_OBJECTS) $(test_heap_LDADD) $(LIBS)
test_ipnet$(EXEEXT): $(test_ipnet_OBJECTS) $(test_ipnet_DEPENDENCIES) 
	@rm -f test_ipnet$(EXEEXT)
	$(CXXLINK) $(test_ipnet_OBJECTS) $(test_ipnet_LDADD) $(LIBS)
test_ipv4$(EXEEXT): $(test_ipv4_OBJECTS) $(test_ipv4_DEPENDENCIES) 
	@rm -f test_ipv4$(EXEEXT)
	$(CXXLINK) $(test_ipv4_OBJECTS) $(test_ipv4_LDADD) $(LIBS)
test_ipv4net$(EXEEXT): $(test_ipv4net_OBJECTS) $(test_ipv4net_DEPENDENCIES) 
	@rm -f test_ipv4net$(EXEEXT)
	$(CXXLINK) $(test_ipv4net_OBJECTS) $(test_ipv4net_LDADD) $(LIBS)
test_ipv6$(EXEEXT): $(test_ipv6_OBJECTS) $(test_ipv6_DEPENDENCIES) 
	@rm -f test_ipv6$(EXEEXT)
	$(CXXLINK) $(test_ipv6_OBJECTS) $(test_ipv6_LDADD) $(LIBS)
test_ipv6net$(EXEEXT): $(test_ipv6net_OBJECTS) $(test_ipv6net_DEPENDENCIES) 
	@rm -f test_ipv6net$(EXEEXT)
	$(CXXLINK) $(test_ipv6net_OBJECTS) $(test_ipv6net_LDADD) $(LIBS)
test_ipvx$(EXEEXT): $(test_ipvx_OBJECTS) $(test_ipvx_DEPENDENCIES) 
	@rm -f test_ipvx$(EXEEXT)
	$(CXXLINK) $(test_ipvx_OBJECTS) $(test_ipvx_LDADD) $(LIBS)
test_ipvxnet$(EXEEXT): $(test_ipvxnet_OBJECTS) $(test_ipvxnet_DEPENDENCIES) 
	@rm -f test_ipvxnet$(EXEEXT)
	$(CXXLINK) $(test_ipvxnet_OBJECTS) $(test_ipvxnet_LDADD) $(LIBS)
test_mac$(EXEEXT): $(test_mac_OBJECTS) $(test_mac_DEPENDENCIES) 
	@rm -f test_mac$(EXEEXT)
	$(CXXLINK) $(test_mac_OBJECTS) $(test_mac_LDADD) $(LIBS)
test_observers$(EXEEXT): $(test_observers_OBJECTS) $(test_observers_DEPENDENCIES) 
	@rm -f test_observers$(EXEEXT)
	$(CXXLINK) $(test_observers_OBJECTS) $(test_observers_LDADD) $(LIBS)
test_profile$(EXEEXT): $(test_profile_OBJECTS) $(test_profile_DEPENDENCIES) 
	@rm -f test_profile$(EXEEXT)
	$(CXXLINK) $(test_profile_OBJECTS) $(test_profile_LDADD) $(LIBS)
test_ref_ptr$(EXEEXT): $(test_ref_ptr_OBJECTS) $(test_ref_ptr_DEPENDENCIES) 
	@rm -f test_ref_ptr$(EXEEXT)
	$(CXXLINK) $(test_ref_ptr_OBJECTS) $(test_ref_ptr_LDADD) $(LIBS)
test_ref_trie$(EXEEXT): $(test_ref_trie_OBJECTS) $(test_ref_trie_DEPENDENCIES) 
	@rm -f test_ref_trie$(EXEEXT)
	$(CXXLINK) $(test_ref_trie_OBJECTS) $(test_ref_trie_LDADD) $(LIBS)
test_run_command$(EXEEXT): $(test_run_command_OBJECTS) $(test_run_command_DEPENDENCIES) 
	@rm -f test_run_command$(EXEEXT)
	$(CXXLINK) $(test_run_command_OBJECTS) $(test_run_command_LDADD) $(LIBS)
test_service$(EXEEXT): $(test_service_OBJECTS) $(test_service_DEPENDENCIES) 
	@rm -f test_service$(EXEEXT)
	$(CXXLINK) $(test_service_OBJECTS) $(test_service_LDADD) $(LIBS)
test_task$(EXEEXT): $(test_task_OBJECTS) $(test_task_DEPENDENCIES) 
	@rm -f test_task$(EXEEXT)
	$(CXXLINK) $(test_task_OBJECTS) $(test_task_LDADD) $(LIBS)
test_test_main$(EXEEXT): $(test_test_main_OBJECTS) $(test_test_main_DEPENDENCIES) 
	@rm -f test_test_main$(EXEEXT)
	$(CXXLINK) $(test_test_main_OBJECTS) $(test_test_main_LDADD) $(LIBS)
test_time_slice$(EXEEXT): $(test_time_slice_OBJECTS) $(test_time_slice_DEPENDENCIES) 
	@rm -f test_time_slice$(EXEEXT)
	$(CXXLINK) $(test_time_slice_OBJECTS) $(test_time_slice_LDADD) $(LIBS)
test_timer$(EXEEXT): $(test_timer_OBJECTS) $(test_timer_DEPENDENCIES) 
	@rm -f test_timer$(EXEEXT)
	$(CXXLINK) $(test_timer_OBJECTS) $(test_timer_LDADD) $(LIBS)
test_timeval$(EXEEXT): $(test_timeval_OBJECTS) $(test_timeval_DEPENDENCIES) 
	@rm -f test_timeval$(EXEEXT)
	$(CXXLINK) $(test_timeval_OBJECTS) $(test_timeval_LDADD) $(LIBS)
test_trie$(EXEEXT): $(test_trie_OBJECTS) $(test_trie_DEPENDENCIES) 
	@rm -f test_trie$(EXEEXT)
	$(CXXLINK) $(test_trie_OBJECTS) $(test_trie_LDADD) $(LIBS)
test_types$(EXEEXT): $(test_types_OBJECTS) $(test_types_DEPENDENCIES) 
	@rm -f test_types$(EXEEXT)
	$(CXXLINK) $(test_types_OBJECTS) $(test_types_LDADD) $(LIBS)
test_utils$(EXEEXT): $(test_utils_OBJECTS) $(test_utils_DEPENDENCIES) 
	@rm -f test_utils$(EXEEXT)
	$(CXXLINK) $(test_utils_OBJECTS) $(test_utils_LDADD) $(LIBS)
test_vif$(EXEEXT): $(test_vif_OBJECTS) $(test_vif_DEPENDENCIES) 
	@rm -f test_vif$(EXEEXT)
	$(CXXLINK) $(test_vif_OBJECTS) $(test_vif_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/asyncio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/buffered_asyncio.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/c_format.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/callback.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/daemon.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/debug.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ether_compat.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eventloop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/exceptions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gai_strerror.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getopt.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/heap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inet_ntop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inet_pton.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ipnet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ipv4.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ipv6.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ipvx.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mac.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nexthop.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/popen.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/profile.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/random.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ref_ptr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/round_robin.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/run_command.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/safe_callback_obj.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/selector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/service.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strlcpy.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strptime.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/task.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_asyncio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_callback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_config_param.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_heap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ipnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ipv4.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ipv4net.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ipv6.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ipv6net.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ipvx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ipvxnet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_mac.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_observers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_profile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ref_ptr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_ref_trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_run_command.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_service.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_task.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_test_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_time_slice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_timer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_timeval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_types.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/test_vif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time_slice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/timer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/token.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/transaction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utility.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vif.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/win_dispatcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/win_io.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xlog.Plo@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; ws='[	 ]'; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *$$ws$$tst$$ws*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# If this code is commented out, please upgrade to python2.0 or above.

@PYTHON_BUILD@callback_nodebug.hh: callback-gen.py
@PYTHON_BUILD@	$(PYTHON) $(srcdir)/callback-gen.py -b 6 -l 15 > $(srcdir)/callback_nodebug.hh

@PYTHON_BUILD@callback_debug.hh: callback-gen.py
@PYTHON_BUILD@	$(PYTHON) $(srcdir)/callback-gen.py -d -b 6 -l 15 > $(srcdir)/callback_debug.hh
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
