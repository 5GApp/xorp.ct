/* $XORP: xorp/etc/templates/bgp.tp,v 1.16 2003/11/18 23:03:57 pavlin Exp $ */

protocols {
  bgp {
    targetname: text = "bgp";
    bgp-id: ipv4;
    local-as: uint;

    peer @: text {
      peer-port: uint = 179;
      local-port: uint = 179;
      local-ip: text = "";
      as: uint;
      next-hop: ipv4;
      holdtime: uint=120;
      disable: bool = false;
    }
  }
}

protocols {
  bgp {
    %modinfo: provides bgp;
    %modinfo: depends rib;
    %modinfo: path "bgp/xorp_bgp";
    %modinfo: default_targetname "bgp";
    %modinfo: statusmethod xrl "$(bgp.targetname)/common/0.1/get_status->status:u32&reason:txt";
    %modinfo: shutdownmethod xrl "$(bgp.targetname)/common/0.1/shutdown";
    targetname {
      %set:;
    }
    bgp-id {
      %set: xrl "$(bgp.targetname)/bgp/0.2/set_bgp_id?id:ipv4=$(@)";
      %get: xrl "$(bgp.targetname)/bgp/0.2/get_bgp_id->id:ipv4";
    }
    local-as {
      %set: xrl "$(bgp.targetname)/bgp/0.2/set_local_as?as:u32=$(@)";
      %get: xrl "$(bgp.targetname)/bgp/0.2/get_local_as->as:u32";
    }
    peer @ {
      %create: xrl "$(bgp.targetname)/bgp/0.2/add_peer?local_ip:txt=$(@.local-ip)&local_port:u32=$(@.local-port)&peer_ip:txt=$(@)&peer_port:u32=$(@.peer-port)&as:u32=$(@.as)&next_hop:ipv4=$(@.next-hop)&holdtime:u32=$(@.holdtime)";
      %delete: xrl "$(bgp.targetname)/bgp/0.2/delete_peer?local_ip:txt=$(@.local-ip)&local_port:u32=$(@.local-port)&peer_ip:txt=$(@)&peer_port:u32=$(@.peer-port)";
      %activate: xrl "$(bgp.targetname)/bgp/0.2/enable_peer?local_ip:txt=$(@.local-ip)&local_port:u32=$(@.local-port)&peer_ip:txt=$(@)&peer_port:u32=$(@.peer-port)";
      peer-port {
	%set:; /*the no-op set is to indicate that this node can be set, but 	           not changed*/
      }
      local-port {
	%set:;
      }
      local-ip {
	%set:;
      }
      as {
	%set:;
      }
      holdtime {
	%set:;
      }
      next-hop {
	%set:;
      }
      disable {
	%set: xrl "$(bgp.targetname)/bgp/0.2/set_peer_state?local_ip:txt=$(peer.@.local-ip)&local_port:u32=$(peer.@.local-port)&peer_ip:txt=$(peer.@)&peer_port:u32=$(peer.@.peer-port)&toggle:bool=`~$(@)`";
      }
      set-parameter {
	%set: xrl "$(bgp.targetname)/bgp/0.2/set_parameter?local_ip:txt=$(peer.@.local-ip)&local_port:u32=$(peer.@.local-port)&peer_ip:txt=$(peer.@)&peer_port:u32=$(peer.@.peer-port)&parameter:txt=$(@)";
      }
      enable-ipv4-multicast {
        %set: xrl "$(bgp.targetname)/bgp/0.2/set_parameter?local_ip:txt=$(peer.@.local-ip)&local_port:u32=$(peer.@.local-port)&peer_ip:txt=$(peer.@)&peer_port:u32=$(peer.@.peer-port)&parameter:txt=MultiProtocol.IPv4.Multicast";
      }
      enable-ipv6-unicast {
        %set: xrl "$(bgp.targetname)/bgp/0.2/set_parameter?local_ip:txt=$(peer.@.local-ip)&local_port:u32=$(peer.@.local-port)&peer_ip:txt=$(peer.@)&peer_port:u32=$(peer.@.peer-port)&parameter:txt=MultiProtocol.IPv6.Unicast";
      }
      enable-ipv6-multicast {
        %set: xrl "$(bgp.targetname)/bgp/0.2/set_parameter?local_ip:txt=$(peer.@.local-ip)&local_port:u32=$(peer.@.local-port)&peer_ip:txt=$(peer.@)&peer_port:u32=$(peer.@.peer-port)&parameter:txt=MultiProtocol.IPv6.Multicast";
      }
    }
  }
}
