/* $XORP: xorp/etc/templates/pimsm6.tp,v 1.3 2004/05/18 01:06:48 pavlin Exp $ */

protocols {
    pimsm6 {
	targetname: txt = "PIMSM_6";
	disable: bool = false;

	interface @: txt {
	    vif @: txt {
		enable: bool = true;
		alternative-subnet @: ipv6net {
		}
	    }
	}

	static-rps {
	    rp @: ipv6 {
		group-prefix @: ipv6net {
		    rp-priority: u32 = 192;
		    hash-mask-len: u32 = 126;
		}
	    }
	}

	bootstrap {
	    disable: bool = false;

	    cand-bsr {
		scope-zone @: ipv6net {
		    is-scope-zone: bool = false;
		    cand-bsr-by-vif-name: txt;
		    bsr-priority: u32 = 1;
		    hash-mask-len: u32 = 126;
		}
	    }

	    cand-rp {
		group-prefix @: ipv6net {
		    is-scope-zone: bool = false;
		    cand-rp-by-vif-name: txt;
		    rp-priority: u32 = 192;
		    rp-holdtime: u32 = 150;
		}
	    }
	}

	switch-to-spt-threshold {
	    enable: bool = false;
	    interval-sec: u32 = 0;
	    bytes: u32 = 0;
	}

	traceoptions {
	    flag {
		all {
		    enable: bool = false;
		}
	    }
	}
    }
}

protocols {
    pimsm6 {
	%modinfo: provides		pimsm6;
	%modinfo: depends		mfea6;
	%modinfo: depends		mld;
	%modinfo: depends		rib;
	%modinfo: path			"pim/xorp_pimsm6";
	%modinfo: default_targetname	"pim";
	%modinfo: status_method		xrl "$(pimsm6.targetname)/common/0.1/get_status->status:u32&reason:txt";
	%modinfo: shutdown_method	xrl "$(pimsm6.targetname)/common/0.1/shutdown";

	%mandatory: targetname;

	targetname {
	    %set:;
	}

	disable {
	    %create:;
	    %set: xrl "$(pimsm6.targetname)/pim/0.1/enable_pim?enable:bool=`~$(@)`";
	    %delete: xrl "$(pimsm6.targetname)/pim/0.1/enable_pim?enable:bool=`~$(DEFAULT)`";
	}

	interface @ {
	    vif @ {
		%activate: xrl "$(pimsm6.targetname)/pim/0.1/start_vif?vif_name:txt=$(vif.@)";

		enable {
		    %set: xrl "$(pimsm6.targetname)/pim/0.1/enable_vif?vif_name:txt=$(vif.@)&enable:bool=$(@)";
		    %delete: xrl "$(pimsm6.targetname)/pim/0.1/enable_vif?vif_name:txt=$(vif.@)&enable:bool=`~$(DEFAULT)`";
		}

		alternative-subnet @ {
		    %set: xrl "$(pimsm6.targetname)/pim/0.1/add_alternative_subnet6?vif_name:txt=$(vif.@)&subnet:ipv6net=$(alternative-subnet.@)";
		    %delete: xrl "$(pimsm6.targetname)/pim/0.1/delete_alternative_subnet6?vif_name:txt=$(vif.@)&subnet:ipv6net=$(alternative-subnet.@)";
		}
	    }
	}

	static-rps {
	    %activate: xrl "$(pimsm6.targetname)/pim/0.1/config_static_rp_done";
	    rp @ {
		group-prefix @ {
		    %activate: xrl "$(pimsm6.targetname)/pim/0.1/add_config_static_rp6?group_prefix:ipv6net=$(group-prefix.@)&rp_addr:ipv6=$(rp.@)&rp_priority:u32=$(@.rp-priority)&hash_mask_len:u32=$(@.hash-mask-len)";

		    rp-priority {
			%set:;
		    }

		    hash-mask-len {
			%set:;
		    }
		}
	    }
	}

	bootstrap {
	    %activate: xrl "$(pimsm6.targetname)/pim/0.1/start_bsr";

	    disable {
		%create: xrl "$(pimsm6.targetname)/pim/0.1/enable_bsr?enable:bool=`~$(@)`";
		%set: xrl "$(pimsm6.targetname)/pim/0.1/enable_bsr?enable:bool=`~$(@)`";
		%delete: xrl "$(pimsm6.targetname)/pim/0.1/enable_bsr?enable:bool=`~$(DEFAULT)`";
	    }

	    cand-bsr {
		scope-zone @ {
		    %mandatory: cand-bsr-by-vif-name;

		    %activate: xrl "$(pimsm6.targetname)/pim/0.1/add_config_cand_bsr_by_vif_name6?scope_zone_id:ipv6net=$(scope-zone.@)&is_scope_zone:bool=$(@.is-scope-zone)&vif_name:txt=$(@.cand-bsr-by-vif-name)&bsr_priority:u32=$(@.bsr-priority)&hash_mask_len:u32=$(@.hash-mask-len)";

		    is-scope-zone {
			%set:;
		    }

		    cand-bsr-by-vif-name {
			%set:;
		    }

		    bsr-priority {
			%set:;
		    }

		    hash-mask-len {
			%set:;
		    }
		}
	    }

	    cand-rp {
		group-prefix @ {
		    %mandatory: cand-rp-by-vif-name;

		    %activate: xrl "$(pimsm6.targetname)/pim/0.1/add_config_cand_rp_by_vif_name6?group_prefix:ipv6net=$(group-prefix.@)&is_scope_zone:bool=$(@.is-scope-zone)&vif_name:txt=$(@.cand-rp-by-vif-name)&rp_priority:u32=$(@.rp-priority)&rp_holdtime:u32=$(@.rp-holdtime)";

		    is-scope-zone {
			%set:;
		    }

		    cand-rp-by-vif-name {
			%set:;
		    }

		    rp-priority {
			%set:;
		    }

		    rp-holdtime {
			%set:;
		    }
		}
	    }
	}

	switch-to-spt-threshold {
	    %activate: xrl "$(pimsm6.targetname)/pim/0.1/set_switch_to_spt_threshold?is_enabled:bool=$(@.enable)&interval_sec:u32=$(@.interval-sec)&bytes:u32=$(@.bytes)";
	    %delete: xrl "$(pimsm6.targetname)/pim/0.1/reset_switch_to_spt_threshold";

	    enable {
		%set:;
	    }

	    interval-sec {
		%set:;
	    }

	    bytes {
		%set:;
	    }
	}

	traceoptions {
	    flag {
		all {
		    enable {
			%set: xrl "$(pimsm6.targetname)/pim/0.1/log_trace_all?enable:bool=$(@)";
		    }
		}
	    }
	}
    }
}
