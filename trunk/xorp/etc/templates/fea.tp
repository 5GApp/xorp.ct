/* $XORP: xorp/etc/templates/fea.tp,v 1.3 2003/03/14 23:49:10 hodson Exp $ */

interfaces {
  interface @: text {
    disable: toggle = false;
    description: text = "";
    mac: macaddr;
    mtu: uint;
    vif @: text {
      disable: toggle = false;
      address @: ipv4 {
        prefix-length: uint;
        broadcast: ipv4;
        destination: ipv4;
        multicast-capable: bool;
        point-to-point: bool;
        loopback: bool;
	disable: toggle = false;
      }
      address @: ipv6 {
        prefix-length: uint;
        destination: ipv6;
        multicast-capable: bool;
        point-to-point: bool;
        loopback: bool;
	disable: toggle = false;
      }
    }
  }
}

interfaces {
  %modinfo: provides fea;
  %modinfo: path "../fea/fea";
  %modinfo: ready xrl "fea/common/0.1/get_version->version:txt";
  %modinfo: startcommit xrl "fea/ifmgr/0.1/start_transaction->tid:u32=$(interfaces.TID)";
  %modinfo: endcommit xrl "fea/ifmgr/0.1/commit_transaction?tid:u32=$(interfaces.TID)";
  interface @: text {
    %create: xrl "fea/ifmgr/0.1/create_interface?tid:u32=$(interfaces.TID)&ifname:txt=$(@)";
    %delete: xrl "fea/ifmgr/0.1/delete_interface?tid:u32=$(interfaces.TID)&ifname:txt=$(@)";
    %list: xrl "finder://fea/ifmgr/0.1/get_configured_interface_names->ifnames:list";
    disable {
      %set: xrl "fea/ifmgr/0.1/set_interface_enabled?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&enabled:bool=`~$(@)`";
    }
    description {
      %set: local;
      %get: local;
      %delete: local;
    }
    mac {
      %set: xrl  "fea/ifmgr/0.1/set_mac?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&mac:mac=$(@)";
      %get: xrl  "fea/ifmgr/0.1/get_mac?ifname:txt=$(interface.@)->mac:mac=$(@)";
    }
    vif @: text {
      %create: xrl "fea/ifmgr/0.1/create_vif?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(@)";
      %delete: xrl "fea/ifmgr/0.1/delete_vif?ifname:txt=$(interface.@)&tid:u32=$(interfaces.TID)&vif:txt=$(@)";
      %list: xrl "fea/ifmgr/0.1/get_configured_vif_names?ifname:txt=$(interface.@)->vifs:list";
      disable {
        %set: xrl "fea/ifmgr/0.1/set_vif_enabled?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&enabled:bool=`~$(@)`";
/*        %get: xrl "fea/ifmgr/0.1/get_vif_enabled?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)->enabled:bool=`~$(@)`"; */
      }
      address @: ipv4 {
	%create: xrl "fea/ifmgr/0.1/create_address4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(@)";
	%delete: xrl "fea/ifmgr/0.1/delete_address4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(@)";
	%list: xrl "fea/ifmgr/0.1/get_configured_vif_addresses4?ifname:txt=$(interface.@)&vif:txt->addresses:list";
        disable {
          %set: xrl "fea/ifmgr/0.1/set_address_enabled4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)&enabled:bool=`~$(@)`";
/*        %get: xrl "fea/ifmgr/0.1/get_address_enabled4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)->enabled:bool=`~$(@)`"; */
        }
	prefix-length {
	  %set: xrl "fea/ifmgr/0.1/set_prefix4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)&prefix:u32=$(@)"; 
	  %get: xrl "fea/ifmgr/0.1/get_prefix4?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)->prefix:u32"; 
	}
	broadcast {
	  %set: xrl "fea/ifmgr/0.1/set_broadcast4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)&broadcast:ipv4=$(@)";
	  %get: xrl "fea/ifmgr/0.1/get_broadcast4?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)->broadcast:ipv4=$(@)";
	}
	destination {
	  %set: xrl "fea/ifmgr/0.1/set_endpoint4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)&endpoint:ipv4=$(@)";
	  %get: xrl "fea/ifmgr/0.1/get_endpoint4?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)->endpoint:ipv4=$(@)";
	}
	multicast-capable {
	  %get: xrl "fea/ifmgr/0.1/get_address_flags4?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)->enabled:bool&broadcast:bool&loopback:bool&point_to_point:bool&multicast:bool=$(@)";
	}
	point-to-point {
	  %get: xrl "fea/ifmgr/0.1/get_address_flags4?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)->enabled:bool&broadcast:bool&loopback:bool&point_to_point:bool=$(@)&multicast:bool";
	}
	loopback {
	  %get: xrl "fea/ifmgr/0.1/get_address_flags4?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)->enabled:bool&broadcast:bool&loopback:bool=$(@)&point_to_point:bool&multicast:bool";
	}
      }
      address @: ipv6 {
	%create: xrl "fea/ifmgr/0.1/create_address6?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(@)";
	%delete: xrl "fea/ifmgr/0.1/delete_address6?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(@)";
	%list: xrl "fea/ifmgr/0.1/get_configured_vif_addresses6?ifname:txt=$(interface.@)&vif:txt->addresses:list";
        disable {
          %set: xrl "fea/ifmgr/0.1/set_address_enabled4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)&enabled:bool=`~$(@)`";
/*        %get: xrl "fea/ifmgr/0.1/get_address_enabled4?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv4=$(address.@)->enabled:bool=`~$(@)`"; */
        }
	prefix-length {
	  %set: xrl "fea/ifmgr/0.1/set_prefix6?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(address.@)&prefix:u32=$(@)"; 
	  %get: xrl "fea/ifmgr/0.1/get_prefix6?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(address.@)->prefix:u32"; 
	}
	destination {
	  %set: xrl "fea/ifmgr/0.1/set_endpoint6?tid:u32=$(interfaces.TID)&ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(address.@)&endpoint:ipv6=$(@)";
	  %get: xrl "fea/ifmgr/0.1/get_endpoint6?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(address.@)->endpoint:ipv6=$(@)";
	}
	multicast-capable {
	  %get: xrl "fea/ifmgr/0.1/get_address_flags6?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(address.@)->enabled:bool&loopback:bool&point_to_point:bool&multicast:bool=$(@)";
	}
	point-to-point {
	  %get: xrl "fea/ifmgr/0.1/get_address_flags6?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(address.@)->enabled:bool&loopback:bool&point_to_point:bool=$(@)&multicast:bool";
	}
	loopback {
	  %get: xrl "fea/ifmgr/0.1/get_address_flags6?ifname:txt=$(interface.@)&vif:txt=$(vif.@)&address:ipv6=$(address.@)->enabled:bool&loopback:bool=$(@)&point_to_point:bool&multicast:bool";
	}
      }
    }
  }
}


  
