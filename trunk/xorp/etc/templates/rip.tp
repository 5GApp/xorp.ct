/*
 * RIP attribute descriptions
 */

protocols {
    rip {
	targetname: txt = "rip";
	interface @: txt {
	    vif @: txt {
		address @: ipv4 {
		    metric:			u32	=   1;
		    horizon:			txt    = "split-horizon-poison-reverse" ;
		    enabled:			bool	= false ;
		    passive:			bool	= false ;
		    accept-non-rip-requests:	bool	= true ;
		    accept-default-route:	bool	= false ;
		    advertise-default-route:	bool	= false ;
		    route-expiry-secs:		u32	= 180 ;
		    route-deletion-secs:	u32	= 120 ;
		    triggered-update-min-secs:	u32	=   1 ;
		    triggered-update-max-secs:	u32	=   5 ;
		    table-announce-min-secs:	u32	=  25 ;
		    table-announce-max-secs:	u32	=  35 ;
		    table-request-secs:		u32	=   1 ;
		    interpacket-delay-msecs:	u32	=  50 ;
		    authentication {
			type:			txt	= "none" ;
			password:		txt	= "" ;
		    }
		}
	    }
	}

	import @: txt {
	    metric:u32	= 1 ;
	    tag:u32	= 0 ;
	}
    }
}

/*
 * RIP attribute manipulation.
 */
protocols {
    rip {
	%modinfo:	provides		rip;
	%modinfo:	depends			rib;
	%modinfo:	path			"rip/xorp_rip";
	%modinfo:	default_targetname	"rip";
	%modinfo:	status_method xrl	"$(rip.targetname)/common/0.1/get_status->status:u32&reason:txt";
	%modinfo:	shutdown_method xrl	"$(rip.targetname)/common/0.1/shutdown";

	interface @ {
	    vif @ {
		address @ {
		    %create: xrl "$(rip.targetname)/rip/0.1/add_rip_address?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)" ;
		    %delete: xrl "$(rip.targetname)/rip/0.1/remove_rip_address?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)" ;

		    enabled {
			%set: xrl "$(rip.targetname)/rip/0.1/set_rip_address_enabled?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&enabled:bool=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/rip_address_enabled?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->enabled:bool" ;
		    }

		    metric {
			%set: xrl "$(rip.targetname)/rip/0.1/set_cost?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&cost:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/cost?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->cost:u32" ;
		    }

		    horizon {
			%allow: $(@) "none" "split-horizon" "split-horizon-poison-reverse" ;
			%set: xrl "$(rip.targetname)/rip/0.1/set_horizon?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&horizon:txt=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/horizon?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->horizon:txt" ;
		    }

		    passive {
			%set: xrl "$(rip.targetname)/rip/0.1/set_passive?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&passive:bool=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/passive?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->passive:bool" ;
		    }

		    accept_non_rip_requests {
			%set: xrl "$(rip.targetname)/rip/0.1/set_accept_non_rip_requests?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&accept:bool=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/accept_non_rip_requests?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->accept:bool" ;
		    }

		    accept-default-route {
			%set: xrl "$(rip.targetname)/rip/0.1/set_accept_default_route?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&accept:bool=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/accept_default_route?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->accept:bool" ;
		    }

		    advertise-default-route {
			%set: xrl "$(rip.targetname)/rip/0.1/set_advertise_default_route?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&advertise:bool=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/advertise_default_route?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->advertise:bool" ;
		    }

		    route-expiry-secs {
			%set: xrl "$(rip.targetname)/rip/0.1/set_route_expiry_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&t_secs:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/route_expiry_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->t_secs:u32" ;
		    }

		    route-deletion-secs {
			%set: xrl "$(rip.targetname)/rip/0.1/set_route_deletion_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&t_secs:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/route_deletion_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->t_secs:u32" ;
		    }

		    trigger-update-min-secs {
			%set: xrl "$(rip.targetname)/rip/0.1/set_triggered_update_min_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&t_secs:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/triggered_update_min_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->t_secs:u32" ;
		    }

		    trigger-update-max-secs {
			%set: xrl "$(rip.targetname)/rip/0.1/set_triggered_update_max_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&t_secs:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/triggered_update_max_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->t_secs:u32" ;
		    }

		    table-announce-min-secs {
			%set: xrl "$(rip.targetname)/rip/0.1/set_unsolicited_response_min_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&t_secs:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/unsolicited_response_min_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->t_secs:u32" ;
		    }

		    table-announce-max-secs {
			%set: xrl "$(rip.targetname)/rip/0.1/set_unsolicited_response_max_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&t_secs:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/unsolicited_response_max_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->t_secs:u32" ;
		    }

		    table-request-secs {
			%set: xrl "$(rip.targetname)/rip/0.1/set_table_request_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&t_secs:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/table_request_seconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->t_secs:u32" ;
		    }

		    interpacket-delay-msecs {
			%set: xrl "$(rip.targetname)/rip/0.1/set_interpacket_delay_milliseconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&t_msecs:u32=$(@)" ;
			%get: xrl "$(rip.targetname)/rip/0.1/interpacket_delay_milliseconds?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->t_msecs:u32" ;
		    }

		    status {
			%get: xrl "$(rip.targetname)/rip/0.1/rip_address_status?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)->status:txt=$(@)" ;
		    }

		    authentication {
			%allow: $(@.type) "none" "plaintext" "md5" ;
			%set: xrl "$(rip.targetname)/rip/0.1/set_authentication?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(address.@)&type:txt=$(@.type)&password:txt=$(@.password)" ;
		    }
		}
	    }
	}

	import @: txt {
	    %activate: xrl "$(rip.targetname)/rip/0.1/import_protocol_routes?protocol_name:txt=$(@)&cost:u32=$(@.metric)&tag:u32=$(@.tag)";
	    %delete: xrl "$(rip.targetname)/rip/0.1/no_import_protocol_routes?protocol_name:txt=$(@)";
	}
    }
}
