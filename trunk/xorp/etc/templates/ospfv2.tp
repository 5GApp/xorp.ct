/* $XORP: xorp/etc/templates/ospfv2.tp,v 1.36 2006/02/15 19:06:13 pavlin Exp $ */

protocols {
    ospf4 {
	targetname: txt = "ospfv2";
	router-id: ipv4;
	ip-router-alert: bool = false;

	traceoptions {
	    flag {
		all {
		    disable:		toggle = false;
		}
	    }
	}
	
	area @: ipv4 {
	    area-type:		txt = "normal";

	    area-range @: ipv4net {
		advertise:	bool = true;
	    }

	    virtual-link @: ipv4 {
		transit-area: 		ipv4;
		hello-interval:		u32 = 10;
		router-dead-interval:   u32 = 40;
		retransmit-interval:	u32 = 5;
		transit-delay:		u32 = 1;
		authentication {
		    type:		txt;	/* %deprecated */
		    password:		txt;	/* %deprecated */
		    simple-password:	txt	= "";

		    md5 @: u32 {
			password:		txt	= "";
			start-time:		txt	= "";
			end-time:		txt	= "";
		    }
		}
	    }

	    interface @: txt {
		link-type:	txt = "broadcast";
		
		vif @: txt {

		    address @: ipv4 {
			priority:		u32 = 128;
			hello-interval:		u32 = 10;
			router-dead-interval:   u32 = 40;
			interface-cost:		u32 = 1;
			retransmit-interval:	u32 = 5;
			transit-delay:		u32 = 1;
			authentication {
			    type:		txt;	/* %deprecated */
			    password:		txt;	/* %deprecated */
			    simple-password:	txt	= "";

			    md5 @: u32 {
				password:	txt	= "";
				start-time:	txt	= "";
				end-time:		txt	= "";
			    }
			}
			passive:		bool = false;

			neighbour @: ipv4 {
			    router-id:  ipv4;
			}

			disable:		toggle = false;
		    }
		}
	    }
	}

	import: txt;
	export: txt;
    }
}

policy {
    policy-statement @: txt {
        term @: txt {
            from {
		nexthop4: ipv4range;
		metric: u32range;
		ebit: bool;
		tag: u32range;
            }
	    to {
		nexthop4: ipv4range;
		metric: u32range;
		ebit: bool;
		tag: u32range;
	    }
	    then {
		nexthop4: ipv4;
		metric: u32;
		ebit: bool;
		tag: u32;
	    }
        }
    }
}

protocols {
    ospf4 {
	%help:	  short "Configure the OSPF protocol";
	%modinfo: provides ospf4;
	%modinfo: depends rib;
	%modinfo: depends policy;
	%modinfo: path "ospf/xorp_ospfv2";
	%modinfo: default_targetname "ospfv2";
	%modinfo: status_method xrl "$(ospf4.targetname)/common/0.1/get_status->status:u32&reason:txt";
	%modinfo: shutdown_method xrl "$(ospf4.targetname)/common/0.1/shutdown";

	%mandatory: $(@.router-id);
	%mandatory: $(@.targetname);

	targetname {
	    %user-hidden: "XRL target name";
	    %help:	short "Set the target name";
	    %set:;
	}

	router-id {
	    %help: short "A unique 32-bit identifier within this AS";
	    %help: long
"A 32-bit number assigned to each router running
the OSPF protocol. This number uniquely identifies 
the router within an Autonomous System";

	    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_router_id?id:ipv4=$(@)";
	}

	ip-router-alert {
	    %help: short "Send the IP router alert option in packets";
	    %help: long
"If this option is true the IP router alert option will be set in all
transmitted packets";

	    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_ip_router_alert?ip_router_alert:bool=$(@)";
	}
	
	area @: ipv4 {
	    %help: short "The OSPF area to which the attached network belongs";

	    %mandatory: $(@.area-type);

	    area-type {
		%help: short "Type of area";
		%allow: $(@) "normal" %help: "OSPF normal area";
		%allow: $(@) "stub" %help: "OSPF stubby area";
		%allow: $(@) "nssa" %help: "OSPF not-so-stubby area";

		%set:;
	    }

	    %create: xrl "$(ospf4.targetname)/ospfv2/0.1/create_area_router?area:ipv4=$(@)&type:txt=$(@.area-type)";
	    %delete: xrl "$(ospf4.targetname)/ospfv2/0.1/destroy_area_router?area:ipv4=$(@)";

	    area-range @: ipv4net {
		%help: short "Area range for generating summaries";

		%mandatory: $(@.advertise);

		%create: xrl "$(ospf4.targetname)/ospfv2/0.1/area_range_add?area:ipv4=$(area.@)&net:ipv4net=$(@)&advertise:bool=$(@.advertise)";
		%delete: xrl "$(ospf4.targetname)/ospfv2/0.1/area_range_delete?area:ipv4=$(area.@)&net:ipv4net=$(@)";

		advertise {
		    %help: short "Advertise or DoNotAdvertise";

		    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/area_range_change_state?area:ipv4=$(area.@)&net:ipv4net=$(area-range.@)&advertise:bool=$(@)";
		}
	    }

	    virtual-link @: ipv4 {
		%help: short "virtual link";

		%create: xrl "$(ospf4.targetname)/ospfv2/0.1/create_virtual_link?neighbour_id:ipv4=$(virtual-link.@)&area:ipv4=$(area.@)";
		%delete: xrl "$(ospf4.targetname)/ospfv2/0.1/delete_virtual_link?neighbour_id:ipv4=$(virtual-link.@)";

		transit-area {
		    %help: short "Area through which to transit";

		    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/transit_area_virtual_link?neighbour_id:ipv4=$(virtual-link.@)&transit_area:ipv4=$(@)";
		}

		hello-interval {
		    %help: short
			"Hello packets sent every interval seconds";

		    %allow-range: $(@) "1" "65535" %help: "The Hello packets interval (in seconds)";

		    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_hello_interval?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&interval:u32=$(@)";
		}

		router-dead-interval {
		    %help: short "Seconds to wait before considering a neighbour dead";

		    %allow-range: $(@) "1" "4294967295" %help: "The neighbour router dead interval (in seconds)";

		    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_router_dead_interval?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&interval:u32=$(@)";
		}

		retransmit-interval {
		    %help: short "The retransmit interval (RxmtInterval)";
			
		    %allow-range: $(@) "1" "65535" %help: "The retransmit interval (in seconds)";

		    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_retransmit_interval?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&interval:u32=$(@)";
		}

		transit-delay {
		    %help: short "Add to age field of all transmitted LSAs";

		    %allow-range: $(@) "0" "3600" %help: "The extra addition to age field of all transmitted LSAs";

		    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_inftransdelay?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&delay:u32=$(@)";
		}

		authentication {
		    %help: short "Set the authentication";

		    type {
			%deprecated: "Statement 'type' is obsoleted by 'simple-password' and 'md5'";
			%help: short "Set the authentication type";
			%allow: $(@) "none" %help: "No authentication";
			%allow: $(@) "simple" %help: "Simple password authentication";
			%allow: $(@) "md5" %help: "MD5 authentication";
		    }

		    password {
			%deprecated: "Statement 'password' is replaced with 'simple-password'";
			%help: short "Set the authentication password";
		    }

		    simple-password {
			%help: short "Set simple password authentication key";
			%create: xrl "$(ospf4.targetname)/ospfv2/0.1/set_simple_authentication_key?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&password:txt=$(@)";
			%set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_simple_authentication_key?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&password:txt=$(@)";
			%delete: xrl "$(ospf4.targetname)/ospfv2/0.1/delete_simple_authentication_key?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)";
		    }

		    md5 @ {
			%help: short "Set MD5 authentication key";
			%allow-range: $(@) "0" "255" %help: "The MD5 authentication key ID";
			%activate: xrl "$(ospf4.targetname)/ospfv2/0.1/set_md5_authentication_key?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&key_id:u32=$(@)&password:txt=$(@.password)&start_time:txt=$(@.start-time)&end_time:txt=$(@.end-time)";
			%update: xrl "$(ospf4.targetname)/ospfv2/0.1/set_md5_authentication_key?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&key_id:u32=$(@)&password:txt=$(@.password)&start_time:txt=$(@.start-time)&end_time:txt=$(@.end-time)";
			%delete: xrl "$(ospf4.targetname)/ospfv2/0.1/delete_md5_authentication_key?ifname:txt=vlink&vifname:txt=$(virtual-link.@)&area:ipv4=$(area.@)&key_id:u32=$(@)";
			password {
			    %help: short "Set the authentication password";
			}
			start-time {
			    %help: short "Set the authentication start time (YYYY-MM-DD.HH:MM)";
			}
			end-time {
			    %help: short "Set the authentication end time (YYYY-MM-DD.HH:MM)";
			}
		    }
		}
	    }

	    interface @: txt {
		%mandatory: $(@.link-type);

		link-type {
		    %help: short "broadcast or p2p or p2m";
		    %allow: $(@) "broadcast" %help: "Broadcast link";
		    %allow: $(@) "p2p" %help: "Point-to-point link";
		    %allow: $(@) "p2m" %help: "Point-to-multipoint link";

		    %set:;
		}

		vif @: txt {

		    address @ {
			%create: xrl "$(ospf4.targetname)/ospfv2/0.1/create_peer?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&addr:ipv4=$(@)&prefix_len:u32=0&mtu:u32=0&type:txt=$(interface.@.link-type)&area:ipv4=$(area.@)";
			%delete: xrl "$(ospf4.targetname)/ospfv2/0.1/delete_peer?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)";

			priority {
			    %help: short "Priority used in DR election";

			    %allow-range: $(@) "0" "255" %help: "The priority used in DR election";

			    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_router_priority?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&priority:u32=$(@)";
			}

			hello-interval {
			    %help: short
				"Hello packets sent every interval seconds";

			    %allow-range: $(@) "1" "65535" %help: "The Hello packets interval (in seconds)";

			    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_hello_interval?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&interval:u32=$(@)";
			}

			router-dead-interval {
			    %help: short
	"Seconds to wait before considering a neighbour dead";

			    %allow-range: $(@) "1" "4294967295" %help: "The neighbour router dead interval (in seconds)";

			    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_router_dead_interval?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&interval:u32=$(@)";
			}

			interface-cost {
			    %help: short "Cost of this address";
			
			    %allow-range: $(@) "1" "65535" %help: "The cost of this address";

			    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_interface_cost?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&cost:u32=$(@)";
			}

			retransmit-interval {
			    %help: short "The retransmit interval (RxmtInterval)";
			
			    %allow-range: $(@) "1" "65535" %help: "The retransmit interval (in seconds)";

			    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_retransmit_interval?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&interval:u32=$(@)";
			}

			transit-delay {
			    %help: short
				"Add to age field of all transmitted LSAs";

			    %allow-range: $(@) "0" "3600" %help: "The extra addition to age field of all transmitted LSAs";

			    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_inftransdelay?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&delay:u32=$(@)";
			}

			authentication {
			    %help: short "Set the authentication";

			    type {
				%deprecated: "Statement 'type' is obsoleted by 'simple-password' and 'md5'";
				%help: short "Set the authentication type";
				%allow: $(@) "none" %help: "No authentication";
				%allow: $(@) "simple" %help: "Simple password authentication";
				%allow: $(@) "md5" %help: "MD5 authentication";
			    }

			    password {
				%deprecated: "Statement 'password' is replaced with 'simple-password'";
				%help: short "Set the authentication password";
			    }

			    simple-password {
				%help: short "Set simple password authentication key";
				%create: xrl "$(ospf4.targetname)/ospfv2/0.1/set_simple_authentication_key?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&password:txt=$(@)";
				%set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_simple_authentication_key?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&password:txt=$(@)";
				%delete: xrl "$(ospf4.targetname)/ospfv2/0.1/delete_simple_authentication_key?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)";
			    }

			    md5 @ {
				%help: short "Set MD5 authentication key";
				%allow-range: $(@) "0" "255" %help: "The MD5 authentication key ID";
				%activate: xrl "$(ospf4.targetname)/ospfv2/0.1/set_md5_authentication_key?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&key_id:u32=$(@)&password:txt=$(@.password)&start_time:txt=$(@.start-time)&end_time:txt=$(@.end-time)";
				%update: xrl "$(ospf4.targetname)/ospfv2/0.1/set_md5_authentication_key?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&key_id:u32=$(@)&password:txt=$(@.password)&start_time:txt=$(@.start-time)&end_time:txt=$(@.end-time)";
				%delete: xrl "$(ospf4.targetname)/ospfv2/0.1/delete_md5_authentication_key?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&key_id:u32=$(@)";
				password {
				    %help: short "Set the authentication password";
				}
				start-time {
				    %help: short "Set the authentication start time (YYYY-MM-DD.HH:MM)";
				}
				end-time {
				    %help: short "Set the authentication end time (YYYY-MM-DD.HH:MM)";
				}
			    }
			}

			passive {
			    %help: short "Set the interface into loopback";

			    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_passive?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&passive:bool=$(@)";
			}

			disable {
			    %help: short "disable OSPF on address";

			    %set: xrl "$(ospf4.targetname)/ospfv2/0.1/set_peer_state?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&enable:bool=`~$(@)`";
			}

			neighbour @: ipv4 {
			    %help: short "Neighbours address";
			    
			    %mandatory: $(@.router-id);

			    router-id {
				%help: short "Neighbours router-id";

				%set:;
			    }

			    %create: xrl "$(ospf4.targetname)/ospfv2/0.1/add_neighbour?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&neighbour_address:ipv4=$(@)&neighbour_id:ipv4=$(@.router-id)";
			    %delete: xrl "$(ospf4.targetname)/ospfv2/0.1/remove_neighbour?ifname:txt=$(interface.@)&vifname:txt=$(vif.@)&area:ipv4=$(area.@)&neighbour_address:ipv4=$(@)&neighbour_id:ipv4=$(@.router-id)";
			}
		    }
		}
	    }
	}

	traceoptions {
	    %help:	short "Configure the tracing options";
	    flag {
		%help:	short "Configure the tracing operation to perform";
		all {
		    %help:	short	"Configure all tracing operations";

		    disable {
			%help:	short	"Disable all tracing operations";
			%set:	xrl "$(ospf4.targetname)/ospfv2/0.1/trace?tvar:txt=all&enable:bool=`~$(@)`";
			%delete: xrl "$(ospf4.targetname)/ospfv2/0.1/trace?tvar:txt=all&enable:bool=$(DEFAULT)";
		    }

		}
	    }
	}

	import {
	    %help: short "Import policy";
	    %delete: xrl "$(policy.targetname)/policy/0.1/import?protocol:txt=ospf4&policies:txt=";
            %set: xrl "$(policy.targetname)/policy/0.1/import?protocol:txt=ospf4&policies:txt=$(@)";
        }
        export {
	    %help: short "Export policy";
            %delete: xrl "$(policy.targetname)/policy/0.1/export?protocol:txt=ospf4&policies:txt=";
            %set: xrl "$(policy.targetname)/policy/0.1/export?protocol:txt=ospf4&policies:txt=$(@)";
        }
    }
}

policy {
    %create: xrl "$(policy.targetname)/policy/0.1/set_proto_target?protocol:txt=ospf4&target:txt=ospfv2";
    %create: xrl "$(policy.targetname)/policy/0.1/add_varmap?protocol:txt=ospf4&variable:txt=network4&type:txt=ipv4net&access:txt=r&id:u32=10";
    %create: xrl "$(policy.targetname)/policy/0.1/add_varmap?protocol:txt=ospf4&variable:txt=nexthop4&type:txt=ipv4&access:txt=rw&id:u32=11";
    %create: xrl "$(policy.targetname)/policy/0.1/add_varmap?protocol:txt=ospf4&variable:txt=metric&type:txt=u32&access:txt=rw&id:u32=12";
    %create: xrl "$(policy.targetname)/policy/0.1/add_varmap?protocol:txt=ospf4&variable:txt=ebit&type:txt=bool&access:txt=rw&id:u32=13";
    %create: xrl "$(policy.targetname)/policy/0.1/add_varmap?protocol:txt=ospf4&variable:txt=tag&type:txt=u32&access:txt=rw&id:u32=14";

    policy-statement @: txt {
        term @: txt {
            from {
		nexthop4 {
		    %allow-operator: ":" "==" "!=" "<" ">" "<=" ">=";
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=0&order:txt=$(#)&statement:txt=nexthop4 $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=0&order:txt=$(#)&statement:txt=";
		}
		metric {
		    %allow-operator: ":" "==" "!=" "<" ">" "<=" ">=";
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=0&order:txt=$(#)&statement:txt=metric $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=0&order:txt=$(#)&statement:txt=";
		}
		ebit {
		    %allow-operator: ":" "==" "!=";
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=0&order:txt=$(#)&statement:txt=ebit $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=0&order:txt=$(#)&statement:txt=";
		}
		tag {
		    %allow-operator: ":" "==" "!=" "<" ">" "<=" ">=";
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=0&order:txt=$(#)&statement:txt=tag $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=0&order:txt=$(#)&statement:txt=";
		}
            }
	    to {
		nexthop4 {
		    %allow-operator: ":" "==" "!=" "<" ">" "<=" ">=";
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=1&order:txt=$(#)&statement:txt=nexthop4 $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=1&order:txt=$(#)&statement:txt=";
		}
		metric {
		    %allow-operator: ":" "==" "!=" "<" ">" "<=" ">=";
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=1&order:txt=$(#)&statement:txt=metric $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=1&order:txt=$(#)&statement:txt=";
		}
		ebit {
		    %allow-operator: ":" "==" "!=";
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=1&order:txt=$(#)&statement:txt=ebit $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=1&order:txt=$(#)&statement:txt=";
		}
		tag {
		    %allow-operator: ":" "==" "!=" "<" ">" "<=" ">=";
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=1&order:txt=$(#)&statement:txt=tag $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=1&order:txt=$(#)&statement:txt=";
		}
	    }
	    then {
		nexthop4 {
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=2&order:txt=$(#)&statement:txt=nexthop4 $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=2&order:txt=$(#)&statement:txt=";
		}
		metric {
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=2&order:txt=$(#)&statement:txt=metric $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=2&order:txt=$(#)&statement:txt=";
		}
		ebit {
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=2&order:txt=$(#)&statement:txt=ebit $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=2&order:txt=$(#)&statement:txt=";
		}
		tag {
		    %set: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=2&order:txt=$(#)&statement:txt=tag $(<>) $(@);";
		    %delete: xrl "$(policy.targetname)/policy/0.1/update_term_block?policy:txt=$(policy-statement.@)&term:txt=$(term.@)&block:u32=2&order:txt=$(#)&statement:txt=";
		}
	    }
        }
    }
}
