# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Redefine the bin installation directory

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@
AMTAR = @AMTAR@
AS = @AS@
AWK = @AWK@
CC = @CC@
CLI_CURSES_LIB = @CLI_CURSES_LIB@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
EXEEXT = @EXEEXT@
FLOWER_MALLOC = @FLOWER_MALLOC@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBTOOL = @LIBTOOL@
LIBTOOL_DEPS = @LIBTOOL_DEPS@
LN_S = @LN_S@
MAINT = @MAINT@
MIBS = @MIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OSPFD = @OSPFD@
OSPFD_OS = @OSPFD_OS@
PACKAGE = @PACKAGE@
PYTHON = @PYTHON@
PY_BUILD = @PY_BUILD@
RANLIB = @RANLIB@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

bindir = $(prefix)/$(subdir)

# Redefine the sbin installation directory
# XXX: the trailing "bin" is not a mistake, but a hack to install
# "call_xrl" into a different directory. Sigh...
sbindir = $(prefix)/bin

# -- Real Programs
bin_PROGRAMS = xorp_finder
sbin_PROGRAMS = call_xrl

# -- No-install Libtool Libraries
noinst_LTLIBRARIES = libxipc.la libfinder.la

# -- Test Programs and scripts (order of increasing complexity)
test_programs = test_xrl_error test_xrl test_xrl_atom test_xrl_args test_header test_inproc test_sudp test_stcp test_lemming test_xrl_router test_finder_tcp test_finder_messenger test_finder_msgs test_finder test_finder_events

test_extra_programs = test_xrl_parser test_finder_to test_xrl_receiver test_xrl_sender

test_scripts = test_xrl_parser.sh test_finder_deaths.sh test_leaks.sh

TESTS = $(test_programs) $(test_scripts)

# -- No-install Programs
check_PROGRAMS = $(test_programs) $(test_extra_programs)
check_SCRIPTS = $(test_scripts)

# -- Libraries and library flags to link the binary programs
LDADD = ./libfinder.la ./libxipc.la $(top_builddir)/libxorp/libxorp.la $(top_builddir)/libcomm/libcomm.la

xorp_finder_LDADD = libfinder.la ./libxipc.la $(top_builddir)/libxorp/libxorp.la $(top_builddir)/libcomm/libcomm.la

# -- Program Sources
call_xrl_SOURCES = call_xrl.cc
xorp_finder_SOURCES = finder_main.cc

test_finder_messenger_SOURCES = test_finder_messenger.cc
test_finder_msgs_SOURCES = test_finder_msgs.cc
test_finder_tcp_SOURCES = test_finder_tcp.cc

test_header_SOURCES = test_header.cc
test_inproc_SOURCES = test_inproc.cc
test_lemming_SOURCES = test_lemming.cc
test_stcp_SOURCES = test_stcp.cc
test_sudp_SOURCES = test_sudp.cc
test_xrl_SOURCES = test_xrl.cc
test_xrl_atom_SOURCES = test_xrl_atom.cc
test_xrl_args_SOURCES = test_xrl_args.cc
test_xrl_parser_SOURCES = test_xrl_parser.cc
test_xrl_error_SOURCES = test_xrl_error.cc

test_xrl_router_SOURCES = test_xrl_router.cc
test_xrl_router_LDADD = libfinder.la $(LDADD)

test_finder_SOURCES = test_finder.cc
test_finder_LDADD = libfinder.la $(LDADD)

test_finder_events_SOURCES = test_finder_events.cc $(top_srcdir)/xrl/targets/test_finder_events_base.hh $(top_srcdir)/xrl/targets/test_finder_events_base.cc $(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.hh $(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc
test_finder_events_LDADD = libfinder.la $(LDADD)

test_finder_to_SOURCES = test_finder_to.cc
test_finder_to_LDADD = libfinder.la $(LDADD)

test_xrl_receiver_SOURCES = test_xrl_receiver.cc $(top_srcdir)/xrl/targets/test_xrls_base.hh $(top_srcdir)/xrl/targets/test_xrls_base.cc

# XXX: extra source files if both sender and receiver are within same binary
test_xrl_sender_SOURCES = test_xrl_sender.cc $(top_srcdir)/xrl/interfaces/test_xrls_xif.hh $(top_srcdir)/xrl/interfaces/test_xrls_xif.cc $(top_srcdir)/xrl/targets/test_xrls_base.hh $(top_srcdir)/xrl/targets/test_xrls_base.cc

# -- Library Sources (libxipc)

# -- Library Sources (libxipc - built sources)
libxipc_la_SOURCES = finder_module.h hmac_md5.h ipc_module.h xrl_module.h finder_client.hh finder_client_observer.hh finder_client_xrl_target.hh finder_constants.hh finder_ipc.hh finder_messenger.hh finder_msgs.hh finder_tcp.hh finder_tcp_messenger.hh header.hh hmac.hh permits.hh sockutil.hh xrl.hh xrl_args.hh xrl_atom.hh xrl_atom_encoding.hh xrl_atom_list.hh xrl_cmd_map.hh xrl_dispatcher.hh xrl_error.hh xrl_parser.hh xrl_parser_input.hh xrl_pf.hh xrl_pf_factory.hh xrl_pf_inproc.hh xrl_pf_kill.hh xrl_pf_stcp.hh xrl_pf_stcp_ph.hh xrl_pf_sudp.hh xrl_router.hh xrl_sender.hh xrl_std_router.hh xrl_tokens.hh xuid.hh hmac_md5.c finder_client.cc finder_client_observer.cc finder_client_xrl_target.cc finder_messenger.cc finder_msgs.cc finder_tcp.cc finder_tcp_messenger.cc header.cc hmac.cc permits.cc sockutil.cc xrl.cc xrl_args.cc xrl_atom.cc xrl_atom_encoding.cc xrl_atom_list.cc xrl_cmd_map.cc xrl_dispatcher.cc xrl_error.cc xrl_parser.cc xrl_parser_input.cc xrl_pf.cc xrl_pf_factory.cc xrl_pf_inproc.cc xrl_pf_kill.cc xrl_pf_stcp.cc xrl_pf_stcp_ph.cc xrl_pf_sudp.cc xrl_router.cc xrl_std_router.cc xrl_tokens.cc xuid.cc $(top_srcdir)/xrl/interfaces/common_xif.hh $(top_srcdir)/xrl/interfaces/common_xif.cc $(top_srcdir)/xrl/targets/finder_client_base.hh $(top_srcdir)/xrl/targets/finder_client_base.cc $(top_srcdir)/xrl/interfaces/finder_xif.hh $(top_srcdir)/xrl/interfaces/finder_xif.cc

# -- Library Sources (libfinder)

# -- Library Sources (libfinder - built sources)
libfinder_la_SOURCES = finder.hh finder_constants.hh finder_server.hh finder_xrl_queue.hh finder_xrl_target.hh finder.cc finder_server.cc finder_xrl_queue.cc finder_xrl_target.cc $(top_srcdir)/xrl/targets/finder_base.hh $(top_srcdir)/xrl/targets/finder_base.cc $(top_srcdir)/xrl/interfaces/finder_client_xif.hh $(top_srcdir)/xrl/interfaces/finder_client_xif.cc $(top_srcdir)/xrl/interfaces/finder_event_observer_xif.hh $(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc

# -- Extra files and directories to add to the distribution
EXTRA_DIST = bench_ipc.awk bench_ipc.sh bench_ipc_gnuplot.sh


################################################################
INCLUDES = -I$(top_srcdir)
subdir = libxipc
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libfinder_la_LDFLAGS =
libfinder_la_LIBADD =
am_libfinder_la_OBJECTS = finder.lo finder_server.lo finder_xrl_queue.lo \
	finder_xrl_target.lo finder_base.lo finder_client_xif.lo \
	finder_event_observer_xif.lo
libfinder_la_OBJECTS = $(am_libfinder_la_OBJECTS)
libxipc_la_LDFLAGS =
libxipc_la_LIBADD =
am_libxipc_la_OBJECTS = hmac_md5.lo finder_client.lo \
	finder_client_observer.lo finder_client_xrl_target.lo \
	finder_messenger.lo finder_msgs.lo finder_tcp.lo \
	finder_tcp_messenger.lo header.lo hmac.lo permits.lo \
	sockutil.lo xrl.lo xrl_args.lo xrl_atom.lo xrl_atom_encoding.lo \
	xrl_atom_list.lo xrl_cmd_map.lo xrl_dispatcher.lo xrl_error.lo \
	xrl_parser.lo xrl_parser_input.lo xrl_pf.lo xrl_pf_factory.lo \
	xrl_pf_inproc.lo xrl_pf_kill.lo xrl_pf_stcp.lo \
	xrl_pf_stcp_ph.lo xrl_pf_sudp.lo xrl_router.lo \
	xrl_std_router.lo xrl_tokens.lo xuid.lo common_xif.lo \
	finder_client_base.lo finder_xif.lo
libxipc_la_OBJECTS = $(am_libxipc_la_OBJECTS)
bin_PROGRAMS = xorp_finder$(EXEEXT)
check_PROGRAMS = test_xrl_error$(EXEEXT) test_xrl$(EXEEXT) \
	test_xrl_atom$(EXEEXT) test_xrl_args$(EXEEXT) \
	test_header$(EXEEXT) test_inproc$(EXEEXT) test_sudp$(EXEEXT) \
	test_stcp$(EXEEXT) test_lemming$(EXEEXT) \
	test_xrl_router$(EXEEXT) test_finder_tcp$(EXEEXT) \
	test_finder_messenger$(EXEEXT) test_finder_msgs$(EXEEXT) \
	test_finder$(EXEEXT) test_finder_events$(EXEEXT) \
	test_xrl_parser$(EXEEXT) test_finder_to$(EXEEXT) \
	test_xrl_receiver$(EXEEXT) test_xrl_sender$(EXEEXT)
sbin_PROGRAMS = call_xrl$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(sbin_PROGRAMS)

am_call_xrl_OBJECTS = call_xrl.$(OBJEXT)
call_xrl_OBJECTS = $(am_call_xrl_OBJECTS)
call_xrl_LDADD = $(LDADD)
call_xrl_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
call_xrl_LDFLAGS =
am_test_finder_OBJECTS = test_finder.$(OBJEXT)
test_finder_OBJECTS = $(am_test_finder_OBJECTS)
test_finder_DEPENDENCIES = libfinder.la ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_finder_LDFLAGS =
am_test_finder_events_OBJECTS = test_finder_events.$(OBJEXT) \
	test_finder_events_base.$(OBJEXT) \
	finder_event_notifier_xif.$(OBJEXT)
test_finder_events_OBJECTS = $(am_test_finder_events_OBJECTS)
test_finder_events_DEPENDENCIES = libfinder.la ./libfinder.la \
	./libxipc.la $(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_finder_events_LDFLAGS =
am_test_finder_messenger_OBJECTS = test_finder_messenger.$(OBJEXT)
test_finder_messenger_OBJECTS = $(am_test_finder_messenger_OBJECTS)
test_finder_messenger_LDADD = $(LDADD)
test_finder_messenger_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_finder_messenger_LDFLAGS =
am_test_finder_msgs_OBJECTS = test_finder_msgs.$(OBJEXT)
test_finder_msgs_OBJECTS = $(am_test_finder_msgs_OBJECTS)
test_finder_msgs_LDADD = $(LDADD)
test_finder_msgs_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_finder_msgs_LDFLAGS =
am_test_finder_tcp_OBJECTS = test_finder_tcp.$(OBJEXT)
test_finder_tcp_OBJECTS = $(am_test_finder_tcp_OBJECTS)
test_finder_tcp_LDADD = $(LDADD)
test_finder_tcp_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_finder_tcp_LDFLAGS =
am_test_finder_to_OBJECTS = test_finder_to.$(OBJEXT)
test_finder_to_OBJECTS = $(am_test_finder_to_OBJECTS)
test_finder_to_DEPENDENCIES = libfinder.la ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_finder_to_LDFLAGS =
am_test_header_OBJECTS = test_header.$(OBJEXT)
test_header_OBJECTS = $(am_test_header_OBJECTS)
test_header_LDADD = $(LDADD)
test_header_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_header_LDFLAGS =
am_test_inproc_OBJECTS = test_inproc.$(OBJEXT)
test_inproc_OBJECTS = $(am_test_inproc_OBJECTS)
test_inproc_LDADD = $(LDADD)
test_inproc_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_inproc_LDFLAGS =
am_test_lemming_OBJECTS = test_lemming.$(OBJEXT)
test_lemming_OBJECTS = $(am_test_lemming_OBJECTS)
test_lemming_LDADD = $(LDADD)
test_lemming_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_lemming_LDFLAGS =
am_test_stcp_OBJECTS = test_stcp.$(OBJEXT)
test_stcp_OBJECTS = $(am_test_stcp_OBJECTS)
test_stcp_LDADD = $(LDADD)
test_stcp_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_stcp_LDFLAGS =
am_test_sudp_OBJECTS = test_sudp.$(OBJEXT)
test_sudp_OBJECTS = $(am_test_sudp_OBJECTS)
test_sudp_LDADD = $(LDADD)
test_sudp_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_sudp_LDFLAGS =
am_test_xrl_OBJECTS = test_xrl.$(OBJEXT)
test_xrl_OBJECTS = $(am_test_xrl_OBJECTS)
test_xrl_LDADD = $(LDADD)
test_xrl_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_xrl_LDFLAGS =
am_test_xrl_args_OBJECTS = test_xrl_args.$(OBJEXT)
test_xrl_args_OBJECTS = $(am_test_xrl_args_OBJECTS)
test_xrl_args_LDADD = $(LDADD)
test_xrl_args_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_xrl_args_LDFLAGS =
am_test_xrl_atom_OBJECTS = test_xrl_atom.$(OBJEXT)
test_xrl_atom_OBJECTS = $(am_test_xrl_atom_OBJECTS)
test_xrl_atom_LDADD = $(LDADD)
test_xrl_atom_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_xrl_atom_LDFLAGS =
am_test_xrl_error_OBJECTS = test_xrl_error.$(OBJEXT)
test_xrl_error_OBJECTS = $(am_test_xrl_error_OBJECTS)
test_xrl_error_LDADD = $(LDADD)
test_xrl_error_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_xrl_error_LDFLAGS =
am_test_xrl_parser_OBJECTS = test_xrl_parser.$(OBJEXT)
test_xrl_parser_OBJECTS = $(am_test_xrl_parser_OBJECTS)
test_xrl_parser_LDADD = $(LDADD)
test_xrl_parser_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_xrl_parser_LDFLAGS =
am_test_xrl_receiver_OBJECTS = test_xrl_receiver.$(OBJEXT) \
	test_xrls_base.$(OBJEXT)
test_xrl_receiver_OBJECTS = $(am_test_xrl_receiver_OBJECTS)
test_xrl_receiver_LDADD = $(LDADD)
test_xrl_receiver_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_xrl_receiver_LDFLAGS =
am_test_xrl_router_OBJECTS = test_xrl_router.$(OBJEXT)
test_xrl_router_OBJECTS = $(am_test_xrl_router_OBJECTS)
test_xrl_router_DEPENDENCIES = libfinder.la ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_xrl_router_LDFLAGS =
am_test_xrl_sender_OBJECTS = test_xrl_sender.$(OBJEXT) \
	test_xrls_xif.$(OBJEXT) test_xrls_base.$(OBJEXT)
test_xrl_sender_OBJECTS = $(am_test_xrl_sender_OBJECTS)
test_xrl_sender_LDADD = $(LDADD)
test_xrl_sender_DEPENDENCIES = ./libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
test_xrl_sender_LDFLAGS =
am_xorp_finder_OBJECTS = finder_main.$(OBJEXT)
xorp_finder_OBJECTS = $(am_xorp_finder_OBJECTS)
xorp_finder_DEPENDENCIES = libfinder.la ./libxipc.la \
	$(top_builddir)/libxorp/libxorp.la \
	$(top_builddir)/libcomm/libcomm.la
xorp_finder_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
@AMDEP_TRUE@DEP_FILES = $(DEPDIR)/call_xrl.Po $(DEPDIR)/common_xif.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder.Plo $(DEPDIR)/finder_base.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_client.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_client_base.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_client_observer.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_client_xif.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_client_xrl_target.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_event_notifier_xif.Po \
@AMDEP_TRUE@	$(DEPDIR)/finder_event_observer_xif.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_main.Po \
@AMDEP_TRUE@	$(DEPDIR)/finder_messenger.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_msgs.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_server.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_tcp.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_tcp_messenger.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_xif.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_xrl_queue.Plo \
@AMDEP_TRUE@	$(DEPDIR)/finder_xrl_target.Plo \
@AMDEP_TRUE@	$(DEPDIR)/header.Plo $(DEPDIR)/hmac.Plo \
@AMDEP_TRUE@	$(DEPDIR)/hmac_md5.Plo $(DEPDIR)/permits.Plo \
@AMDEP_TRUE@	$(DEPDIR)/sockutil.Plo $(DEPDIR)/test_finder.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_finder_events.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_finder_events_base.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_finder_messenger.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_finder_msgs.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_finder_tcp.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_finder_to.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_header.Po $(DEPDIR)/test_inproc.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_lemming.Po $(DEPDIR)/test_stcp.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_sudp.Po $(DEPDIR)/test_xrl.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrl_args.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrl_atom.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrl_error.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrl_parser.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrl_receiver.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrl_router.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrl_sender.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrls_base.Po \
@AMDEP_TRUE@	$(DEPDIR)/test_xrls_xif.Po $(DEPDIR)/xrl.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_args.Plo $(DEPDIR)/xrl_atom.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_atom_encoding.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_atom_list.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_cmd_map.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_dispatcher.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_error.Plo $(DEPDIR)/xrl_parser.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_parser_input.Plo $(DEPDIR)/xrl_pf.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_pf_factory.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_pf_inproc.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_pf_kill.Plo $(DEPDIR)/xrl_pf_stcp.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_pf_stcp_ph.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_pf_sudp.Plo $(DEPDIR)/xrl_router.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_std_router.Plo \
@AMDEP_TRUE@	$(DEPDIR)/xrl_tokens.Plo $(DEPDIR)/xuid.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
DIST_SOURCES = $(libfinder_la_SOURCES) $(libxipc_la_SOURCES) \
	$(call_xrl_SOURCES) $(test_finder_SOURCES) \
	$(test_finder_events_SOURCES) $(test_finder_messenger_SOURCES) \
	$(test_finder_msgs_SOURCES) $(test_finder_tcp_SOURCES) \
	$(test_finder_to_SOURCES) $(test_header_SOURCES) \
	$(test_inproc_SOURCES) $(test_lemming_SOURCES) \
	$(test_stcp_SOURCES) $(test_sudp_SOURCES) $(test_xrl_SOURCES) \
	$(test_xrl_args_SOURCES) $(test_xrl_atom_SOURCES) \
	$(test_xrl_error_SOURCES) $(test_xrl_parser_SOURCES) \
	$(test_xrl_receiver_SOURCES) $(test_xrl_router_SOURCES) \
	$(test_xrl_sender_SOURCES) $(xorp_finder_SOURCES)
DIST_COMMON = README Makefile.am Makefile.in TODO
SOURCES = $(libfinder_la_SOURCES) $(libxipc_la_SOURCES) $(call_xrl_SOURCES) $(test_finder_SOURCES) $(test_finder_events_SOURCES) $(test_finder_messenger_SOURCES) $(test_finder_msgs_SOURCES) $(test_finder_tcp_SOURCES) $(test_finder_to_SOURCES) $(test_header_SOURCES) $(test_inproc_SOURCES) $(test_lemming_SOURCES) $(test_stcp_SOURCES) $(test_sudp_SOURCES) $(test_xrl_SOURCES) $(test_xrl_args_SOURCES) $(test_xrl_atom_SOURCES) $(test_xrl_error_SOURCES) $(test_xrl_parser_SOURCES) $(test_xrl_receiver_SOURCES) $(test_xrl_router_SOURCES) $(test_xrl_sender_SOURCES) $(xorp_finder_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  libxipc/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
finder_base.lo: $(top_srcdir)/xrl/targets/finder_base.cc
finder_client_xif.lo: $(top_srcdir)/xrl/interfaces/finder_client_xif.cc
finder_event_observer_xif.lo: \
	$(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc
libfinder.la: $(libfinder_la_OBJECTS) $(libfinder_la_DEPENDENCIES) 
	$(CXXLINK)  $(libfinder_la_LDFLAGS) $(libfinder_la_OBJECTS) $(libfinder_la_LIBADD) $(LIBS)
common_xif.lo: $(top_srcdir)/xrl/interfaces/common_xif.cc
finder_client_base.lo: $(top_srcdir)/xrl/targets/finder_client_base.cc
finder_xif.lo: $(top_srcdir)/xrl/interfaces/finder_xif.cc
libxipc.la: $(libxipc_la_OBJECTS) $(libxipc_la_DEPENDENCIES) 
	$(CXXLINK)  $(libxipc_la_LDFLAGS) $(libxipc_la_OBJECTS) $(libxipc_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo $$p1|sed '$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(sbindir)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo $$p1|sed '$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(sbindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(sbindir)/$$f; \
	  else :; fi; \
	done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(sbindir)/$$f"; \
	  rm -f $(DESTDIR)$(sbindir)/$$f; \
	done

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
call_xrl$(EXEEXT): $(call_xrl_OBJECTS) $(call_xrl_DEPENDENCIES) 
	@rm -f call_xrl$(EXEEXT)
	$(CXXLINK) $(call_xrl_LDFLAGS) $(call_xrl_OBJECTS) $(call_xrl_LDADD) $(LIBS)
test_finder$(EXEEXT): $(test_finder_OBJECTS) $(test_finder_DEPENDENCIES) 
	@rm -f test_finder$(EXEEXT)
	$(CXXLINK) $(test_finder_LDFLAGS) $(test_finder_OBJECTS) $(test_finder_LDADD) $(LIBS)
test_finder_events_base.$(OBJEXT): \
	$(top_srcdir)/xrl/targets/test_finder_events_base.cc
finder_event_notifier_xif.$(OBJEXT): \
	$(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc
test_finder_events$(EXEEXT): $(test_finder_events_OBJECTS) $(test_finder_events_DEPENDENCIES) 
	@rm -f test_finder_events$(EXEEXT)
	$(CXXLINK) $(test_finder_events_LDFLAGS) $(test_finder_events_OBJECTS) $(test_finder_events_LDADD) $(LIBS)
test_finder_messenger$(EXEEXT): $(test_finder_messenger_OBJECTS) $(test_finder_messenger_DEPENDENCIES) 
	@rm -f test_finder_messenger$(EXEEXT)
	$(CXXLINK) $(test_finder_messenger_LDFLAGS) $(test_finder_messenger_OBJECTS) $(test_finder_messenger_LDADD) $(LIBS)
test_finder_msgs$(EXEEXT): $(test_finder_msgs_OBJECTS) $(test_finder_msgs_DEPENDENCIES) 
	@rm -f test_finder_msgs$(EXEEXT)
	$(CXXLINK) $(test_finder_msgs_LDFLAGS) $(test_finder_msgs_OBJECTS) $(test_finder_msgs_LDADD) $(LIBS)
test_finder_tcp$(EXEEXT): $(test_finder_tcp_OBJECTS) $(test_finder_tcp_DEPENDENCIES) 
	@rm -f test_finder_tcp$(EXEEXT)
	$(CXXLINK) $(test_finder_tcp_LDFLAGS) $(test_finder_tcp_OBJECTS) $(test_finder_tcp_LDADD) $(LIBS)
test_finder_to$(EXEEXT): $(test_finder_to_OBJECTS) $(test_finder_to_DEPENDENCIES) 
	@rm -f test_finder_to$(EXEEXT)
	$(CXXLINK) $(test_finder_to_LDFLAGS) $(test_finder_to_OBJECTS) $(test_finder_to_LDADD) $(LIBS)
test_header$(EXEEXT): $(test_header_OBJECTS) $(test_header_DEPENDENCIES) 
	@rm -f test_header$(EXEEXT)
	$(CXXLINK) $(test_header_LDFLAGS) $(test_header_OBJECTS) $(test_header_LDADD) $(LIBS)
test_inproc$(EXEEXT): $(test_inproc_OBJECTS) $(test_inproc_DEPENDENCIES) 
	@rm -f test_inproc$(EXEEXT)
	$(CXXLINK) $(test_inproc_LDFLAGS) $(test_inproc_OBJECTS) $(test_inproc_LDADD) $(LIBS)
test_lemming$(EXEEXT): $(test_lemming_OBJECTS) $(test_lemming_DEPENDENCIES) 
	@rm -f test_lemming$(EXEEXT)
	$(CXXLINK) $(test_lemming_LDFLAGS) $(test_lemming_OBJECTS) $(test_lemming_LDADD) $(LIBS)
test_stcp$(EXEEXT): $(test_stcp_OBJECTS) $(test_stcp_DEPENDENCIES) 
	@rm -f test_stcp$(EXEEXT)
	$(CXXLINK) $(test_stcp_LDFLAGS) $(test_stcp_OBJECTS) $(test_stcp_LDADD) $(LIBS)
test_sudp$(EXEEXT): $(test_sudp_OBJECTS) $(test_sudp_DEPENDENCIES) 
	@rm -f test_sudp$(EXEEXT)
	$(CXXLINK) $(test_sudp_LDFLAGS) $(test_sudp_OBJECTS) $(test_sudp_LDADD) $(LIBS)
test_xrl$(EXEEXT): $(test_xrl_OBJECTS) $(test_xrl_DEPENDENCIES) 
	@rm -f test_xrl$(EXEEXT)
	$(CXXLINK) $(test_xrl_LDFLAGS) $(test_xrl_OBJECTS) $(test_xrl_LDADD) $(LIBS)
test_xrl_args$(EXEEXT): $(test_xrl_args_OBJECTS) $(test_xrl_args_DEPENDENCIES) 
	@rm -f test_xrl_args$(EXEEXT)
	$(CXXLINK) $(test_xrl_args_LDFLAGS) $(test_xrl_args_OBJECTS) $(test_xrl_args_LDADD) $(LIBS)
test_xrl_atom$(EXEEXT): $(test_xrl_atom_OBJECTS) $(test_xrl_atom_DEPENDENCIES) 
	@rm -f test_xrl_atom$(EXEEXT)
	$(CXXLINK) $(test_xrl_atom_LDFLAGS) $(test_xrl_atom_OBJECTS) $(test_xrl_atom_LDADD) $(LIBS)
test_xrl_error$(EXEEXT): $(test_xrl_error_OBJECTS) $(test_xrl_error_DEPENDENCIES) 
	@rm -f test_xrl_error$(EXEEXT)
	$(CXXLINK) $(test_xrl_error_LDFLAGS) $(test_xrl_error_OBJECTS) $(test_xrl_error_LDADD) $(LIBS)
test_xrl_parser$(EXEEXT): $(test_xrl_parser_OBJECTS) $(test_xrl_parser_DEPENDENCIES) 
	@rm -f test_xrl_parser$(EXEEXT)
	$(CXXLINK) $(test_xrl_parser_LDFLAGS) $(test_xrl_parser_OBJECTS) $(test_xrl_parser_LDADD) $(LIBS)
test_xrls_base.$(OBJEXT): $(top_srcdir)/xrl/targets/test_xrls_base.cc
test_xrl_receiver$(EXEEXT): $(test_xrl_receiver_OBJECTS) $(test_xrl_receiver_DEPENDENCIES) 
	@rm -f test_xrl_receiver$(EXEEXT)
	$(CXXLINK) $(test_xrl_receiver_LDFLAGS) $(test_xrl_receiver_OBJECTS) $(test_xrl_receiver_LDADD) $(LIBS)
test_xrl_router$(EXEEXT): $(test_xrl_router_OBJECTS) $(test_xrl_router_DEPENDENCIES) 
	@rm -f test_xrl_router$(EXEEXT)
	$(CXXLINK) $(test_xrl_router_LDFLAGS) $(test_xrl_router_OBJECTS) $(test_xrl_router_LDADD) $(LIBS)
test_xrls_xif.$(OBJEXT): $(top_srcdir)/xrl/interfaces/test_xrls_xif.cc
test_xrl_sender$(EXEEXT): $(test_xrl_sender_OBJECTS) $(test_xrl_sender_DEPENDENCIES) 
	@rm -f test_xrl_sender$(EXEEXT)
	$(CXXLINK) $(test_xrl_sender_LDFLAGS) $(test_xrl_sender_OBJECTS) $(test_xrl_sender_LDADD) $(LIBS)
xorp_finder$(EXEEXT): $(xorp_finder_OBJECTS) $(xorp_finder_DEPENDENCIES) 
	@rm -f xorp_finder$(EXEEXT)
	$(CXXLINK) $(xorp_finder_LDFLAGS) $(xorp_finder_OBJECTS) $(xorp_finder_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/call_xrl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/common_xif.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_client.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_client_base.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_client_observer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_client_xif.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_client_xrl_target.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_event_notifier_xif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_event_observer_xif.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_messenger.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_msgs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_server.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_tcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_tcp_messenger.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_xif.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_xrl_queue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/finder_xrl_target.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/header.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/hmac.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/hmac_md5.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/permits.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/sockutil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_finder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_finder_events.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_finder_events_base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_finder_messenger.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_finder_msgs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_finder_tcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_finder_to.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_header.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_inproc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_lemming.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_stcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_sudp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrl_args.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrl_atom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrl_error.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrl_parser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrl_receiver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrl_router.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrl_sender.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrls_base.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/test_xrls_xif.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_args.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_atom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_atom_encoding.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_atom_list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_cmd_map.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_dispatcher.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_error.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_parser.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_parser_input.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_pf.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_pf_factory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_pf_inproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_pf_kill.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_pf_stcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_pf_stcp_ph.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_pf_sudp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_router.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_std_router.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xrl_tokens.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/xuid.Plo@am__quote@

distclean-depend:
	-rm -rf $(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f $< || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<
CCDEPMODE = @CCDEPMODE@

.cc.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cc.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cc.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

finder_base.o: $(top_srcdir)/xrl/targets/finder_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/finder_base.cc' object='finder_base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_base.Po' tmpdepfile='$(DEPDIR)/finder_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_base.o `test -f $(top_srcdir)/xrl/targets/finder_base.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/targets/finder_base.cc

finder_base.obj: $(top_srcdir)/xrl/targets/finder_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/finder_base.cc' object='finder_base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_base.Po' tmpdepfile='$(DEPDIR)/finder_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_base.obj `cygpath -w $(top_srcdir)/xrl/targets/finder_base.cc`

finder_base.lo: $(top_srcdir)/xrl/targets/finder_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/finder_base.cc' object='finder_base.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_base.Plo' tmpdepfile='$(DEPDIR)/finder_base.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_base.lo `test -f $(top_srcdir)/xrl/targets/finder_base.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/targets/finder_base.cc

finder_client_xif.o: $(top_srcdir)/xrl/interfaces/finder_client_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_client_xif.cc' object='finder_client_xif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_client_xif.Po' tmpdepfile='$(DEPDIR)/finder_client_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_client_xif.o `test -f $(top_srcdir)/xrl/interfaces/finder_client_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/finder_client_xif.cc

finder_client_xif.obj: $(top_srcdir)/xrl/interfaces/finder_client_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_client_xif.cc' object='finder_client_xif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_client_xif.Po' tmpdepfile='$(DEPDIR)/finder_client_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_client_xif.obj `cygpath -w $(top_srcdir)/xrl/interfaces/finder_client_xif.cc`

finder_client_xif.lo: $(top_srcdir)/xrl/interfaces/finder_client_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_client_xif.cc' object='finder_client_xif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_client_xif.Plo' tmpdepfile='$(DEPDIR)/finder_client_xif.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_client_xif.lo `test -f $(top_srcdir)/xrl/interfaces/finder_client_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/finder_client_xif.cc

finder_event_observer_xif.o: $(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc' object='finder_event_observer_xif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_event_observer_xif.Po' tmpdepfile='$(DEPDIR)/finder_event_observer_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_event_observer_xif.o `test -f $(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc

finder_event_observer_xif.obj: $(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc' object='finder_event_observer_xif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_event_observer_xif.Po' tmpdepfile='$(DEPDIR)/finder_event_observer_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_event_observer_xif.obj `cygpath -w $(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc`

finder_event_observer_xif.lo: $(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc' object='finder_event_observer_xif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_event_observer_xif.Plo' tmpdepfile='$(DEPDIR)/finder_event_observer_xif.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_event_observer_xif.lo `test -f $(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc

common_xif.o: $(top_srcdir)/xrl/interfaces/common_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/common_xif.cc' object='common_xif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/common_xif.Po' tmpdepfile='$(DEPDIR)/common_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o common_xif.o `test -f $(top_srcdir)/xrl/interfaces/common_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/common_xif.cc

common_xif.obj: $(top_srcdir)/xrl/interfaces/common_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/common_xif.cc' object='common_xif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/common_xif.Po' tmpdepfile='$(DEPDIR)/common_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o common_xif.obj `cygpath -w $(top_srcdir)/xrl/interfaces/common_xif.cc`

common_xif.lo: $(top_srcdir)/xrl/interfaces/common_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/common_xif.cc' object='common_xif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/common_xif.Plo' tmpdepfile='$(DEPDIR)/common_xif.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o common_xif.lo `test -f $(top_srcdir)/xrl/interfaces/common_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/common_xif.cc

finder_client_base.o: $(top_srcdir)/xrl/targets/finder_client_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/finder_client_base.cc' object='finder_client_base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_client_base.Po' tmpdepfile='$(DEPDIR)/finder_client_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_client_base.o `test -f $(top_srcdir)/xrl/targets/finder_client_base.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/targets/finder_client_base.cc

finder_client_base.obj: $(top_srcdir)/xrl/targets/finder_client_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/finder_client_base.cc' object='finder_client_base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_client_base.Po' tmpdepfile='$(DEPDIR)/finder_client_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_client_base.obj `cygpath -w $(top_srcdir)/xrl/targets/finder_client_base.cc`

finder_client_base.lo: $(top_srcdir)/xrl/targets/finder_client_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/finder_client_base.cc' object='finder_client_base.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_client_base.Plo' tmpdepfile='$(DEPDIR)/finder_client_base.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_client_base.lo `test -f $(top_srcdir)/xrl/targets/finder_client_base.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/targets/finder_client_base.cc

finder_xif.o: $(top_srcdir)/xrl/interfaces/finder_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_xif.cc' object='finder_xif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_xif.Po' tmpdepfile='$(DEPDIR)/finder_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_xif.o `test -f $(top_srcdir)/xrl/interfaces/finder_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/finder_xif.cc

finder_xif.obj: $(top_srcdir)/xrl/interfaces/finder_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_xif.cc' object='finder_xif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_xif.Po' tmpdepfile='$(DEPDIR)/finder_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_xif.obj `cygpath -w $(top_srcdir)/xrl/interfaces/finder_xif.cc`

finder_xif.lo: $(top_srcdir)/xrl/interfaces/finder_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_xif.cc' object='finder_xif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_xif.Plo' tmpdepfile='$(DEPDIR)/finder_xif.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_xif.lo `test -f $(top_srcdir)/xrl/interfaces/finder_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/finder_xif.cc

test_finder_events_base.o: $(top_srcdir)/xrl/targets/test_finder_events_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/test_finder_events_base.cc' object='test_finder_events_base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_finder_events_base.Po' tmpdepfile='$(DEPDIR)/test_finder_events_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_finder_events_base.o `test -f $(top_srcdir)/xrl/targets/test_finder_events_base.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/targets/test_finder_events_base.cc

test_finder_events_base.obj: $(top_srcdir)/xrl/targets/test_finder_events_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/test_finder_events_base.cc' object='test_finder_events_base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_finder_events_base.Po' tmpdepfile='$(DEPDIR)/test_finder_events_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_finder_events_base.obj `cygpath -w $(top_srcdir)/xrl/targets/test_finder_events_base.cc`

test_finder_events_base.lo: $(top_srcdir)/xrl/targets/test_finder_events_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/test_finder_events_base.cc' object='test_finder_events_base.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_finder_events_base.Plo' tmpdepfile='$(DEPDIR)/test_finder_events_base.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_finder_events_base.lo `test -f $(top_srcdir)/xrl/targets/test_finder_events_base.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/targets/test_finder_events_base.cc

finder_event_notifier_xif.o: $(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc' object='finder_event_notifier_xif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_event_notifier_xif.Po' tmpdepfile='$(DEPDIR)/finder_event_notifier_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_event_notifier_xif.o `test -f $(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc

finder_event_notifier_xif.obj: $(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc' object='finder_event_notifier_xif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_event_notifier_xif.Po' tmpdepfile='$(DEPDIR)/finder_event_notifier_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_event_notifier_xif.obj `cygpath -w $(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc`

finder_event_notifier_xif.lo: $(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc' object='finder_event_notifier_xif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/finder_event_notifier_xif.Plo' tmpdepfile='$(DEPDIR)/finder_event_notifier_xif.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o finder_event_notifier_xif.lo `test -f $(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc

test_xrls_base.o: $(top_srcdir)/xrl/targets/test_xrls_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/test_xrls_base.cc' object='test_xrls_base.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_xrls_base.Po' tmpdepfile='$(DEPDIR)/test_xrls_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_xrls_base.o `test -f $(top_srcdir)/xrl/targets/test_xrls_base.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/targets/test_xrls_base.cc

test_xrls_base.obj: $(top_srcdir)/xrl/targets/test_xrls_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/test_xrls_base.cc' object='test_xrls_base.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_xrls_base.Po' tmpdepfile='$(DEPDIR)/test_xrls_base.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_xrls_base.obj `cygpath -w $(top_srcdir)/xrl/targets/test_xrls_base.cc`

test_xrls_base.lo: $(top_srcdir)/xrl/targets/test_xrls_base.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/targets/test_xrls_base.cc' object='test_xrls_base.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_xrls_base.Plo' tmpdepfile='$(DEPDIR)/test_xrls_base.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_xrls_base.lo `test -f $(top_srcdir)/xrl/targets/test_xrls_base.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/targets/test_xrls_base.cc

test_xrls_xif.o: $(top_srcdir)/xrl/interfaces/test_xrls_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/test_xrls_xif.cc' object='test_xrls_xif.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_xrls_xif.Po' tmpdepfile='$(DEPDIR)/test_xrls_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_xrls_xif.o `test -f $(top_srcdir)/xrl/interfaces/test_xrls_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/test_xrls_xif.cc

test_xrls_xif.obj: $(top_srcdir)/xrl/interfaces/test_xrls_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/test_xrls_xif.cc' object='test_xrls_xif.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_xrls_xif.Po' tmpdepfile='$(DEPDIR)/test_xrls_xif.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_xrls_xif.obj `cygpath -w $(top_srcdir)/xrl/interfaces/test_xrls_xif.cc`

test_xrls_xif.lo: $(top_srcdir)/xrl/interfaces/test_xrls_xif.cc
@AMDEP_TRUE@	source='$(top_srcdir)/xrl/interfaces/test_xrls_xif.cc' object='test_xrls_xif.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/test_xrls_xif.Plo' tmpdepfile='$(DEPDIR)/test_xrls_xif.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_xrls_xif.lo `test -f $(top_srcdir)/xrl/interfaces/test_xrls_xif.cc || echo '$(srcdir)/'`$(top_srcdir)/xrl/interfaces/test_xrls_xif.cc
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	fi

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(sbindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS install-sbinPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
	uninstall-sbinPROGRAMS

.PHONY: GTAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-sbinPROGRAMS \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-sbinPROGRAMS install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-sbinPROGRAMS


###############################################################################
#
# XXX This is somewhat nasty and very likely source of pain.
# Autogenerated Xrl calling and handling code is used from the Xrl
# build dir.  For all other Xrl senders and targets this happens much
# later in the build process. But, as FinderClient itself uses and
# supports an Xrl Interface we need to auto-generate the appropriate
# files.  Therefore, below we describe the auto-generated file dependencies
# and we generate and compile those files when necessary.
#

###############################################################################
#
# Build interfaces
#
###############################################################################

$(top_srcdir)/xrl/interfaces/common_xif.hh				\
$(top_srcdir)/xrl/interfaces/common_xif.cc:				\
    $(top_srcdir)/xrl/interfaces/common.xif
	cd $(top_builddir)/xrl/interfaces && $(MAKE) $(notdir $@)

$(top_srcdir)/xrl/interfaces/finder_xif.hh				\
$(top_srcdir)/xrl/interfaces/finder_xif.cc:				\
    $(top_srcdir)/xrl/interfaces/finder.xif
	cd $(top_builddir)/xrl/interfaces && $(MAKE) $(notdir $@)

$(top_srcdir)/xrl/interfaces/finder_client_xif.hh			\
$(top_srcdir)/xrl/interfaces/finder_client_xif.cc:			\
    $(top_srcdir)/xrl/interfaces/finder_client.xif
	cd $(top_builddir)/xrl/interfaces && $(MAKE) $(notdir $@)

$(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.hh		\
$(top_srcdir)/xrl/interfaces/finder_event_notifier_xif.cc:		\
    $(top_srcdir)/xrl/interfaces/finder_event_notifier.xif
	cd $(top_builddir)/xrl/interfaces && $(MAKE) $(notdir $@)

$(top_srcdir)/xrl/interfaces/finder_event_observer_xif.hh		\
$(top_srcdir)/xrl/interfaces/finder_event_observer_xif.cc:		\
    $(top_srcdir)/xrl/interfaces/finder_event_observer.xif
	cd $(top_builddir)/xrl/interfaces && $(MAKE) $(notdir $@)

$(top_srcdir)/xrl/interfaces/test_xrls_xif.hh				\
$(top_srcdir)/xrl/interfaces/test_xrls_xif.cc:				\
    $(top_srcdir)/xrl/interfaces/test_xrls.xif
	cd $(top_builddir)/xrl/interfaces && $(MAKE) $(notdir $@)

###############################################################################
#
# Build handler bases
#
# NB The .xif file dependencies are specified MANUALLY for C++ Xrl Target
# Base below.  These MUST be kept up to date to be useful.
#
###############################################################################

#
# Finder base
#
$(top_srcdir)/xrl/targets/finder_base.hh				\
$(top_srcdir)/xrl/targets/finder_base.cc:				\
    $(top_srcdir)/xrl/targets/finder.tgt				\
    $(top_srcdir)/xrl/interfaces/common.xif				\
    $(top_srcdir)/xrl/interfaces/finder.xif				\
    $(top_srcdir)/xrl/interfaces/finder_event_notifier.xif
	cd $(top_builddir)/xrl/targets && $(MAKE) $(notdir $@)

#
# Finder client base
#
$(top_srcdir)/xrl/targets/finder_client_base.hh				\
$(top_srcdir)/xrl/targets/finder_client_base.cc:			\
    $(top_srcdir)/xrl/targets/finder_client.tgt				\
    $(top_srcdir)/xrl/interfaces/common.xif				\
    $(top_srcdir)/xrl/interfaces/finder_client.xif
	cd $(top_builddir)/xrl/targets && $(MAKE) $(notdir $@)

#
# Test Finder events base
#
$(top_srcdir)/xrl/targets/test_finder_events_base.hh			\
$(top_srcdir)/xrl/targets/test_finder_events_base.cc:			\
    $(top_srcdir)/xrl/targets/test_finder_events.tgt			\
    $(top_srcdir)/xrl/interfaces/common.xif				\
    $(top_srcdir)/xrl/interfaces/finder_event_observer.xif
	cd $(top_builddir)/xrl/targets && $(MAKE) $(notdir $@)

#
# Test XRLs base
#
$(top_srcdir)/xrl/targets/test_xrls_base.hh				\
$(top_srcdir)/xrl/targets/test_xrls_base.cc:				\
    $(top_srcdir)/xrl/targets/test_xrls.tgt				\
    $(top_srcdir)/xrl/interfaces/common.xif				\
    $(top_srcdir)/xrl/interfaces/test_xrls.xif
	cd $(top_builddir)/xrl/targets && $(MAKE) $(notdir $@)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
