# Copyright (c) 2009 XORP, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, Version 2, June
# 1991 as published by the Free Software Foundation. Redistribution
# and/or modification of this program under the terms of any other
# version of the GNU General Public License is not permitted.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. For more details,
# see the GNU General Public License, Version 2, a copy of which can be
# found in the XORP LICENSE.gpl file.
#
# XORP Inc, 2953 Bunker Hill Lane, Suite 204, Santa Clara, CA 95054, USA;
# http://xorp.net

# $XORP$

import os
Import("env")


#
# XIPC Library
#
libxipc_env = env.Clone()

libxipc_env.AppendUnique(CPPPATH = [
    "#",
    "$BUILDDIR",
    ])

libxipc_env.AppendUnique(LIBPATH = [
    '$BUILDDIR/libcomm',
    '$BUILDDIR/libxorp'
    ])

libxipc_env.AppendUnique(LIBS = [
    'libcomm',
    'libxorp'
    ])

libxipc_sources = [
    'finder_client.cc',
    'finder_client_observer.cc',
    'finder_client_xrl_target.cc',
    'finder_messenger.cc',
    'finder_msgs.cc',
    'finder_tcp.cc',
    'finder_tcp_messenger.cc',
    'header.cc',
    'hmac.cc',
    'hmac_md5.c',
    'permits.cc',
    'sockutil.cc',
    'xrl.cc',
    'xrl_args.cc',
    'xrl_atom.cc',
    'xrl_atom_encoding.cc',
    'xrl_atom_list.cc',
    'xrl_cmd_map.cc',
    'xrl_dispatcher.cc',
    'xrl_error.cc',
    'xrl_parser.cc',
    'xrl_parser_input.cc',
    'xrl_pf.cc',
    'xrl_pf_factory.cc',
    'xrl_pf_inproc.cc',
    'xrl_pf_kill.cc',
    'xrl_pf_stcp.cc',
    'xrl_pf_stcp_ph.cc',
    'xrl_pf_sudp.cc',
    'xrl_pf_unix.cc',
    'xrl_router.cc',
    'xrl_std_router.cc',
    'xrl_tokens.cc',
    'xuid.cc',

    '$BUILDDIR/xrl/targets/finder_client_base$SHOBJSUFFIX',
    '$BUILDDIR/xrl/interfaces/finder_xif$SHOBJSUFFIX',
    '$BUILDDIR/xrl/interfaces/common_xif$SHOBJSUFFIX',
    ]

libxipc = libxipc_env.SharedLibrary(target = 'libxipc',
                                    source = libxipc_sources)

env.Alias('install',
          env.InstallLibrary('$libdir', libxipc))


#
# Finder library
#
libfinder_env = env.Clone()

libfinder_env.AppendUnique(CPPPATH = [
    "#",
    "$BUILDDIR",
    ])

libfinder_env.AppendUnique(LIBPATH = [
    '$BUILDDIR/libxipc',
    '$BUILDDIR/libcomm',
    '$BUILDDIR/libxorp'
    ])

libfinder_env.AppendUnique(LIBS = [
    'libxipc',
    'libcomm',
    'libxorp'
    ])

libfinder_sources = [
    'finder.cc',
    'finder_server.cc',
    'finder_xrl_queue.cc',
    'finder_xrl_target.cc',

    '$BUILDDIR/xrl/targets/finder_base$SHOBJSUFFIX',
    '$BUILDDIR/xrl/interfaces/finder_client_xif$SHOBJSUFFIX',
    '$BUILDDIR/xrl/interfaces/finder_event_observer_xif$SHOBJSUFFIX',
    ]

libfinder = libfinder_env.SharedLibrary(target = 'libfinder',
                                        source = libfinder_sources)

env.Alias('install',
          env.InstallLibrary('$libdir', libfinder))

#
# finder, call_xrl, finder, etc. executables
#
env = env.Clone()

env.AppendUnique(CPPPATH = [
    "#",
    "$BUILDDIR",
    ])

env.AppendUnique(LIBPATH = [
    '$BUILDDIR/libxipc',
    '$BUILDDIR/libcomm',
    '$BUILDDIR/libxorp'
    ])

env.AppendUnique(LIBS = [
    'libfinder',
    'libxipc',
    'libcomm',
    'libxorp'
    ])

finder = env.Program(target = 'xorp_finder',
                     source = [ 'finder_main.cc' ])

call_xrl = env.Program(target = 'call_xrl',
                       source = [ 'call_xrl.cc'])

env.Alias('install',
          env.InstallProgram('$bindir', finder))

env.Alias('install',
          env.InstallProgram('$bindir', call_xrl))

Default(libxipc, libfinder)
