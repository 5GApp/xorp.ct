#define yy_create_buffer yy_policy_parser_create_buffer
#define yy_delete_buffer yy_policy_parser_delete_buffer
#define yy_scan_buffer yy_policy_parser_scan_buffer
#define yy_scan_string yy_policy_parser_scan_string
#define yy_scan_bytes yy_policy_parser_scan_bytes
#define yy_flex_debug yy_policy_parser_flex_debug
#define yy_init_buffer yy_policy_parser_init_buffer
#define yy_flush_buffer yy_policy_parser_flush_buffer
#define yy_load_buffer_state yy_policy_parser_load_buffer_state
#define yy_switch_to_buffer yy_policy_parser_switch_to_buffer
#define yyin yy_policy_parserin
#define yyleng yy_policy_parserleng
#define yylex yy_policy_parserlex
#define yyout yy_policy_parserout
#define yyrestart yy_policy_parserrestart
#define yytext yy_policy_parsertext

#line 19 "lex.yy_policy_parser.cc"
/* A lexical scanner generated by flex */

/* Scanner skeleton version:
 * $Header$
 * $FreeBSD: src/usr.bin/lex/flex.skl,v 1.4 1999/10/27 07:56:44 obrien Exp $
 */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 5

#include <stdio.h>


/* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
#ifdef c_plusplus
#ifndef __cplusplus
#define __cplusplus
#endif
#endif


#ifdef __cplusplus

#include <stdlib.h>
#include <unistd.h>

/* Use prototypes in function declarations. */
#define YY_USE_PROTOS

/* The "const" storage-class-modifier is valid. */
#define YY_USE_CONST

#else	/* ! __cplusplus */

#if __STDC__

#define YY_USE_PROTOS
#define YY_USE_CONST

#endif	/* __STDC__ */
#endif	/* ! __cplusplus */

#ifdef __TURBOC__
 #pragma warn -rch
 #pragma warn -use
#include <io.h>
#include <stdlib.h>
#define YY_USE_CONST
#define YY_USE_PROTOS
#endif

#ifdef YY_USE_CONST
#define yyconst const
#else
#define yyconst
#endif


#ifdef YY_USE_PROTOS
#define YY_PROTO(proto) proto
#else
#define YY_PROTO(proto) ()
#endif

/* Returned upon end-of-file. */
#define YY_NULL 0

/* Promotes a possibly negative, possibly signed char to an unsigned
 * integer for use as an array index.  If the signed char is negative,
 * we want to instead treat it as an 8-bit unsigned char, hence the
 * double cast.
 */
#define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN yy_start = 1 + 2 *

/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START ((yy_start - 1) / 2)
#define YYSTATE YY_START

/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)

/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin )

#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#define YY_BUF_SIZE 16384

typedef struct yy_buffer_state *YY_BUFFER_STATE;

extern int yyleng;
extern FILE *yyin, *yyout;

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2

/* The funky do-while in the following #define is used to turn the definition
 * int a single C statement (which needs a semi-colon terminator).  This
 * avoids problems with code like:
 *
 * 	if ( condition_holds )
 *		yyless( 5 );
 *	else
 *		do_something_else();
 *
 * Prior to using the do-while the compiler would get upset at the
 * "else" because it interpreted the "if" statement as being all
 * done when it reached the ';' after the yyless() call.
 */

/* Return all but the first 'n' matched characters back to the input stream. */

#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		*yy_cp = yy_hold_char; \
		YY_RESTORE_YY_MORE_OFFSET \
		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )

#define unput(c) yyunput( c, yytext_ptr )

/* The following is because we cannot portably get our hands on size_t
 * (without autoconf's help, which isn't available because we want
 * flex-generated scanners to compile on their own).
 */
typedef unsigned int yy_size_t;


struct yy_buffer_state
	{
	FILE *yy_input_file;

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	yy_size_t yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;
#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2
	};

static YY_BUFFER_STATE yy_current_buffer = 0;

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 */
#define YY_CURRENT_BUFFER yy_current_buffer


/* yy_hold_char holds the character lost when yytext is formed. */
static char yy_hold_char;

static int yy_n_chars;		/* number of characters read into yy_ch_buf */


int yyleng;

/* Points to current character in buffer. */
static char *yy_c_buf_p = (char *) 0;
static int yy_init = 1;		/* whether we need to initialize */
static int yy_start = 0;	/* start state number */

/* Flag which is used to allow yywrap()'s to do buffer switches
 * instead of setting up a fresh yyin.  A bit of a hack ...
 */
static int yy_did_buffer_switch_on_eof;

void yyrestart YY_PROTO(( FILE *input_file ));

void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
void yy_load_buffer_state YY_PROTO(( void ));
YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
#define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )

YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));

static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t ));
static void yy_flex_free YY_PROTO(( void * ));

#define yy_new_buffer yy_create_buffer

#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_is_interactive = is_interactive; \
	}

#define yy_set_bol(at_bol) \
	{ \
	if ( ! yy_current_buffer ) \
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
	yy_current_buffer->yy_at_bol = at_bol; \
	}

#define YY_AT_BOL() (yy_current_buffer->yy_at_bol)


#define yywrap() 1
#define YY_SKIP_YYWRAP
typedef unsigned char YY_CHAR;
FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
typedef int yy_state_type;
extern char *yytext;
#define yytext_ptr yytext

static yy_state_type yy_get_previous_state YY_PROTO(( void ));
static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
static int yy_get_next_buffer YY_PROTO(( void ));
static void yy_fatal_error YY_PROTO(( yyconst char msg[] ));

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	yytext_ptr = yy_bp; \
	yyleng = (int) (yy_cp - yy_bp); \
	yy_hold_char = *yy_cp; \
	*yy_cp = '\0'; \
	yy_c_buf_p = yy_cp;

#define YY_NUM_RULES 46
#define YY_END_OF_BUFFER 47
static yyconst short int yy_accept[1322] =
    {   0,
        0,    0,    0,    0,   47,   45,   43,   44,   45,    6,
       16,   17,   31,   28,   30,    2,    2,    2,   15,   42,
       22,   32,   23,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   41,   41,    8,    7,   43,
       19,    3,    0,    2,    0,    0,    2,    2,    2,   13,
       20,   18,   21,   41,   41,   41,   41,   41,   41,   41,
       41,   41,   41,   41,   41,   25,   41,   41,   41,   41,
        8,    0,    0,    0,    0,    2,    0,    0,   13,    2,
        2,    0,    0,   13,   13,   13,   13,   41,   41,   38,
       41,   29,   24,   34,   41,   41,   41,   27,   41,   41,

       41,   26,    1,    0,    0,    0,    0,    0,    2,    0,
        0,    0,   13,   13,   13,   13,    0,    0,   14,   14,
        0,   13,    0,   13,   13,   13,   13,   41,   41,   41,
       41,   33,   41,   41,   41,    4,    0,    0,    0,    0,
        2,    0,    0,   13,   13,    0,   13,   13,   13,   13,
        0,    0,   14,   14,   14,    0,    0,    0,   13,   13,
       13,   13,   13,   13,   13,   39,   41,    5,   41,   41,
       41,    0,    0,    0,    0,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        0,    0,   12,   14,    0,    0,    0,    0,    0,   13,

        0,   13,    0,   13,   13,   13,   13,   36,   35,   41,
       37,   10,   10,   10,    0,    0,    0,   13,   13,    0,
       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,    0,    0,   12,   12,   12,   12,   12,    0,    0,
        0,    0,    0,    0,    0,   13,   13,   13,   13,   13,
       13,   13,   41,    0,    0,   10,   10,   10,   10,    0,
        0,    0,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        0,    0,    0,   12,   12,   12,   12,    0,   12,    0,
       12,   12,   12,   12,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,   13,    0,   13,    0,   13,   13,
       13,   13,   40,    0,   11,   11,   11,   10,    0,    0,
       13,   13,    0,   13,   13,   13,   13,   13,   13,    0,
       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,    0,    0,   12,   12,    0,   12,   12,   12,   12,
        0,    0,    0,   12,   12,   12,   12,   12,   12,   12,
       13,   13,   13,    0,    0,    0,    0,    0,    0,    0,
        0,   13,   13,   13,   13,   13,   13,   13,    0,    0,
        0,    0,    0,    0,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
        0,    0,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,    0,    0,    0,    0,    0,   12,    0,
       12,    0,   12,   12,   12,   12,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       13,    0,   13,    0,   13,   13,   13,   13,    0,    0,
        0,    0,    0,    0,    0,   13,   13,    0,   13,   13,
       13,   13,   13,   13,    0,   13,   13,   13,   13,   13,
       13,    0,   13,   13,   13,   13,   13,   13,    0,   13,
       13,   13,   13,    0,    0,   12,   12,    0,   12,   12,

       12,   12,   12,   12,    0,   12,   12,   12,   12,    0,
        0,    0,    0,    0,    0,    0,   12,   12,   12,   12,
       12,   12,   12,   13,   13,   13,   13,    0,    0,    0,
        0,    0,    0,    0,    0,   13,   13,   13,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,    0,    0,    0,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,

       12,   12,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   12,    0,   12,    0,   12,   12,   12,   12,
       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   13,    0,   13,    0,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   13,    0,   13,    0,   13,   13,   13,   13,   13,
       13,    0,   13,   13,   13,   13,   13,   13,    0,   13,
       13,   13,   13,   13,   13,    0,   13,   13,   13,   13,
       13,   13,    0,   13,   13,   13,   13,    0,    0,   12,
       12,    0,   12,   12,   12,   12,   12,   12,    0,   12,

       12,   12,   12,   12,   12,    0,   12,   12,   12,   12,
       12,   12,   12,    0,    0,    0,    0,    0,    0,    0,
        0,   12,   12,   12,   12,   12,   12,   12,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
       13,   13,   13,   13,   13,   13,   13,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        0,    0,    0,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,

       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   12,    0,   12,    0,   12,   12,   12,   12,
       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   13,    0,   13,    0,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   13,   13,    0,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,    0,    0,   12,   12,
        0,   12,   12,   12,   12,   12,   12,    0,   12,   12,
       12,   12,   12,   12,    0,   12,   12,   12,   12,   12,

       12,    0,   12,   12,   12,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,    0,   12,   12,
       12,   12,   12,   12,   12,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,    0,    0,   13,   13,   13,
       13,    9,    9,    9,    0,    0,    0,    0,    0,    0,
        0,   13,   13,   13,   13,   13,   13,   13,    0,    0,
        0,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,   12,    0,   12,
        0,   12,   12,   12,   12,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   13,
       13,    9,    9,    9,    9,    0,    0,    0,    0,   13,
       13,   13,   13,   13,   13,   13,    0,    0,    0,    0,
       12,    0,   12,    0,   12,   12,   12,   12,   12,   12,
        0,   12,   12,   12,   12,   12,   12,    0,   12,   12,
       12,   12,   12,   12,    0,   12,   12,   12,   12,   12,
       12,    0,   12,   12,   12,   12,   12,   12,   12,   12,
        0,    0,    0,    0,    0,    0,    0,    0,   12,   12,

       12,   12,   12,   12,   12,   13,   13,   13,   13,    0,
        0,    0,    0,    0,   13,    9,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
       12,   12,   12,   12,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   12,    0,   12,    0,   12,   12,
       12,   12,   13,   13,   13,   13,    0,    0,    0,    0,
        0,   13,   13,   13,   13,    0,    0,    0,    0,    0,
        0,   12,   12,    0,   12,   12,   12,   12,   12,   12,

       12,   12,   12,   12,   12,   12,   12,   12,   12,    0,
        0,    0,    0,    0,    0,    0,    0,   12,   12,   12,
       12,   13,   13,   13,   13,    0,   13,   13,   13,   13,
        0,    0,    0,    0,    0,    0,   12,   12,   12,   12,
       12,   12,   12,   12,   12,   12,   12,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,   12,   12,   13,
       13,   13,   13,   13,    0,    0,    0,    0,   12,   12,
       12,   12,   12,   12,   12,   12,   12,   12,   12,    0,
        0,    0,    0,    0,   12,   13,    0,    0,    0,    0,
        0,   12,   12,   12,   12,    0,    0,    0,    0,    0,

       12,   12,   12,   12,    0,   12,   12,   12,   12,    0,
       12,   12,   12,   12,   12,   12,   12,   12,   12,   12,
        0
    } ;

static yyconst int yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    4,    5,    1,    1,    1,    1,    6,    7,
        8,    9,   10,    1,   11,   12,   13,   14,   15,   16,
       17,   18,   19,   20,   20,   20,   21,   22,   23,   24,
       25,   26,    1,    1,   27,   27,   27,   27,   28,   27,
       29,   30,   30,   30,   30,   30,   30,   30,   30,   30,
       30,   31,   32,   33,   30,   30,   30,   34,   30,   30,
        1,    1,    1,    1,   35,    1,   36,   27,   37,   38,

       39,   40,   30,   41,   42,   43,   30,   44,   30,   45,
       46,   47,   30,   48,   49,   50,   51,   30,   30,   52,
       30,   30,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static yyconst int yy_meta[53] =
    {   0,
        1,    1,    1,    1,    2,    2,    1,    1,    1,    1,
        3,    4,    5,    6,    6,    6,    6,    6,    6,    6,
        6,    7,    1,    1,    1,    1,    8,    8,    3,    3,
        3,    3,    3,    3,    3,    8,    8,    8,    8,    8,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3
    } ;

static yyconst short int yy_base[1763] =
    {   0,
        0,    0,   48,   50, 5592, 7381, 5589, 7381, 5565, 7381,
     7381, 7381, 7381, 7381,    0,   45,   72,   60, 5567, 7381,
     5563, 5562, 5559,   83,  122, 5555, 5554,  108, 5531, 5535,
     5522,  108, 5505, 5495, 5497, 5473, 5474,    0, 7381, 5517,
     7381,    0,  151,  161, 5496, 5495,  188,   48,  196,  206,
     7381, 7381, 7381,    0,  233, 5487, 5482, 5475, 5473, 5472,
     5461, 5464, 5458, 5458, 5442,    0, 5445, 5447, 5438, 5440,
        0,    0, 5473,  262, 5472,  272, 5461, 5460,  301,    0,
     5460, 5452, 5441,  330,  357,  176,  367,  375, 5413,    0,
     5401,    0,    0,    0, 5390, 5400, 5395,    0, 5386, 5396,

     5393,    0,    0,   92, 5419, 5418,  404, 5417,   58, 5397,
     5382, 5381,  412,  439,  221,  449, 5390, 5379,    0,  141,
      459,  469,  496,  525,  533,   75, 5388, 5377, 5364,  208,
     5356,    0, 5349, 5347, 5355,    0, 5370,  543, 5355, 5354,
      152, 5343, 5342,  553,  582,  609,  638,  646,  131, 5351,
     5340, 5339, 7381,    0,  248, 5346,  656, 5345,  174,  219,
      666,  693,  287,  703,  285,    0, 5306,    0, 5305, 5308,
     5280,  242, 5317, 5316,  713, 5315, 5304, 5303, 5302,  721,
      748,  316,  758,  314,  341,  768,  795,  390,  805,  343,
     5299, 5298,  813, 7381,  309, 5307, 5306,  842, 5296,  388,

      850,  860,  887,  916,  924,  164, 5281,    0,    0, 5246,
        0,  216,  934,  283, 5279, 5268, 5267,  944,  973, 1000,
     1029, 1037,  339, 5276,  423, 1047, 1074, 1103, 1111,  341,
     5275, 5262, 5261, 1119, 1148, 1175,  484, 5260, 5269, 1185,
     5259, 5252, 5251, 1195, 5250,  425,  482, 1205, 1232,  511,
     1242,  509, 5217, 5248, 1250,  385,  429,  563,  431, 5237,
     5236, 5233, 1260, 1287,  597, 1297,  565,  595, 1307, 1334,
      624, 1344,  622,  677,  679, 1354, 1381,  736, 1391,  734,
     5232, 5231, 5230, 1401, 1428,  783, 5214,  504, 1438, 1465,
     5204, 1492, 1502,  263,  617, 5204, 5179, 1511, 5178,  681,

     5177, 5176, 1519, 5175,  781, 1527, 1537, 1564, 1593, 1601,
      472, 5174,    0,  821,    0,  828, 7381,  573, 5163, 5160,
     1611, 1640, 1667, 1696, 1704,  585, 5169,  826, 1714, 1741,
     1770, 1778,  724, 5168,  833, 1788, 1815, 1844, 1852,  771,
     5167, 5147, 5137, 1860, 1889, 1916, 5127, 1943, 1953,  450,
     5134, 1964, 5133,  704,  871, 1974, 2001,  902, 5116,  872,
      873, 2011,  877, 5111, 5110, 2021, 5109, 5108, 5107, 2031,
     5106,  900,  954, 2041, 2068,  988, 2078,  956, 5105, 2088,
     5102, 5091, 5090, 5089, 2098, 2125, 1015, 2135,  986, 1013,
     2145, 2172, 1062, 2182, 1060, 1084, 1086, 2192, 2219, 1134,

     2229, 1132, 1159, 1161, 2239, 2266, 1220, 2276, 1218, 5088,
     5074, 5073, 2286, 2313, 1275, 5072, 1186, 1273, 2323, 2350,
     1322, 5071, 1320,  895, 5080, 5079, 2360, 5078, 5065,  959,
     2368, 2395, 5064, 2422, 2432, 1365,  879,  984, 1412, 1010,
     1089, 5073, 5072, 2441, 5062, 1127, 5059, 5058, 2449, 5051,
     1366, 2457, 2467, 2494, 2523, 2531, 1050, 5036, 1163, 5035,
     5034, 2541, 5033, 5022, 5021, 2549, 2578, 2605, 2634, 2642,
     1208, 5030, 1414, 2652, 2679, 2708, 2716, 1263, 5027, 1449,
     2726, 2753, 2782, 2790, 1310, 5026, 1451, 2800, 2827, 2856,
     2864, 1363, 5025, 5014, 5013, 2872, 2901, 2928, 4999, 2955,

     2965, 1392, 4998, 2976, 3003, 4997, 3030, 3040, 1475, 5006,
     3051, 5005, 5004, 5003, 3061, 5000, 1476, 1477, 3071, 3098,
     1552, 4989, 1478, 1373, 1418, 3108, 1422, 4998, 4997, 3118,
     4987, 4984, 4983, 3128, 4976, 1550, 1574, 3138, 3165, 1626,
     3175, 1576, 4961, 3185, 4960, 4959, 4948, 4947, 3193, 3222,
     3249, 1655, 3259, 1624, 1653, 3269, 3296, 1682, 3306, 1680,
     1725, 1727, 3316, 3343, 1756, 3353, 1754, 1799, 1801, 3363,
     3390, 1830, 3400, 1828, 1870, 1872, 3410, 3437, 1904, 3447,
     1902, 4946, 4945, 4942, 3457, 3484, 1931, 4941, 1510, 1890,
     3494, 3521, 1989, 4940, 1929, 1965, 1987, 3531, 3558, 2056,

     4939, 2022, 1453, 4948, 4934, 3568, 4933, 1480, 4932, 4931,
     3576, 4930, 4919, 1579, 3584, 3611, 4918, 3638, 3648, 2054,
     1548, 1621, 2109, 1651, 1675, 4925, 4924, 3657, 4923, 1729,
     4922, 4912, 3665, 4909, 2111, 3673, 3683, 3710, 3739, 3747,
     1743, 4908, 1803, 4901, 4886, 3757, 4885, 4874, 3765, 3792,
     2160, 1825, 4873, 3802,    0, 3831, 3839, 1869, 4882, 2158,
     3849,    0, 3878, 3886, 1918, 4881, 2203, 3896,    0, 3925,
     3933, 1953, 4880, 2205, 3943,    0, 3972, 3980, 1977, 4877,
     2250, 3990,    0, 4019, 4027, 2044, 4876, 4865, 4864, 4035,
     4064, 4091, 4863, 4118, 4128, 2079, 4849, 4139, 4166, 4848,

     4193, 4203, 2252, 4847, 4214, 4241, 4846, 4268, 4278, 2277,
        0, 2202,    0, 4855, 4854, 4289, 4853, 4850, 4849, 4299,
     4848, 2297, 2298, 4309, 4336, 2338, 4837, 2299, 2115, 2119,
     4346, 2156, 4837, 4830, 4356, 4829, 4828, 4827, 4366, 4826,
     2336, 2379, 4376, 4403, 2410, 4413, 2381, 4825, 4423, 4824,
     4821, 4810, 2254, 4433, 4809, 4808, 4460, 4470, 2324, 2303,
     2408, 2478, 2305, 2480, 2504, 2506, 2385, 2559, 2561, 2589,
     2387, 2591, 2615, 2617, 2405, 2663, 2665, 2689, 2484, 2691,
     4807, 4790, 4782, 4481, 4508, 2741, 4764, 2440, 2739, 4518,
     4545, 2768, 4757, 2766, 2811, 2812, 4555, 4582, 2842, 4756,

     2813, 2840, 2882, 4592, 4619, 2916, 4755, 2883,    0,    0,
     2943, 7381, 2509, 4764, 4763, 4629, 4762, 2564, 4761, 4758,
     4637, 4757, 4746, 2593, 4645, 4672, 4745, 4699, 4709, 2884,
     2486, 2622, 2987, 2669, 2694, 4735, 4727, 4718, 4717, 2761,
     4710, 4695, 4726, 4686, 2885, 4734, 4744,    0, 4773, 4781,
     2663, 4685, 2815, 4684, 4683, 4791, 4682, 4668, 4799, 4659,
     2902, 2914, 2737, 2837, 2941, 2889, 2989, 2938, 3013, 2973,
     3015, 2993, 3082, 2997, 3084, 3020, 4648, 4647, 4807, 4836,
     4863, 4646, 4890, 4900, 3052, 4636, 4911, 4938, 4628, 4965,
     4975, 3119, 4620, 4986, 5013, 4605, 5040, 5050, 3149, 4596,

     5061, 5088, 4583, 5115, 5125, 3150, 7381,    0, 3081,    0,
     4578, 4569, 5136, 4556, 4536, 4535, 5146, 4519, 3151, 3176,
     5156, 5183, 3208, 4494, 3206, 3048, 3155, 5193, 3157, 4495,
     4482, 5203, 4471, 4434, 4424, 5213, 4414, 3233, 3235, 3204,
     3280,    0, 3232,    0, 4396, 3284, 4390, 4332, 5223, 4323,
     4300, 3282, 3291, 3327, 3329, 3333, 3335, 3337, 4269, 4248,
     5229, 5258, 5285, 3378, 4245, 3376, 3421, 5295, 5322, 3472,
     4218, 3422, 3423, 3448, 5332, 5359, 3509, 4205, 3470, 3495,
     3507, 5369, 5396, 3546, 4194, 3532, 3544, 3585, 5406, 5433,
     3599, 4175, 3597,    0,    0, 3626, 7381, 3425, 4180, 4153,

     5443, 4129, 3619, 4105, 4084, 5451, 4078, 4039, 3692, 5459,
     5486, 4010, 5513, 5523, 3624, 3374, 3468, 3720, 3700, 3700,
     4013, 4004, 5532, 3966, 3720, 3962, 3915, 5540, 3910, 3730,
     3705,    0,    0, 3780, 7381, 3879, 5548, 3863, 3832, 3732,
     3776, 3778, 3813, 3815, 3819, 3821, 3778, 5558, 5585, 3864,
        0, 3756, 5595,    0, 3748, 5622, 5632, 3656, 3717, 5643,
        0, 3687, 5670, 5680, 3862, 3664, 5691,    0, 3639, 5718,
     5728, 3907, 3615, 5739,    0, 3588, 5766, 5776, 3908, 3586,
     5787,    0, 3567, 5814, 5824, 3909, 7381,    0, 3816,    0,
     3569, 3545, 5835, 3543, 3508, 3506, 5845, 3471, 3916, 3954,

     5855, 5882, 4005, 3420, 3955, 3860, 3913, 5892, 3956, 3424,
     3401, 5902, 3377, 3354, 3960, 7381, 3999, 3339, 3307, 5912,
     3289, 3250, 4043, 5920, 3234, 3232, 5947, 5957, 3963,    0,
     4048, 4055,    0, 4075, 4076, 4077,    0, 4101, 4102, 4103,
        0, 4104, 4140, 4151,    0, 4152, 4176, 4177,    0, 4178,
        0,    0, 4229, 7381, 4050, 3207, 3152, 5966, 3093, 4079,
     3091, 3072, 5974, 3041, 3016, 4106, 5982,    0, 3014, 6009,
     6019, 4179, 4056, 4136, 4251, 4156, 4156, 3022, 3017, 6028,
     2977, 4183, 4211, 6036, 4225, 2966, 2942, 6046, 2940, 4227,
     4253,    0, 7381, 4254,    0, 2905,    0, 2903,    0, 2881,

        0, 2847,    0, 2831,    0, 7381,    0, 4313,    0, 2839,
     2820, 6056, 2814, 2783, 2767, 6066, 2740, 4290, 4357,    0,
     4387, 4261, 4286, 6076, 4326, 2709, 4328, 4330, 4444, 4388,
     4391, 2702, 2700, 6086, 2693, 2664,    0,    0,    0,    0,
        0,    0,    0,    0,    0, 4496, 7381, 4452, 2635, 2628,
     6094, 2626, 4490, 2624, 2619, 6102, 2600, 2588,    0, 4398,
     4446, 4529, 4450, 4478, 2572, 6110, 2570, 2563,    0, 7381,
     7381, 7381, 7381, 7381, 7381, 7381,    0, 4532,    0, 2542,
     2524, 6120, 2517, 2515,    0, 4531, 4564, 2508, 2489, 6130,
     2458,    0,    0, 4570, 7381, 4601, 2433, 2407, 6138, 2390,

     7381,    0, 4602,    0, 2369, 7381,    0, 4605,    0, 2361,
        0,    0, 4660, 7381,    0,    0, 4687, 7381, 7381, 7381,
     7381, 6157, 2341, 6165, 6168, 6171, 2306, 6176, 6179, 6180,
     6183, 2267, 2265, 6188, 6191, 6193, 6196, 6199, 2259, 6204,
     6207, 6208, 6211, 6214, 2236, 6219, 6222, 6225, 2220, 6230,
     6231, 6234, 6239, 6242, 6245, 2218, 6250, 6253, 6256, 6257,
     6260, 6263, 6266, 6269, 6274, 6277, 6280, 6283, 6286, 6291,
     6292, 6295, 6300, 6305, 6308, 6311, 6314, 2189, 6317, 2142,
     6322, 6325, 2061, 6328, 6331, 6335, 1994, 1960, 6338, 6341,
     6344, 6347, 6350, 6355, 6358, 6361, 6364, 6369, 6372, 6375,

     6378, 6381, 6384, 6387, 6392, 6395, 6396, 6399, 6404, 6409,
     6414, 6417, 6420, 6423, 6428, 6431, 1936, 6436, 6439, 1934,
     6440, 6445, 6448, 1907, 6451, 6454, 1889, 6457, 6460, 1887,
     6463, 6466, 6467, 6470, 6473, 6476, 6479, 6482, 6487, 6490,
     6493, 6496, 6499, 6502, 6507, 6510, 6513, 6516, 6519, 6522,
     6525, 6530, 6533, 6534, 6539, 6544, 6549, 6554, 6557, 6560,
     6563, 6568, 6571, 6576, 6579, 1885, 6584, 6587, 1880, 6590,
     6593, 1851, 6594, 6599, 6602, 1833, 6605, 6608, 1816, 6611,
     6614, 1814, 6617, 6620, 6621, 6626, 6629, 6632, 6635, 6638,
     6641, 6644, 6647, 6650, 6653, 6656, 6659, 1777, 1759, 1742,

     6664, 6667, 6670, 6673, 6676, 6679, 6684, 6687, 6690, 6693,
     6696, 6699, 6702, 6707, 6710, 1740, 6711, 6714, 6719, 6724,
     6729, 6734, 6739, 6744, 6749, 6754, 6759, 6764, 6769, 6772,
     6775, 6778, 6783, 6786, 6791, 6794, 6799, 6802, 1703, 1629,
     1600, 6807, 6810, 1593, 6813, 6816, 1591, 6817, 6822, 6825,
     1584, 6828, 6831, 1534, 6834, 6837, 6838, 1509, 6843, 6846,
     6849, 6852, 6855, 6860, 6865, 6870, 6875, 6880, 6885, 6890,
     6893, 6896, 6899, 6902, 6905, 6908, 1485, 1466, 1464, 6913,
     6916, 6919, 6922, 6925, 6928, 6933, 6936, 6939, 6942, 6945,
     6948, 6951, 6956, 1445, 1383, 1374, 1351, 6961, 6964, 6967,

     6972, 6977, 6982, 6987, 6992, 6997, 7000, 7003, 7008, 7011,
     7016, 7019, 7024, 7027, 7032, 7035, 1327, 1304, 1280, 7040,
     7043, 1249, 7046, 7049, 1176, 7050, 7055, 7058, 1174, 7061,
     7064, 1155, 7067, 7070, 7073, 1110, 1103, 7078, 7081, 7084,
     7087, 7090, 7093, 7096, 7099, 7102, 7105, 7108, 7111, 7114,
     7117, 7120, 7123, 1101, 1094, 1036, 7128, 7131, 7134, 7137,
     7140, 7143, 7148, 7151, 7154, 7157, 7160, 1018, 7165, 7168,
      973, 7169, 7172, 7175, 7180, 7183, 7188, 7191, 7196, 7199,
     7204, 7207, 7212, 7215,  971,  964,  923, 7220, 7223,  889,
     7226, 7229,  857, 7230, 7233, 7238, 7241,  841, 7244, 7247,

     7250, 7253, 7256, 7259, 7262, 7265, 7268, 7271, 7274, 7277,
     7280, 7283,  812,  765,  694, 7288, 7291, 7294, 7297, 7300,
     7303, 7308, 7311, 7314,  692, 7317, 7318, 7321, 7324, 7327,
     7330, 7333, 7336,  663,  645, 7341,  582, 7344, 7345, 7350,
     7353, 7356, 7357,  576,  573,  550, 7362, 7365, 7366,  532,
     7371,  440,  411, 7374,  393,  374,  358,  253,  142,  103,
       65,   52
    } ;

static yyconst short int yy_def[1763] =
    {   0,
     1321,    1, 1322, 1322, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1323, 1321,   16,   17, 1321, 1321,
     1321, 1321, 1321, 1321,   24,   25,   25,   24,   24,   24,
       25,   25,   25,   25,   25,   25,   25, 1324, 1321, 1321,
     1321, 1323, 1321, 1321, 1325, 1326,   44,   47,   47, 1321,
     1321, 1321, 1321,   25,   24,   25,   25,   55,   55,   25,
       25,   55,   25,   25,   25,   25,   25,   25,   25,   25,
     1324, 1327, 1328, 1321, 1329, 1321, 1330, 1331, 1321,   76,
       76, 1321, 1332, 1321,   84,   85,   85,   55,   25,   25,
       88,   88,   25,   25,   25,   25,   25,   25,   25,   25,

       25,   25, 1327, 1333, 1329, 1334, 1321, 1321, 1335, 1321,
     1336, 1337, 1321,  113,  114,  114, 1321, 1338, 1339, 1339,
     1321, 1321, 1321,  122,  122,  125,  124,   25,   25,   25,
       25,   25,   25,   25,   25,   25, 1340, 1321, 1341, 1321,
     1335, 1342, 1343, 1321, 1321, 1321,  145,  145,  148,  147,
     1344, 1321, 1321, 1345, 1321, 1346, 1321, 1347, 1348, 1348,
     1321,  161,  162,  162, 1348,   25,   25,   25,   25,   25,
       25, 1349, 1341, 1350, 1321, 1321, 1321, 1351, 1352, 1321,
      180,  181,  181, 1353, 1353, 1321,  186,  187,  187, 1353,
     1354, 1355, 1321, 1321, 1356, 1347, 1357, 1321, 1321, 1321,

     1321, 1321, 1321,  202,  202,  205,  204,   25,   25,   25,
       25, 1358, 1321, 1359, 1321, 1360, 1361, 1321, 1321, 1321,
      219,  219,  222,  221, 1321, 1321, 1321,  226,  226,  229,
      228, 1362, 1363, 1321, 1321,  235,  236, 1364, 1365, 1321,
     1366, 1321, 1367, 1321, 1368, 1369, 1369, 1321,  248,  249,
      249, 1369,   25, 1321, 1321, 1359, 1370, 1370, 1321, 1321,
     1371, 1372, 1321,  263,  264,  264, 1373, 1373, 1321,  269,
      270,  270, 1373, 1374, 1374, 1321,  276,  277,  277, 1374,
     1321, 1375, 1376, 1321,  284,  285, 1377, 1378, 1321, 1321,
     1379,  289, 1379, 1379, 1380, 1381, 1382, 1321, 1321, 1383,

     1384, 1385, 1321, 1321, 1321, 1321, 1321, 1321,  307,  307,
      310,  309, 1386, 1387, 1388, 1321, 1321, 1321, 1389, 1390,
     1321, 1321, 1321,  322,  322,  325,  324, 1321, 1321, 1321,
      329,  329,  332,  331, 1321, 1321, 1321,  336,  336,  339,
      338, 1391, 1392, 1321, 1321, 1321, 1393,  345, 1393, 1393,
     1394, 1321, 1395, 1396, 1396, 1321,  356,  357, 1397, 1396,
     1398, 1321, 1399, 1321, 1400, 1321, 1401, 1321, 1402, 1321,
     1403, 1404, 1404, 1321,  374,  375,  375, 1404, 1405, 1321,
     1406, 1321, 1407, 1408, 1321,  385,  386,  386, 1409, 1409,
     1321,  391,  392,  392, 1409, 1410, 1410, 1321,  398,  399,

      399, 1410, 1411, 1411, 1321,  405,  406,  406, 1411, 1321,
     1412, 1413, 1321,  413,  414, 1414, 1415, 1415, 1321,  419,
      420, 1416, 1415, 1417, 1418, 1419, 1321, 1321, 1321, 1420,
     1321, 1321, 1421,  431, 1421, 1421, 1422, 1423, 1423, 1321,
     1424, 1425, 1426, 1321, 1321, 1427, 1428, 1429, 1321, 1321,
     1321, 1321, 1321, 1321,  453,  453,  456,  455, 1430, 1431,
     1432, 1321, 1321, 1433, 1434, 1321, 1321, 1321,  467,  467,
      470,  469, 1321, 1321, 1321,  474,  474,  477,  476, 1321,
     1321, 1321,  481,  481,  484,  483, 1321, 1321, 1321,  488,
      488,  491,  490, 1435, 1436, 1321, 1321, 1321, 1437,  497,

     1437, 1437, 1321, 1321, 1321, 1438,  504, 1438, 1438, 1439,
     1321, 1440, 1321, 1441, 1321, 1442, 1443, 1443, 1321,  519,
      520, 1444, 1443, 1321, 1445, 1321, 1446, 1321, 1447, 1321,
     1448, 1321, 1449, 1321, 1450, 1451, 1451, 1321,  538,  539,
      539, 1451, 1452, 1321, 1453, 1321, 1321, 1454, 1321, 1321,
      550,  551,  551, 1455, 1455, 1321,  556,  557,  557, 1455,
     1456, 1456, 1321,  563,  564,  564, 1456, 1457, 1457, 1321,
      570,  571,  571, 1457, 1458, 1458, 1321,  577,  578,  578,
     1458, 1321, 1459, 1460, 1321,  585,  586, 1461, 1462, 1462,
     1321,  591,  592, 1463, 1462, 1464, 1464, 1321,  598,  599,

     1465, 1464, 1466, 1467, 1468, 1321, 1321, 1469, 1470, 1471,
     1321, 1321, 1321, 1472, 1321, 1321, 1473,  615, 1473, 1473,
     1474, 1475, 1475, 1321, 1476, 1477, 1478, 1321, 1321, 1479,
     1480, 1481, 1321, 1321, 1321, 1321, 1321, 1321,  637,  637,
      640,  639, 1482, 1483, 1484, 1321, 1321, 1485, 1321,  649,
      650, 1486, 1487, 1321, 1488,  654,  654,  657,  656, 1321,
     1321, 1489,  661,  661,  664,  663, 1321, 1321, 1490,  668,
      668,  671,  670, 1321, 1321, 1491,  675,  675,  678,  677,
     1321, 1321, 1492,  682,  682,  685,  684, 1493, 1494, 1321,
     1321, 1321, 1495,  691, 1495, 1495, 1321, 1321, 1321, 1496,

      698, 1496, 1496, 1321, 1321, 1321, 1497,  705, 1497, 1497,
     1498, 1499, 1500, 1321, 1501, 1321, 1502, 1321, 1503, 1321,
     1504, 1505, 1505, 1321,  724,  725, 1506, 1505, 1321, 1507,
     1321, 1508, 1321, 1509, 1321, 1510, 1321, 1511, 1321, 1512,
     1513, 1513, 1321,  743,  744,  744, 1513, 1514, 1321, 1515,
     1321, 1321, 1516, 1321, 1517, 1518,  754, 1518, 1518, 1519,
     1520, 1520, 1521, 1520, 1522, 1522, 1523, 1522, 1524, 1524,
     1525, 1524, 1526, 1526, 1527, 1526, 1528, 1528, 1529, 1528,
     1321, 1530, 1531, 1321,  784,  785, 1532, 1533, 1533, 1321,
      790,  791, 1534, 1533, 1535, 1535, 1321,  797,  798, 1536,

     1535, 1537, 1537, 1321,  804,  805, 1538, 1537, 1539, 1540,
     1321, 1321, 1541, 1542, 1543, 1321, 1321, 1544, 1545, 1546,
     1321, 1321, 1321, 1547, 1321, 1321, 1548,  825, 1548, 1548,
     1549, 1550, 1550, 1321, 1551, 1552, 1553, 1321, 1321, 1554,
     1555, 1556, 1321, 1321, 1321, 1321, 1321, 1557,  847,  847,
      850,  849, 1558, 1559, 1560, 1321, 1321, 1561, 1321, 1562,
     1563, 1563, 1564, 1321, 1563, 1565, 1321, 1566, 1321, 1567,
     1321, 1568, 1321, 1569, 1321, 1570, 1571, 1572, 1321, 1321,
     1321, 1573,  880, 1573, 1573, 1321, 1321, 1321, 1574,  887,
     1574, 1574, 1321, 1321, 1321, 1575,  894, 1575, 1575, 1321,

     1321, 1321, 1576,  901, 1576, 1576, 1321, 1577, 1578, 1579,
     1321, 1580, 1321, 1581, 1321, 1582, 1321, 1583, 1584, 1584,
     1321,  921,  922, 1585, 1584, 1321, 1586, 1321, 1587, 1321,
     1588, 1321, 1589, 1321, 1590, 1321, 1591, 1592, 1592, 1593,
     1592, 1594, 1595, 1596, 1321, 1597, 1598, 1599, 1321, 1321,
     1321, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1321, 1607,
     1321, 1321,  962,  963, 1608, 1609, 1609, 1321,  968,  969,
     1610, 1609, 1611, 1611, 1321,  975,  976, 1612, 1611, 1613,
     1613, 1321,  982,  983, 1614, 1613, 1615, 1615, 1321,  989,
      990, 1616, 1615, 1617, 1618, 1321, 1321, 1619, 1620, 1621,

     1321, 1321, 1622, 1623, 1624, 1321, 1321, 1321, 1625, 1321,
     1321, 1626, 1010, 1626, 1626, 1627, 1628, 1628, 1321, 1629,
     1630, 1631, 1321, 1321, 1632, 1633, 1634, 1321, 1321, 1321,
     1635, 1636, 1637, 1321, 1321, 1638, 1321, 1639, 1321, 1640,
     1321, 1321, 1321, 1321, 1321, 1321, 1641, 1321, 1048, 1049,
     1642, 1643, 1321, 1644, 1645, 1053, 1645, 1645, 1321, 1321,
     1646, 1647, 1060, 1647, 1647, 1321, 1321, 1648, 1649, 1067,
     1649, 1649, 1321, 1321, 1650, 1651, 1074, 1651, 1651, 1321,
     1321, 1652, 1653, 1081, 1653, 1653, 1321, 1654, 1655, 1656,
     1321, 1657, 1321, 1658, 1321, 1659, 1321, 1660, 1661, 1661,

     1321, 1101, 1102, 1662, 1661, 1321, 1663, 1321, 1664, 1321,
     1665, 1321, 1666, 1321, 1667, 1321, 1668, 1669, 1670, 1321,
     1321, 1321, 1671, 1321, 1672, 1673, 1124, 1673, 1673, 1674,
     1675, 1675, 1676, 1675, 1677, 1677, 1678, 1677, 1679, 1679,
     1680, 1679, 1681, 1681, 1682, 1681, 1683, 1683, 1684, 1683,
     1685, 1686, 1321, 1321, 1687, 1688, 1689, 1321, 1321, 1690,
     1691, 1692, 1321, 1321, 1321, 1693, 1321, 1694, 1695, 1167,
     1695, 1695, 1696, 1697, 1697, 1321, 1698, 1699, 1700, 1321,
     1321, 1321, 1701, 1321, 1702, 1321, 1703, 1321, 1704, 1705,
     1705, 1706, 1321, 1705, 1707, 1321, 1708, 1321, 1709, 1321,

     1710, 1321, 1711, 1321, 1712, 1321, 1713, 1714, 1715, 1321,
     1716, 1321, 1717, 1321, 1718, 1321, 1719, 1720, 1720, 1721,
     1720, 1321, 1722, 1321, 1723, 1321, 1702, 1724, 1724, 1321,
     1725, 1704, 1726, 1321, 1321, 1321, 1727, 1728, 1729, 1730,
     1731, 1732, 1733, 1715, 1734, 1321, 1321, 1735, 1717, 1736,
     1321, 1321, 1737, 1719, 1738, 1321, 1321, 1321, 1739, 1723,
     1740, 1740, 1321, 1321, 1741, 1321, 1742, 1321, 1743, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1744, 1745, 1746, 1321,
     1747, 1321, 1748, 1321, 1749, 1321, 1750, 1742, 1751, 1321,
     1321, 1746, 1752, 1321, 1321, 1753, 1748, 1754, 1321, 1321,

     1321, 1755, 1756, 1757, 1321, 1321, 1758, 1759, 1760, 1321,
     1757, 1761, 1321, 1321, 1760, 1762, 1321, 1321, 1321, 1321,
        0, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321
    } ;

static yyconst short int yy_nxt[7434] =
    {   0,
        6,    7,    8,    9,   10,   10,   11,   12,   13,   14,
       15,    6,    6,   16,   16,   17,   18,   18,   18,   18,
       18,   19,   20,   21,   22,   23,   24,   24,   25,   25,
       26,   27,   25,   25,    6,   28,   29,   24,   24,   30,
       31,   25,   25,   25,   32,   33,   34,   35,   25,   36,
       25,   37,   39,   39,   39,   39,   43, 1320,   44,   44,
       44,   44,   44,   44,   44,   44,   45,   81,   81,  117,
     1319,   46,   46,   49,   49,   49,   49,   49,   49,   45,
       46,   46,   46,   46,   46,   47,   47,   47,   47,   47,
       48,   49,   49,   54,  160,  160,   55,   55,   55,   55,

       55,   55,   55,   55,   45,  137,  137,  138, 1318,   55,
       55,   54,   54,   54,   54,   54,   54,   54,   55,   55,
       55,   55,   55,   54,   54,   54,   54,   54,   54,   54,
       54,   54,   54,   54,   54,   54,   54,   54,   54,   54,
       54,   54,   54, 1321,   58,   59,   64, 1316,   54,   54,
      185,  185,   60,   65,  154,  154,  155,   54,   54,   54,
       54,   54,   72,  117,   73,   73,   74,   75,   75,   75,
       75,   75,   43, 1321,   76,   76,   76,   76,   76,   76,
       76,   76,   45,  247,  247,  121,   83,   77,   77,  127,
      127,  127,  127,  127,  127,  123,   77,   77,   77,   77,

       77,   80,   80,   80,   80,   80,   80,   80,   80,   81,
       81,   81,   81,   81,   81,   81,   81,   82,   83,   84,
       84,   85,   86,   86,   86,   86,   86,  254,  255,   45,
       82,   83,   87,   87,  150,  150,  150,  150,  150,  150,
      123,   87,   87,   87,   87,   87,   88,   88,   88,   88,
       88,   88,   88,   88,  167,  212,  212,  213, 1315,   88,
       88,  194,  194,  194,  194,  194,  194,  194,   88,   88,
       88,   88,   88,  104,  288,  106,  106,  106,  106,  106,
      107,  108,  108,   43,  290,  109,  109,  109,  109,  109,
      109,  109,  109,   45,  254,  255,  121,   83,  110,  110,

      207,  207,  207,  207,  207,  207,  123,  110,  110,  110,
      110,  110,   82,   83,  113,  113,  114,  115,  115,  115,
      115,  115,  239,  239,  240,  121,   83,  116,  116,  224,
      224,  224,  224,  224,  224,  146,  116,  116,  116,  116,
      116,  121,   83,  122,  122,  122,  122,  122,  122,  122,
      122,  123,   82,   83,  121,   83,  124,  124,  268,  268,
      275,  275,  146, 1314,  146,  124,  124,  124,  124,  124,
      125,  125,  125,  125,  125,  126,  127,  127,   82, 1312,
      124,  124,  124,  124,  124,  124,  124,  124,  128,  128,
      128,  128,  128,  128,  128,  128,  254,  255, 1311,   82,

       83,  128,  128,  231,  231,  231,  231,  231,  231,  123,
      128,  128,  128,  128,  128,  104, 1309,  140,  140,  140,
      140,  140,  140,  121,   83,  145,  145,  145,  145,  145,
      145,  145,  145,  146,   82,   83,  201,   83,  147,  147,
      254,  255,  254,  255,  146, 1306,  203,  147,  147,  147,
      147,  147,  148,  148,  148,  148,  148,  149,  150,  150,
       82,  288,  147,  147,  147,  147,  147,  147,  147,  147,
      118,  346,  156,  156,  157,  158,  158,  158,  158,  158,
      121,   83,  159,  159,  159,  159,  159,  159,  159,  159,
      123,  373,  373,   82,   83,  160,  160,  294,  294,  294,

      294,  294,  294,  203,  160,  160,  160,  160,  160,  161,
      161,  162,  163,  163,  163,  163,  163,  351,  351,  352,
      201,   83,  164,  164,  312,  312,  312,  312,  312,  312,
      203,  164,  164,  164,  164,  164,   82, 1304,  160,  160,
      160,  160,  160,  160,  160,  160,  165,  165,  165,  165,
      165,  165,  165,  165,  172, 1295,  174,  174,  174,  174,
      174,  175,  176,  176,   82,   83,  180,  180,  181,  182,
      182,  182,  182,  182,  254,  255,  121,   83, 1293,  183,
      183, 1292, 1321, 1321,  254,  255,  220, 1283,  183,  183,
      183,  183,  183,  121,   83,  184,  184,  184,  184,  184,

      184,  184,  184,  146,  390,  390,   82,   83,  185,  185,
      327,  327,  327,  327,  327,  327,  220,  185,  185,  185,
      185,  185,  186,  186,  187,  188,  188,  188,  188,  188,
      361,  361,  362,  121,   83,  189,  189,  334,  334,  334,
      334,  334,  334,  220,  189,  189,  189,  189,  189,   82,
     1279,  185,  185,  185,  185,  185,  185,  185,  185,  190,
      190,  190,  190,  190,  190,  190,  190,  195, 1276,  197,
      197,  197,  197,  197,  198,  199,  199,  201,   83,  202,
      202,  202,  202,  202,  202,  202,  202,  203,  201,   83,
       82,   83,  204,  204,  365,  365,  366, 1267,  227, 1247,

      227,  204,  204,  204,  204,  204,  205,  205,  205,  205,
      205,  206,  207,  207,   82,  288,  204,  204,  204,  204,
      204,  204,  204,  204,  172,  290,  215,  215,  215,  215,
      215,  215,  121,   83,  219,  219,  219,  219,  219,  219,
      219,  219,  220,  397,  397,  201,   83,  221,  221,  341,
      341,  341,  341,  341,  341,  227,  221,  221,  221,  221,
      221,  222,  222,  222,  222,  222,  223,  224,  224,   82,
     1245,  221,  221,  221,  221,  221,  221,  221,  221,  201,
       83,  226,  226,  226,  226,  226,  226,  226,  226,  227,
      404,  404,   82,   83,  228,  228,  350,  350,  350,  350,

      350,  350,  203,  228,  228,  228,  228,  228,  229,  229,
      229,  229,  229,  230,  231,  231,   82, 1244,  228,  228,
      228,  228,  228,  228,  228,  228,  235,  235,  236,  237,
      237,  237,  237,  237,  379,  379,  380,   82,   83,  238,
      238,  317,  317,  317,   82,   83, 1225,  220,  238,  238,
      238,  238,  238,  195,  227,  242,  242,  242,  242,  242,
      242,  118, 1217,  243,  243,  244,  245,  245,  245,  245,
      245,  201,   83,  246,  246,  246,  246,  246,  246,  246,
      246,  203, 1321,  288,   82,   83,  247,  247,   82,   83,
       82,   83,  290,  290, 1213,  247,  247,  247,  247,  247,

      248,  248,  249,  250,  250,  250,  250,  250,  510,  510,
      511,  306,   83,  251,  251,  436,  436,  436,  436,  436,
      436,  308,  251,  251,  251,  251,  251,   82, 1209,  247,
      247,  247,  247,  247,  247,  247,  247,  252,  252,  252,
      252,  252,  252,  252,  252,  254,  255,  257,  257,  257,
      257,  257,  258,  259,  259,   82,   83,  263,  263,  264,
      265,  265,  265,  265,  265,   82,   83,  306,   83, 1206,
      266,  266,  514,  514,  515,  308, 1154,  308, 1189,  266,
      266,  266,  266,  266,  121,   83,  267,  267,  267,  267,
      267,  267,  267,  267,  220,   82,   83,  121,   83,  268,

      268,  458,  458,  458,  458,  458,  458,  323,  268,  268,
      268,  268,  268,  269,  269,  270,  271,  271,  271,  271,
      271,   82,   83, 1185,   82,   83,  272,  272,  472,  472,
      472,  472,  472,  472,  323,  272,  272,  272,  272,  272,
       82, 1154,  268,  268,  268,  268,  268,  268,  268,  268,
      273,  273,  273,  273,  273,  273,  273,  273,  201,   83,
      274,  274,  274,  274,  274,  274,  274,  274,  227,  537,
      537,  121,   83,  275,  275,  479,  479,  479,  479,  479,
      479,  323,  275,  275,  275,  275,  275,  276,  276,  277,
      278,  278,  278,  278,  278,  201,   83,   82,   83, 1152,

      279,  279,  525,  525,  526,  330, 1151,  330, 1116,  279,
      279,  279,  279,  279,   82, 1035,  275,  275,  275,  275,
      275,  275,  275,  275,  280,  280,  280,  280,  280,  280,
      280,  280,  284,  284,  285,  286,  286,  286,  286,  286,
      529,  529,  530,  201,   83,  287,  287,  486,  486,  486,
      486,  486,  486,  330,  287,  287,  287,  287,  287,  288,
     1113,  289,  289,  289,  289,  289,  289,  289,  289,  290,
      306,   83,   82,   83,  291,  291,  543,  543,  544, 1109,
      337, 1098,  337,  291,  291,  291,  291,  291,  292,  292,
      292,  292,  292,  293,  294,  294,  295,  288,  297,  297,

      297,  297,  297,  298,  299,  299,  300,  346,  302,  302,
      302,  302,  302,  303,  304,  304,  306,   83,  307,  307,
      307,  307,  307,  307,  307,  307,  308,  555,  555,  306,
       83,  309,  309,  493,  493,  493,  493,  493,  493,  337,
      309,  309,  309,  309,  309,  310,  310,  310,  310,  310,
      311,  312,  312,   82, 1094,  309,  309,  309,  309,  309,
      309,  309,  309,  315,  315,  315,  316,  317,  317,  317,
      317,  121,   83,  322,  322,  322,  322,  322,  322,  322,
      322,  323,  562,  562, 1321, 1090,  324,  324,  502,  502,
      502,  502,  502,  502,  346,  324,  324,  324,  324,  324,

      325,  325,  325,  325,  325,  326,  327,  327,   82, 1087,
      324,  324,  324,  324,  324,  324,  324,  324,  201,   83,
      329,  329,  329,  329,  329,  329,  329,  329,  330,  569,
      569,  288,  997,  331,  331,  509,  509,  509,  509,  509,
      509,  346,  331,  331,  331,  331,  331,  332,  332,  332,
      332,  332,  333,  334,  334,   82, 1038,  331,  331,  331,
      331,  331,  331,  331,  331,  306,   83,  336,  336,  336,
      336,  336,  336,  336,  336,  337,  430,   82,   83, 1035,
      338,  338,  576,  576,   82,   83,  432,  308, 1033,  338,
      338,  338,  338,  338,  339,  339,  339,  339,  339,  340,

      341,  341,   82,  288,  338,  338,  338,  338,  338,  338,
      338,  338,  288,  498,  345,  345,  345,  345,  345,  345,
      345,  345,  346,   82,   83,   82,   83,  347,  347,   82,
       83, 1321, 1321,   82,   83,  323,  347,  347,  347,  347,
      347,  348,  348,  348,  348,  348,  349,  350,  350,  288,
     1032,  354,  354,  354,  354,  354,  354,  354,  354,  290,
       82,   83,   82,   83,  355,  355,  711,  711,  712,  997,
      330,  995,  337,  355,  355,  355,  355,  355,  356,  356,
      357,  358,  358,  358,  358,  358,  430,  430, 1321,  430,
      994,  359,  359,  715,  715,  716,  505,  432,  432,  432,

      359,  359,  359,  359,  359,  360,  360,  360,  360,  360,
      360,  360,  360,  288,  944,  360,  360,  360,  360,  360,
      360,  288,  295,  290,  364,  364,  364,  364,  364,  364,
      300,  498,  368,  368,  368,  368,  368,  368,  118,  933,
      369,  369,  370,  371,  371,  371,  371,  371,  306,   83,
      372,  372,  372,  372,  372,  372,  372,  372,  308,   82,
       83,  452,   83,  373,  373,  620,  620,  620,  620,  620,
      620,  454,  373,  373,  373,  373,  373,  374,  374,  375,
      376,  376,  376,  376,  376,   82,   83,  452,   83,  929,
      377,  377,  719,  719,  720,  454,  918,  454,  914,  377,

      377,  377,  377,  377,   82,  910,  373,  373,  373,  373,
      373,  373,  373,  373,  378,  378,  378,  378,  378,  378,
      378,  378,   82,   83,  385,  385,  386,  387,  387,  387,
      387,  387,   82,   83,  907,  121,   83,  388,  388,  642,
      642,  642,  642,  642,  642,  468,  388,  388,  388,  388,
      388,  121,   83,  389,  389,  389,  389,  389,  389,  389,
      389,  323,   82,   83,   82,   83,  390,  390,  659,  659,
      659,  659,  659,  659,  468,  390,  390,  390,  390,  390,
      391,  391,  392,  393,  393,  393,  393,  393,  730,  730,
      731,  121,   83,  394,  394,  666,  666,  666,  666,  666,

      666,  468,  394,  394,  394,  394,  394,   82,  812,  390,
      390,  390,  390,  390,  390,  390,  390,  395,  395,  395,
      395,  395,  395,  395,  395,  201,   83,  396,  396,  396,
      396,  396,  396,  396,  396,  330,  201,   83,   82,   83,
      397,  397,  734,  734,  735,  860,  475,  812,  475,  397,
      397,  397,  397,  397,  398,  398,  399,  400,  400,  400,
      400,  400,  742,  742,  810,  201,   83,  401,  401,  673,
      673,  673,  673,  673,  673,  475,  401,  401,  401,  401,
      401,   82,  809,  397,  397,  397,  397,  397,  397,  397,
      397,  402,  402,  402,  402,  402,  402,  402,  402,  306,

       83,  403,  403,  403,  403,  403,  403,  403,  403,  337,
      306,   83,   82,   83,  404,  404,  748,  748,  749,  750,
      482,  736,  482,  404,  404,  404,  404,  404,  405,  405,
      406,  407,  407,  407,  407,  407,   82,   83,  732,  306,
       83,  408,  408,  680,  680,  680,  680,  680,  680,  482,
      408,  408,  408,  408,  408,   82,  721,  404,  404,  404,
      404,  404,  404,  404,  404,  409,  409,  409,  409,  409,
      409,  409,  409,  413,  413,  414,  415,  415,  415,  415,
      415,  452,   83,   82,   83,  717,  416,  416,  762,  762,
      713,  489,  545,  489,  531,  416,  416,  416,  416,  416,

      288, 1321,  417,  417,  417,  417,  417,  417,  417,  417,
      346,  498,  527,  452,   83,  418,  418,  687,  687,  687,
      687,  687,  687,  489,  418,  418,  418,  418,  418,  419,
      419,  420,  421,  421,  421,  421,  421,  766,  766,  516,
      288,  512,  422,  422,  696,  696,  696,  696,  696,  696,
      498,  422,  422,  422,  422,  422,  423,  423,  423,  423,
      423,  423,  423,  423,  288,  317,  423,  423,  423,  423,
      423,  423,  770,  770,  346,  424,  430,  426,  426,  426,
      426,  426,  427,  428,  428,  430,  505,  431,  431,  431,
      431,  431,  431,  431,  431,  432,  774,  774, 1321,  381,

      433,  433,  703,  703,  703,  703,  703,  703,  505,  433,
      433,  433,  433,  433,  434,  434,  434,  434,  434,  435,
      436,  436,   82,   83,  438,  438,  438,  438,  438,  439,
      440,  440,  441,  430,  443,  443,  443,  443,  443,  444,
      445,  445,  446,  505,  448,  448,  448,  448,  448,  449,
      450,  450,  452,   83,  453,  453,  453,  453,  453,  453,
      453,  453,  454,  778,  778,  614,  367,  455,  455,  710,
      710,  710,  710,  710,  710,  616,  455,  455,  455,  455,
      455,  456,  456,  456,  456,  456,  457,  458,  458,   82,
      288,  455,  455,  455,  455,  455,  455,  455,  455,  459,

      692,  461,  461,  461,  461,  461,  462,  463,  463,  121,
       83,  467,  467,  467,  467,  467,  467,  467,  467,  468,
       82,   83,   82,   83,  469,  469,   82,   83, 1321, 1321,
       82,   83,  454,  469,  469,  469,  469,  469,  470,  470,
      470,  470,  470,  471,  472,  472,   82,  363,  469,  469,
      469,  469,  469,  469,  469,  469,  201,   83,  474,  474,
      474,  474,  474,  474,  474,  474,  475,   82,   83,   82,
       83,  476,  476,  759,  759,  759,  759,  759,  759,  468,
      476,  476,  476,  476,  476,  477,  477,  477,  477,  477,
      478,  479,  479,   82,  353,  476,  476,  476,  476,  476,

      476,  476,  476,  306,   83,  481,  481,  481,  481,  481,
      481,  481,  481,  482,   82,   83,   82,   83,  483,  483,
      811,  812,  812,  241,  475,  214,  482,  483,  483,  483,
      483,  483,  484,  484,  484,  484,  484,  485,  486,  486,
       82,  194,  483,  483,  483,  483,  483,  483,  483,  483,
      452,   83,  488,  488,  488,  488,  488,  488,  488,  488,
      489,   82,   83,  430,  153,  490,  490,  858,  858,  859,
      139,  489,  119,  699,  490,  490,  490,  490,  490,  491,
      491,  491,  491,  491,  492,  493,  493,   82,  614,  490,
      490,  490,  490,  490,  490,  490,  490,  288,  706,  497,

      497,  497,  497,  497,  497,  497,  497,  498,  614, 1321,
      614,  103,  499,  499,   82,   83,   82,   83,  616,  616,
      616,  499,  499,  499,  499,  499,  500,  500,  500,  500,
      500,  501,  502,  502,  430,  753,  504,  504,  504,  504,
      504,  504,  504,  504,  505,  755,   42,  636,   83,  506,
      506,  830,  830,  830,  830,  830,  830,  638,  506,  506,
      506,  506,  506,  507,  507,  507,  507,  507,  508,  509,
      509,  424, 1296,  513,  513,  513,  513,  513,  513,  430,
     1287,  517,  517,  517,  517,  517,  517,  517,  517,  432,
       82,   83,  636,   83,  518,  518,   82,   83,   82,   83,

      638, 1296,  638,  518,  518,  518,  518,  518,  519,  519,
      520,  521,  521,  521,  521,  521,   82,   83, 1296,  121,
       83,  522,  522,  852,  852,  852,  852,  852,  852,  655,
      522,  522,  522,  522,  522,  523,  523,  523,  523,  523,
      523,  523,  523,  430, 1296,  523,  523,  523,  523,  523,
      523,  288,  441,  432,  528,  528,  528,  528,  528,  528,
      446,  692,  532,  532,  532,  532,  532,  532,  118, 1287,
      533,  533,  534,  535,  535,  535,  535,  535,  452,   83,
      536,  536,  536,  536,  536,  536,  536,  536,  454,   82,
       83,  121,   83,  537,  537,   82,   83,   82,   83,  655,

     1287,  655,  537,  537,  537,  537,  537,  538,  538,  539,
      540,  540,  540,  540,  540,  201,   83,   82,   83, 1287,
      541,  541,  908,  908,  909,  662, 1253,  662, 1296,  541,
      541,  541,  541,  541,   82, 1296,  537,  537,  537,  537,
      537,  537,  537,  537,  542,  542,  542,  542,  542,  542,
      542,  542,  459, 1248,  546,  546,  546,  546,  546,  546,
       82,   83,  550,  550,  551,  552,  552,  552,  552,  552,
      201,   83,  306,   83, 1231,  553,  553,  912,  912,  913,
      662, 1287,  669, 1287,  553,  553,  553,  553,  553,  121,
       83,  554,  554,  554,  554,  554,  554,  554,  554,  468,

       82,   83,  306,   83,  555,  555,  916,  916,  917, 1168,
      669, 1253,  669,  555,  555,  555,  555,  555,  556,  556,
      557,  558,  558,  558,  558,  558,  452,   83,   82,   83,
     1253,  559,  559,   82,   83, 1253,  676, 1248,  676, 1248,
      559,  559,  559,  559,  559,   82, 1248,  555,  555,  555,
      555,  555,  555,  555,  555,  560,  560,  560,  560,  560,
      560,  560,  560,  201,   83,  561,  561,  561,  561,  561,
      561,  561,  561,  475,  452,   83,  636,   83,  562,  562,
       82,   83,  939,  939,  676, 1125,  683,  562,  562,  562,
      562,  562,  563,  563,  564,  565,  565,  565,  565,  565,

       82,   83,  636,   83, 1231,  566,  566,  927,  927,  928,
      683, 1231,  683, 1231,  566,  566,  566,  566,  566,   82,
     1177,  562,  562,  562,  562,  562,  562,  562,  562,  567,
      567,  567,  567,  567,  567,  567,  567,  306,   83,  568,
      568,  568,  568,  568,  568,  568,  568,  482,   82,   83,
     1321, 1253,  569,  569,  885,  885,  885,  885,  885,  885,
      692,  569,  569,  569,  569,  569,  570,  570,  571,  572,
      572,  572,  572,  572,  931,  931,  932,  288, 1253,  573,
      573,  892,  892,  892,  892,  892,  892,  692,  573,  573,
      573,  573,  573,   82, 1160,  569,  569,  569,  569,  569,

      569,  569,  569,  574,  574,  574,  574,  574,  574,  574,
      574,  452,   83,  575,  575,  575,  575,  575,  575,  575,
      575,  489,  430, 1321,  430, 1248,  576,  576,  942,  942,
      943, 1248,  699,  699,  699,  576,  576,  576,  576,  576,
      577,  577,  578,  579,  579,  579,  579,  579,   82,   83,
     1155,  614, 1082,  580,  580,  899,  899,  899,  899,  899,
      899,  706,  580,  580,  580,  580,  580,   82, 1075,  576,
      576,  576,  576,  576,  576,  576,  576,  581,  581,  581,
      581,  581,  581,  581,  581,  585,  585,  586,  587,  587,
      587,  587,  587, 1321,  614,  824,   82,   83,  588,  588,

       82,   83, 1068,  706,  706,  826,  638,  588,  588,  588,
      588,  588,  288,  753,  589,  589,  589,  589,  589,  589,
      589,  589,  498,  755, 1061, 1321, 1054,  590,  590,  906,
      906,  906,  906,  906,  906,  755,  590,  590,  590,  590,
      590,  591,  591,  592,  593,  593,  593,  593,  593,   82,
       83, 1231,  753, 1231,  594,  594,  907,  907,  907,  907,
      907,  907,  755,  594,  594,  594,  594,  594,  595,  595,
      595,  595,  595,  595,  595,  595,  288, 1117,  595,  595,
      595,  595,  595,  595,   82,   83,  498,  430, 1177,  596,
      596,  596,  596,  596,  596,  596,  596,  505,   82,   83,

       82,   83,  597,  597,   82,   83, 1321, 1321,   82,   83,
      655,  597,  597,  597,  597,  597,  598,  598,  599,  600,
      600,  600,  600,  600,   82,   83,   82,   83, 1177,  601,
      601,   82,   83, 1177,  662, 1168,  669, 1011,  601,  601,
      601,  601,  601,  602,  602,  602,  602,  602,  602,  602,
      602,  430, 1160,  602,  602,  602,  602,  602,  602,   82,
       83,  505,  603,  288,  605,  605,  605,  605,  605,  606,
      607,  607,  608,  881,  610,  610,  610,  610,  610,  611,
      612,  612,  614, 1160,  615,  615,  615,  615,  615,  615,
      615,  615,  616,   82,   83,   82,   83,  617,  617,  996,

      997,  997, 1160,  676, 1155,  683,  617,  617,  617,  617,
      617,  618,  618,  618,  618,  618,  619,  620,  620,   82,
       83,  622,  622,  622,  622,  622,  623,  624,  624,  625,
      430,  627,  627,  627,  627,  627,  628,  629,  629,  630,
      888,  632,  632,  632,  632,  632,  633,  634,  634,  636,
       83,  637,  637,  637,  637,  637,  637,  637,  637,  638,
      614,  824,  824, 1155,  639,  639,   82,   83,   82,   83,
      895,  902,  826,  639,  639,  639,  639,  639,  640,  640,
      640,  640,  640,  641,  642,  642,   82, 1321,  639,  639,
      639,  639,  639,  639,  639,  639,  643,  826,  645,  645,

      645,  645,  645,  646,  647,  647,  649,  649,  650,  651,
      651,  651,  651,  651,  652,   82,   83,  824, 1155,  653,
      653, 1015, 1015, 1015, 1015, 1015, 1015,  826,  653,  653,
      653,  653,  653,  121,   83,  654,  654,  654,  654,  654,
      654,  654,  654,  655,  846,   83,   82,   83,  656,  656,
     1034, 1035, 1035, 1125,  848, 1193,  848,  656,  656,  656,
      656,  656,  657,  657,  657,  657,  657,  658,  659,  659,
       82,  961,  656,  656,  656,  656,  656,  656,  656,  656,
      201,   83,  661,  661,  661,  661,  661,  661,  661,  661,
      662,  846,   83,   82,   83,  663,  663, 1036, 1036, 1037,

     1117,  848,   82,   83,  663,  663,  663,  663,  663,  664,
      664,  664,  664,  664,  665,  666,  666,   82, 1117,  663,
      663,  663,  663,  663,  663,  663,  663,  306,   83,  668,
      668,  668,  668,  668,  668,  668,  668,  669,   82,   83,
       82,   83,  670,  670,   82,   83,   82,   83,   82,   83,
     1117,  670,  670,  670,  670,  670,  671,  671,  671,  671,
      671,  672,  673,  673,   82, 1025,  670,  670,  670,  670,
      670,  670,  670,  670,  452,   83,  675,  675,  675,  675,
      675,  675,  675,  675,  676,   82,   83,  288, 1177,  677,
      677, 1058, 1058, 1058, 1058, 1058, 1058,  881,  677,  677,

      677,  677,  677,  678,  678,  678,  678,  678,  679,  680,
      680,   82, 1177,  677,  677,  677,  677,  677,  677,  677,
      677,  636,   83,  682,  682,  682,  682,  682,  682,  682,
      682,  683, 1321,  288,  430, 1020,  684,  684, 1088, 1088,
     1089, 1168,  881,  881,  888,  684,  684,  684,  684,  684,
      685,  685,  685,  685,  685,  686,  687,  687,   82, 1321,
      684,  684,  684,  684,  684,  684,  684,  684,  288,  888,
      691,  691,  691,  691,  691,  691,  691,  691,  692,   82,
       83,  430, 1160,  693,  693, 1065, 1065, 1065, 1065, 1065,
     1065,  888,  693,  693,  693,  693,  693,  694,  694,  694,

      694,  694,  695,  696,  696,  430,  614,  698,  698,  698,
      698,  698,  698,  698,  698,  699,  895, 1160, 1321, 1003,
      700,  700, 1072, 1072, 1072, 1072, 1072, 1072,  895,  700,
      700,  700,  700,  700,  701,  701,  701,  701,  701,  702,
      703,  703,  614,  614,  705,  705,  705,  705,  705,  705,
      705,  705,  706,  895, 1155,  824, 1155,  707,  707, 1079,
     1079, 1079, 1079, 1079, 1079,  902,  707,  707,  707,  707,
      707,  708,  708,  708,  708,  708,  709,  710,  710,  603,
      998,  714,  714,  714,  714,  714,  714,  608, 1082,  718,
      718,  718,  718,  718,  718,  614, 1321,  722,  722,  722,

      722,  722,  722,  722,  722,  616,  902,  902,  824, 1075,
      723,  723, 1086, 1086, 1086, 1086, 1086, 1086,  902,  723,
      723,  723,  723,  723,  724,  724,  725,  726,  726,  726,
      726,  726, 1092, 1092, 1093, 1009,  895,  727,  727, 1087,
     1087, 1087, 1087, 1087, 1087, 1011,  727,  727,  727,  727,
      727,  728,  728,  728,  728,  728,  728,  728,  728,  614,
     1068,  728,  728,  728,  728,  728,  728,  288,  625,  616,
      733,  733,  733,  733,  733,  733,  630, 1054,  737,  737,
      737,  737,  737,  737,  118,  888,  738,  738,  739,  740,
      740,  740,  740,  740,  636,   83,  741,  741,  741,  741,

      741,  741,  741,  741,  638, 1096, 1096, 1097, 1061,  742,
      742,   82,   83, 1107, 1107, 1108,   82,   83,  742,  742,
      742,  742,  742,  743,  743,  744,  745,  745,  745,  745,
      745,   82,   83, 1111, 1111, 1112,  746,  746,  881, 1321,
     1321,   82,   83,   82,   83,  746,  746,  746,  746,  746,
       82,  848,  742,  742,  742,  742,  742,  742,  742,  742,
      747,  747,  747,  747,  747,  747,  747,  747,  643, 1054,
      751,  751,  751,  751,  751,  751,  753, 1125,  754,  754,
      754,  754,  754,  754,  754,  754,  755,   82,   83,   82,
       83,  756,  756, 1116, 1116, 1116, 1116, 1116, 1116,  961,

      756,  756,  756,  756,  756,  757,  757,  757,  757,  757,
      758,  759,  759,  121,   83,  761,  761,  761,  761,  761,
      761,  761,  761,  655,   82,   83,   82,   83,  762,  762,
       82,   83,   82,   83, 1153, 1154, 1154,  762,  762,  762,
      762,  762,   82,  946,  762,  762,  762,  762,  762,  762,
      762,  762,  764,  764,  764,  764,  764,  764,  764,  764,
      201,   83,  765,  765,  765,  765,  765,  765,  765,  765,
      662,   82,   83,  430, 1117,  766,  766, 1129, 1129, 1129,
     1129, 1129, 1129, 1061,  766,  766,  766,  766,  766,   82,
     1117,  766,  766,  766,  766,  766,  766,  766,  766,  768,

      768,  768,  768,  768,  768,  768,  768,  306,   83,  769,
      769,  769,  769,  769,  769,  769,  769,  669,  614,  824,
     1009, 1025,  770,  770,   82,   83, 1025, 1009, 1068, 1075,
     1082,  770,  770,  770,  770,  770,   82, 1011,  770,  770,
      770,  770,  770,  770,  770,  770,  772,  772,  772,  772,
      772,  772,  772,  772,  452,   83,  773,  773,  773,  773,
      773,  773,  773,  773,  676, 1321, 1009,   82,   83,  774,
      774,   82,   83, 1025, 1123, 1011, 1011, 1020,  774,  774,
      774,  774,  774,   82, 1125,  774,  774,  774,  774,  774,
      774,  774,  774,  776,  776,  776,  776,  776,  776,  776,

      776,  636,   83,  777,  777,  777,  777,  777,  777,  777,
      777,  683, 1183, 1183, 1184, 1020,  778,  778, 1172, 1172,
     1172, 1172, 1172, 1172, 1020,  778,  778,  778,  778,  778,
       82, 1011,  778,  778,  778,  778,  778,  778,  778,  778,
      780,  780,  780,  780,  780,  780,  780,  780,  784,  784,
      785,  786,  786,  786,  786,  786, 1187, 1187, 1188,  288,
      826,  787,  787, 1207, 1207, 1208, 1321,   82,   83, 1054,
      787,  787,  787,  787,  787,  288, 1054,  788,  788,  788,
      788,  788,  788,  788,  788,  692,  288,  430, 1321, 1003,
      789,  789, 1211, 1211, 1212, 1003, 1054, 1061, 1061,  789,

      789,  789,  789,  789,  790,  790,  791,  792,  792,  792,
      792,  792,  430,  614, 1321,  614, 1003,  793,  793, 1215,
     1215, 1216, 1061, 1068, 1068, 1068,  793,  793,  793,  793,
      793,  794,  794,  794,  794,  794,  794,  794,  794,  288,
      998,  794,  794,  794,  794,  794,  794,   82,   83,  692,
      430,  824,  795,  795,  795,  795,  795,  795,  795,  795,
      699, 1075, 1321,  824,  998,  796,  796,   82,   83, 1223,
     1223, 1224, 1075, 1075,  796,  796,  796,  796,  796,  797,
      797,  798,  799,  799,  799,  799,  799, 1009, 1321, 1009,
     1166,  998,  800,  800,   82,   83, 1082, 1082, 1082, 1082,

     1168,  800,  800,  800,  800,  800,  801,  801,  801,  801,
      801,  801,  801,  801,  430, 1075,  801,  801,  801,  801,
      801,  801,   82,   83,  699,  614, 1068,  802,  802,  802,
      802,  802,  802,  802,  802,  706,   82,   83, 1123, 1061,
      803,  803, 1206, 1206, 1206, 1206, 1206, 1206, 1125,  803,
      803,  803,  803,  803,  804,  804,  805,  806,  806,  806,
      806,  806,   82,   83, 1321, 1123, 1054,  807,  807,  961,
     1321, 1321,   82,   83, 1125, 1125,  807,  807,  807,  807,
      807,  808,  808,  808,  808,  808,  808,  808,  808,  614,
      783,  808,  808,  808,  808,  808,  808,   82,   83,  706,

      813, 1166,  815,  815,  815,  815,  815,  816,  817,  817,
      818, 1168,  820,  820,  820,  820,  820,  821,  822,  822,
      824,  755,  825,  825,  825,  825,  825,  825,  825,  825,
      826, 1246, 1247, 1247,  946,  827,  827,   82,   83,   82,
       83,   82,   83,  946,  827,  827,  827,  827,  827,  828,
      828,  828,  828,  828,  829,  830,  830,   82,   83,  832,
      832,  832,  832,  832,  833,  834,  834,  835, 1321,  837,
      837,  837,  837,  837,  838,  839,  839,  840, 1168,  842,
      842,  842,  842,  842,  843,  844,  844,  846,   83,  847,
      847,  847,  847,  847,  847,  847,  847,  848, 1166,   82,

       83,  946,  849,  849, 1265, 1265, 1266,  853, 1168,   82,
       83,  849,  849,  849,  849,  849,  850,  850,  850,  850,
      850,  851,  852,  852,   82, 1025,  849,  849,  849,  849,
      849,  849,  849,  849,  853, 1025,  855,  855,  855,  855,
      855,  856,  857,  857,  753,  840,  861,  861,  861,  861,
      861,  861,  861,  861,  755,   82,   83,   82,   83,  862,
      862,   82,   83, 1321, 1321, 1277, 1277, 1278,  862,  862,
      862,  862,  862,  865,  865,  865,  865,  865,  865,  865,
      865,  753, 1020,  865,  865,  865,  865,  865,  865,   82,
       83,  755,  288, 1020,  880,  880,  880,  880,  880,  880,

      880,  880,  881, 1281, 1281, 1282,  835,  882,  882, 1276,
     1276, 1276, 1276, 1276, 1276, 1011,  882,  882,  882,  882,
      882,  883,  883,  883,  883,  883,  884,  885,  885,  430,
     1003,  887,  887,  887,  887,  887,  887,  887,  887,  888,
       82,   83,   82,   83,  889,  889, 1003,  818, 1321, 1321,
     1294, 1295, 1295,  889,  889,  889,  889,  889,  890,  890,
      890,  890,  890,  891,  892,  892,  614,  998,  894,  894,
      894,  894,  894,  894,  894,  894,  895, 1302, 1302, 1303,
      998,  896,  896, 1306, 1306, 1306, 1306, 1306, 1306,  813,
      896,  896,  896,  896,  896,  897,  897,  897,  897,  897,

      898,  899,  899,  824,  902,  901,  901,  901,  901,  901,
      901,  901,  901,  902, 1307, 1307, 1308,  706,  903,  903,
     1313, 1314, 1314, 1317, 1318, 1318,  895,  903,  903,  903,
      903,  903,  904,  904,  904,  904,  904,  905,  906,  906,
      813,  699,  911,  911,  911,  911,  911,  911,  818,  888,
      915,  915,  915,  915,  915,  915,  824,  692,  919,  919,
      919,  919,  919,  919,  919,  919,  826,  881,  961,  783,
      946,  920,  920, 1319, 1319, 1319, 1319, 1319, 1319,  946,
      920,  920,  920,  920,  920,  921,  921,  922,  923,  923,
      923,  923,  923,  853,  853,  853,  846,  840,  924,  924,

     1320, 1320, 1320, 1320, 1320, 1320,  840,  924,  924,  924,
      924,  924,  925,  925,  925,  925,  925,  925,  925,  925,
      824,  840,  925,  925,  925,  925,  925,  925,  835,  835,
      826,  930,  930,  930,  930,  930,  930,  840,  835,  934,
      934,  934,  934,  934,  934,  118,  835,  935,  935,  936,
      937,  937,  937,  937,  937,  846,   83,  938,  938,  938,
      938,  938,  938,  938,  938,  848,  826,  616,  818,  818,
      939,  939,  818,  813,  813,  813,  902,  895,  888,  939,
      939,  939,  939,  939,   82,  881,  939,  939,  939,  939,
      939,  939,  939,  939,  941,  941,  941,  941,  941,  941,

      941,  941,  853,  879,  945,  945,  945,  945,  945,  945,
      946,  783,  948,  948,  948,  948,  948,  949,  950,  950,
      962,  962,  963,  964,  964,  964,  964,  964,  584,  755,
      864,  549,  643,  965,  965,  853,  853,  840,  840,  630,
      835,  835,  965,  965,  965,  965,  965,  288,  625,  966,
      966,  966,  966,  966,  966,  966,  966,  881,  826,  818,
      818,  608,  967,  967,  813,  813,  603,  706,  505,  699,
      498,  967,  967,  967,  967,  967,  968,  968,  969,  970,
      970,  970,  970,  970,  692,  783,  584,  636,  452,  971,
      971,  306,  201,  121,  755,  549,  643,  643,  971,  971,

      971,  971,  971,  972,  972,  972,  972,  972,  972,  972,
      972,  288,  643,  972,  972,  972,  972,  972,  972,  636,
      630,  881,  430,  630,  973,  973,  973,  973,  973,  973,
      973,  973,  888,  630,  625,  625,  625,  974,  974,  616,
      432,  608,  608,  608,  603,  603,  974,  974,  974,  974,
      974,  975,  975,  976,  977,  977,  977,  977,  977,  603,
      706,  699,  692,  690,  978,  978,  584,  412,  549,  384,
      459,  643,  643,  978,  978,  978,  978,  978,  979,  979,
      979,  979,  979,  979,  979,  979,  430,  630,  979,  979,
      979,  979,  979,  979,  630,  446,  888,  614,  625,  980,

      980,  980,  980,  980,  980,  980,  980,  895,  625,  441,
      616,  608,  981,  981,  608,  424,  603,  603,  505,  346,
      498,  981,  981,  981,  981,  981,  982,  982,  983,  984,
      984,  984,  984,  984,  584,  412,  452,  306,  201,  985,
      985,  121,  549,  384,  459,  459,  459,  452,  985,  985,
      985,  985,  985,  986,  986,  986,  986,  986,  986,  986,
      986,  614,  446,  986,  986,  986,  986,  986,  986,  446,
      446,  895,  824,  441,  987,  987,  987,  987,  987,  987,
      987,  987,  902,  441,  441,  432,  290,  988,  988,  424,
      424,  424,  505,  498,  496,  412,  988,  988,  988,  988,

      988,  989,  989,  990,  991,  991,  991,  991,  991,  283,
      466,  384,  262,  459,  992,  992,  459,  446,  446,  300,
      441,  441,  295,  992,  992,  992,  992,  992,  993,  993,
      993,  993,  993,  993,  993,  993,  824,  432,  993,  993,
      993,  993,  993,  993,  424,  424,  902,  998,  346, 1000,
     1000, 1000, 1000, 1000, 1001, 1002, 1002, 1003,  412, 1005,
     1005, 1005, 1005, 1005, 1006, 1007, 1007, 1009,  283, 1010,
     1010, 1010, 1010, 1010, 1010, 1010, 1010, 1011,  306,  201,
      121,  384, 1012, 1012,  262,  306,  300,  300,  300,  295,
      295, 1012, 1012, 1012, 1012, 1012, 1013, 1013, 1013, 1013,

     1013, 1014, 1015, 1015,   82,   83, 1017, 1017, 1017, 1017,
     1017, 1018, 1019, 1019, 1020,  295, 1022, 1022, 1022, 1022,
     1022, 1023, 1024, 1024, 1025,  290, 1027, 1027, 1027, 1027,
     1027, 1028, 1029, 1029,  946,  346, 1039, 1039, 1039, 1039,
     1039, 1039, 1048, 1048, 1049, 1050, 1050, 1050, 1050, 1050,
     1051,  344,  283,  192,  321, 1052, 1052,  262,  179,  314,
      313,  300,  300,  195, 1052, 1052, 1052, 1052, 1052,  288,
      295, 1053, 1053, 1053, 1053, 1053, 1053, 1053, 1053, 1054,
      295,  290,  283,  192, 1055, 1055,  201,  121,  262,  179,
      172,  253,  201, 1055, 1055, 1055, 1055, 1055, 1056, 1056,

     1056, 1056, 1056, 1057, 1058, 1058,  430,  195, 1060, 1060,
     1060, 1060, 1060, 1060, 1060, 1060, 1061,  195,  195,  234,
      192, 1062, 1062,  218,  179,  112,  172,  172,  172,  211,
     1062, 1062, 1062, 1062, 1062, 1063, 1063, 1063, 1063, 1063,
     1064, 1065, 1065,  614,  210, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1067, 1068,  209,  208,  195,  195, 1069, 1069,
      193,  192,  121,  179,  112,  104,  172, 1069, 1069, 1069,
     1069, 1069, 1070, 1070, 1070, 1070, 1070, 1071, 1072, 1072,
      824,  172, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,
     1075,  171,  170,  169,  168, 1076, 1076,  166,   45,  121,

      152,   72,  144,  112, 1076, 1076, 1076, 1076, 1076, 1077,
     1077, 1077, 1077, 1077, 1078, 1079, 1079, 1009,   45, 1081,
     1081, 1081, 1081, 1081, 1081, 1081, 1081, 1082,  104,  104,
      104,  136, 1083, 1083,  135,  134,  133,  132,  131,  130,
      129, 1083, 1083, 1083, 1083, 1083, 1084, 1084, 1084, 1084,
     1084, 1085, 1086, 1086,  998,  120, 1091, 1091, 1091, 1091,
     1091, 1091, 1003,  118, 1095, 1095, 1095, 1095, 1095, 1095,
     1009,  117, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
     1011,  112,   45,  104,  104, 1100, 1100,  102,  101,  100,
       99,   98,   97,   96, 1100, 1100, 1100, 1100, 1100, 1101,

     1101, 1102, 1103, 1103, 1103, 1103, 1103,   95,   94,   93,
       92,   91, 1104, 1104,   90,   89,   45,   79,   40,   70,
       69, 1104, 1104, 1104, 1104, 1104, 1105, 1105, 1105, 1105,
     1105, 1105, 1105, 1105, 1009,   68, 1105, 1105, 1105, 1105,
     1105, 1105,   67, 1020, 1011, 1110, 1110, 1110, 1110, 1110,
     1110, 1025,   66, 1114, 1114, 1114, 1114, 1114, 1114, 1117,
       63, 1119, 1119, 1119, 1119, 1119, 1120, 1121, 1121, 1123,
       62, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1124, 1125,
       61,   57,   56,   53, 1126, 1126,   52,   51,   50,   41,
       40, 1321, 1321, 1126, 1126, 1126, 1126, 1126, 1127, 1127,

     1127, 1127, 1127, 1128, 1129, 1129,  288, 1321, 1131, 1131,
     1131, 1131, 1131, 1131, 1131, 1131, 1054, 1321, 1321, 1321,
     1321, 1132, 1132, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1132, 1132, 1132, 1132, 1132, 1134, 1134, 1134, 1134, 1134,
     1134, 1134, 1134,  288, 1321, 1134, 1134, 1134, 1134, 1134,
     1134, 1321, 1321, 1054,  430, 1321, 1135, 1135, 1135, 1135,
     1135, 1135, 1135, 1135, 1061, 1321, 1321, 1321, 1321, 1136,
     1136, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1136, 1136,
     1136, 1136, 1136, 1138, 1138, 1138, 1138, 1138, 1138, 1138,
     1138,  430, 1321, 1138, 1138, 1138, 1138, 1138, 1138, 1321,

     1321, 1061,  614, 1321, 1139, 1139, 1139, 1139, 1139, 1139,
     1139, 1139, 1068, 1321, 1321, 1321, 1321, 1140, 1140, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1140, 1140, 1140, 1140,
     1140, 1142, 1142, 1142, 1142, 1142, 1142, 1142, 1142,  614,
     1321, 1142, 1142, 1142, 1142, 1142, 1142, 1321, 1321, 1068,
      824, 1321, 1143, 1143, 1143, 1143, 1143, 1143, 1143, 1143,
     1075, 1321, 1321, 1321, 1321, 1144, 1144, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1144, 1144, 1144, 1144, 1144, 1146,
     1146, 1146, 1146, 1146, 1146, 1146, 1146,  824, 1321, 1146,
     1146, 1146, 1146, 1146, 1146, 1321, 1321, 1075, 1009, 1321,

     1147, 1147, 1147, 1147, 1147, 1147, 1147, 1147, 1082, 1321,
     1321, 1321, 1321, 1148, 1148, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1148, 1148, 1148, 1148, 1148, 1150, 1150, 1150,
     1150, 1150, 1150, 1150, 1150, 1009, 1321, 1150, 1150, 1150,
     1150, 1150, 1150, 1321, 1321, 1082, 1155, 1321, 1157, 1157,
     1157, 1157, 1157, 1158, 1159, 1159, 1160, 1321, 1162, 1162,
     1162, 1162, 1162, 1163, 1164, 1164, 1166, 1321, 1167, 1167,
     1167, 1167, 1167, 1167, 1167, 1167, 1168, 1321, 1321, 1321,
     1321, 1169, 1169, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1169, 1169, 1169, 1169, 1169, 1170, 1170, 1170, 1170, 1170,

     1171, 1172, 1172,   82,   83, 1174, 1174, 1174, 1174, 1174,
     1175, 1176, 1176, 1177, 1321, 1179, 1179, 1179, 1179, 1179,
     1180, 1181, 1181, 1117, 1321, 1186, 1186, 1186, 1186, 1186,
     1186, 1123, 1321, 1190, 1190, 1190, 1190, 1190, 1190, 1190,
     1190, 1125, 1321, 1321, 1321, 1321, 1191, 1191, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1191, 1191, 1191, 1191, 1191,
     1194, 1194, 1194, 1194, 1194, 1194, 1194, 1194, 1123, 1321,
     1194, 1194, 1194, 1194, 1194, 1194, 1321, 1155, 1125, 1210,
     1210, 1210, 1210, 1210, 1210, 1160, 1321, 1214, 1214, 1214,
     1214, 1214, 1214, 1166, 1321, 1218, 1218, 1218, 1218, 1218,

     1218, 1218, 1218, 1168, 1321, 1321, 1321, 1321, 1219, 1219,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1219, 1219, 1219,
     1219, 1219, 1221, 1221, 1221, 1221, 1221, 1221, 1221, 1221,
     1166, 1321, 1221, 1221, 1221, 1221, 1221, 1221, 1321, 1177,
     1168, 1226, 1226, 1226, 1226, 1226, 1226,   82,   83, 1228,
     1228, 1228, 1228, 1228, 1229, 1230, 1230, 1231, 1321, 1233,
     1233, 1233, 1233, 1233, 1234, 1235, 1235, 1248, 1321, 1250,
     1250, 1250, 1250, 1250, 1251, 1252, 1252, 1253, 1321, 1255,
     1255, 1255, 1255, 1255, 1256, 1257, 1257,   82,   83, 1261,
     1261, 1261, 1261, 1261, 1262, 1263, 1263, 1231, 1321, 1268,

     1268, 1268, 1268, 1268, 1268, 1248, 1321, 1280, 1280, 1280,
     1280, 1280, 1280, 1253, 1321, 1284, 1284, 1284, 1284, 1284,
     1284, 1287, 1321, 1289, 1289, 1289, 1289, 1289, 1290, 1291,
     1291, 1296, 1321, 1298, 1298, 1298, 1298, 1298, 1299, 1300,
     1300, 1287, 1321, 1305, 1305, 1305, 1305, 1305, 1305, 1296,
     1321, 1310, 1310, 1310, 1310, 1310, 1310,   38,   38,   38,
       38,   38,   38,   38,   38,   71, 1321,   71,   71,   71,
       71,   71,   71,   78,   78,   78,   77,   77,   77,  105,
     1321,  105,  108, 1321,  108,  110,  110,  110,  111,  111,
      111,  140, 1321,  140,  141, 1321,  141,  141,  142,  142,

      142,  143,  143,  143,  151,  151,  151,  173, 1321,  173,
      176, 1321,  176,  177,  177,  177,  178,  178,  178,  191,
      191,  191,  196, 1321,  196,  199, 1321,  199,  200,  200,
      200,  200,  200,  215, 1321,  215,  216,  216,  216,  217,
      217,  217,  225,  225,  225,  225,  225,  232,  232,  232,
      233,  233,  233,  242, 1321,  242,  256,  256,  256,  259,
      259,  259,  260,  260,  260,  261,  261,  261,  281,  281,
      281,  282,  282,  282,  291,  291,  291,  296, 1321,  296,
      299, 1321,  299,  301, 1321,  301,  304, 1321,  304,  305,
      305,  305,  305,  305,  318,  318,  318,  319,  319,  319,

      320,  320,  320,  328,  328,  328,  328,  328,  335,  335,
      335,  335,  335,  342,  342,  342,  343,  343,  343,  347,
      347,  347,  355,  355,  355,  299, 1321,  299,  364, 1321,
      364,  304, 1321,  304,  368, 1321,  368,   54, 1321, 1321,
       54, 1321,   54,  382,  382,  382,  383,  383,  383,  410,
      410,  410,  411,  411,  411,  418,  418,  418,  425, 1321,
      425,  428, 1321,  428,  429, 1321,  429,  429,  429,  433,
      433,  433,  437,  437,  437,  440,  440,  440,  442, 1321,
      442,  445, 1321,  445,  447, 1321,  447,  450, 1321,  450,
      451,  451,  451,  451,  451,  460, 1321,  460,  463, 1321,

      463,  464,  464,  464,  465,  465,  465,  473,  473,  473,
      473,  473,  480,  480,  480,  480,  480,  487,  487,  487,
      487,  487,  494,  494,  494,  495,  495,  495,  499,  499,
      499,  503, 1321,  503,  503,  503,  506,  506,  506,  428,
     1321,  428,  513, 1321,  513,  518,  518,  518,  440,  440,
      440,  524,  524,  524,  445, 1321,  445,  528, 1321,  528,
      450, 1321,  450,  532, 1321,  532,  463, 1321,  463,  546,
     1321,  546,  547,  547,  547,  548,  548,  548,  582,  582,
      582,  583,  583,  583,  590,  590,  590,  597,  597,  597,
      604, 1321,  604,  607, 1321,  607,  609, 1321,  609,  612,

     1321,  612,  613, 1321,  613,  613,  613,  617,  617,  617,
      621,  621,  621,  624,  624,  624,  626, 1321,  626,  629,
     1321,  629,  631, 1321,  631,  634, 1321,  634,  635,  635,
      635,  635,  635,  644, 1321,  644,  647, 1321,  647,  648,
      648,  648,  660,  660,  660,  660,  660,  667,  667,  667,
      667,  667,  674,  674,  674,  674,  674,  681,  681,  681,
      681,  681,  688,  688,  688,  689,  689,  689,  693,  693,
      693,  697, 1321,  697,  697,  697,  700,  700,  700,  704,
     1321,  704,  704,  704,  707,  707,  707,  607, 1321,  607,
      714, 1321,  714,  612, 1321,  612,  718, 1321,  718,  723,

      723,  723,  624,  624,  624,  729,  729,  729,  629, 1321,
      629,  733, 1321,  733,  634, 1321,  634,  737, 1321,  737,
      647, 1321,  647,  751, 1321,  751,  752,  752,  752,  760,
      760,  760, 1321,  760,  756,  756,  756,  763, 1321,  763,
      767, 1321,  767,  771, 1321,  771,  775, 1321,  775,  779,
     1321,  779,  781,  781,  781,  782,  782,  782,  789,  789,
      789,  796,  796,  796,  803,  803,  803,  814, 1321,  814,
      817, 1321,  817,  819, 1321,  819,  822, 1321,  822,  823,
     1321,  823,  823,  823,  827,  827,  827,  831,  831,  831,
      834,  834,  834,  836, 1321,  836,  839, 1321,  839,  841,

     1321,  841,  844, 1321,  844,  845,  845,  845,  845,  845,
      854, 1321,  854,  857, 1321,  857,  863,  863,  863,  862,
      862,  862,  866,  866,  866, 1321,  866,  867,  867,  867,
      867,  867,  868,  868,  868, 1321,  868,  869,  869,  869,
      869,  869,  870,  870,  870, 1321,  870,  871,  871,  871,
      871,  871,  872,  872,  872, 1321,  872,  873,  873,  873,
      873,  873,  874,  874,  874, 1321,  874,  875,  875,  875,
      875,  875,  876,  876,  876, 1321,  876,  877,  877,  877,
      878,  878,  878,  882,  882,  882,  886, 1321,  886,  886,
      886,  889,  889,  889,  893, 1321,  893,  893,  893,  896,

      896,  896,  900, 1321,  900,  900,  900,  903,  903,  903,
      817, 1321,  817,  911, 1321,  911,  822, 1321,  822,  915,
     1321,  915,  920,  920,  920,  834,  834,  834,  926,  926,
      926,  839, 1321,  839,  930, 1321,  930,  844, 1321,  844,
      934, 1321,  934,  940, 1321,  940,  857, 1321,  857,  945,
     1321,  945,  947, 1321,  947,  950, 1321,  950,  951, 1321,
      951,  951,  951,  952,  952,  952, 1321,  952,  953,  953,
      953, 1321,  953,  954,  954,  954, 1321,  954,  955,  955,
      955, 1321,  955,  956,  956,  956, 1321,  956,  957,  957,
      957, 1321,  957,  958,  958,  958, 1321,  958,  959,  959,

      959,  960,  960,  960,  967,  967,  967,  974,  974,  974,
      981,  981,  981,  988,  988,  988,  999, 1321,  999, 1002,
     1321, 1002, 1004, 1321, 1004, 1007, 1321, 1007, 1008, 1321,
     1008, 1008, 1008, 1012, 1012, 1012, 1016, 1016, 1016, 1019,
     1019, 1019, 1021, 1321, 1021, 1024, 1321, 1024, 1026, 1321,
     1026, 1029, 1321, 1029, 1030, 1030, 1030, 1030, 1030, 1031,
     1031, 1031, 1321, 1031,  950, 1321,  950, 1039, 1321, 1039,
     1040, 1040, 1040, 1321, 1040, 1041, 1041, 1041, 1321, 1041,
     1042, 1042, 1042, 1321, 1042, 1043, 1043, 1043, 1321, 1043,
     1044, 1044, 1044, 1321, 1044, 1045, 1045, 1045, 1321, 1045,

     1046, 1046, 1046, 1321, 1046, 1047, 1047, 1047, 1055, 1055,
     1055, 1059, 1321, 1059, 1059, 1059, 1062, 1062, 1062, 1066,
     1321, 1066, 1066, 1066, 1069, 1069, 1069, 1073, 1321, 1073,
     1073, 1073, 1076, 1076, 1076, 1080, 1321, 1080, 1080, 1080,
     1083, 1083, 1083, 1002, 1321, 1002, 1091, 1321, 1091, 1007,
     1321, 1007, 1095, 1321, 1095, 1100, 1100, 1100, 1019, 1019,
     1019, 1106, 1106, 1106, 1024, 1321, 1024, 1110, 1321, 1110,
     1029, 1321, 1029, 1114, 1321, 1114, 1115, 1115, 1115, 1321,
     1115, 1118, 1321, 1118, 1121, 1321, 1121,  864,  864,  864,
     1321,  864, 1122, 1122, 1122, 1130, 1321, 1130, 1126, 1126,

     1126, 1133, 1321, 1133, 1132, 1132, 1132, 1137, 1321, 1137,
     1136, 1136, 1136, 1141, 1321, 1141, 1140, 1140, 1140, 1145,
     1321, 1145, 1144, 1144, 1144, 1149, 1321, 1149, 1148, 1148,
     1148, 1156, 1321, 1156, 1159, 1321, 1159, 1161, 1321, 1161,
     1164, 1321, 1164, 1165, 1321, 1165, 1165, 1165, 1169, 1169,
     1169, 1173, 1173, 1173, 1176, 1176, 1176, 1178, 1321, 1178,
     1181, 1321, 1181, 1182, 1182, 1182, 1321, 1182, 1121, 1321,
     1121, 1186, 1321, 1186, 1192, 1192, 1192, 1191, 1191, 1191,
     1195, 1321, 1195, 1196, 1321, 1196, 1196, 1196, 1197, 1321,
     1197, 1198, 1321, 1198, 1198, 1198, 1199, 1321, 1199, 1200,

     1321, 1200, 1200, 1200, 1201, 1321, 1201, 1202, 1321, 1202,
     1202, 1202, 1203, 1321, 1203, 1204, 1321, 1204, 1204, 1204,
     1205, 1321, 1205, 1159, 1321, 1159, 1210, 1321, 1210, 1164,
     1321, 1164, 1214, 1321, 1214, 1220, 1321, 1220, 1219, 1219,
     1219, 1176, 1176, 1176, 1222, 1222, 1222, 1181, 1321, 1181,
     1226, 1321, 1226, 1227, 1227, 1227, 1230, 1230, 1230, 1232,
     1321, 1232, 1235, 1321, 1235, 1236, 1321, 1236, 1236, 1236,
     1237, 1321, 1237, 1238, 1321, 1238, 1239, 1321, 1239, 1240,
     1321, 1240, 1241, 1321, 1241, 1242, 1321, 1242, 1243, 1321,
     1243, 1249, 1321, 1249, 1252, 1321, 1252, 1254, 1321, 1254,

     1257, 1321, 1257, 1258, 1321, 1258, 1258, 1258, 1259, 1321,
     1259, 1260, 1260, 1260, 1263, 1263, 1263, 1264, 1264, 1264,
     1268, 1321, 1268, 1269, 1321, 1269, 1270, 1321, 1270, 1271,
     1321, 1271, 1272, 1321, 1272, 1273, 1321, 1273, 1274, 1321,
     1274, 1275, 1321, 1275, 1280, 1321, 1280, 1284, 1321, 1284,
     1285, 1321, 1285, 1286, 1286, 1286, 1288, 1321, 1288, 1291,
     1321, 1291, 1193, 1321, 1193, 1297, 1321, 1297, 1300, 1321,
     1300, 1301, 1321, 1301, 1305, 1321, 1305, 1310, 1321, 1310,
        5, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321
    } ;

static yyconst short int yy_chk[7434] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    3,    3,    4,    4,   16, 1762,   16,   16,
       16,   16,   16,   16,   16,   16,   16,   48,   48,  109,
     1761,   16,   16,   18,   18,   18,   18,   18,   18,  109,
       16,   16,   16,   16,   16,   17,   17,   17,   17,   17,
       17,   17,   17,   24,  126,  126,   24,   24,   24,   24,

       24,   24,   24,   24,   24,  104,  104,  104, 1760,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   24,   24,   24,   24,   24,
       24,   24,   24,   24,   24,   25,   25,   25,   25,   25,
       25,   25,   25,   25,   28,   28,   32, 1759,   25,   25,
      149,  149,   28,   32,  120,  120,  120,   25,   25,   25,
       25,   25,   43,  141,   43,   43,   43,   43,   43,   43,
       43,   43,   44,  141,   44,   44,   44,   44,   44,   44,
       44,   44,   44,  206,  206,  159,  159,   44,   44,   86,
       86,   86,   86,   86,   86,  159,   44,   44,   44,   44,

       44,   47,   47,   47,   47,   47,   47,   47,   47,   49,
       49,   49,   49,   49,   49,   49,   49,   50,   50,   50,
       50,   50,   50,   50,   50,   50,   50,  212,  212,  130,
      160,  160,   50,   50,  115,  115,  115,  115,  115,  115,
      160,   50,   50,   50,   50,   50,   55,   55,   55,   55,
       55,   55,   55,   55,  130,  172,  172,  172, 1758,   55,
       55,  155,  155,  155,  155,  155,  155,  155,   55,   55,
       55,   55,   55,   74,  294,   74,   74,   74,   74,   74,
       74,   74,   74,   76,  294,   76,   76,   76,   76,   76,
       76,   76,   76,   76,  214,  214,  165,  165,   76,   76,

      163,  163,  163,  163,  163,  163,  165,   76,   76,   76,
       76,   76,   79,   79,   79,   79,   79,   79,   79,   79,
       79,   79,  195,  195,  195,  184,  184,   79,   79,  182,
      182,  182,  182,  182,  182,  184,   79,   79,   79,   79,
       79,   84,   84,   84,   84,   84,   84,   84,   84,   84,
       84,   84,  185,  185,  190,  190,   84,   84,  223,  223,
      230,  230,  185, 1757,  190,   84,   84,   84,   84,   84,
       85,   85,   85,   85,   85,   85,   85,   85,   87, 1756,
       87,   87,   87,   87,   87,   87,   87,   87,   88,   88,
       88,   88,   88,   88,   88,   88,  256,  256, 1755,  200,

      200,   88,   88,  188,  188,  188,  188,  188,  188,  200,
       88,   88,   88,   88,   88,  107, 1753,  107,  107,  107,
      107,  107,  107,  113,  113,  113,  113,  113,  113,  113,
      113,  113,  113,  113,  225,  225,  246,  246,  113,  113,
      257,  257,  259,  259,  225, 1752,  246,  113,  113,  113,
      113,  113,  114,  114,  114,  114,  114,  114,  114,  114,
      116,  350,  116,  116,  116,  116,  116,  116,  116,  116,
      121,  350,  121,  121,  121,  121,  121,  121,  121,  121,
      122,  122,  122,  122,  122,  122,  122,  122,  122,  122,
      122,  311,  311,  247,  247,  122,  122,  237,  237,  237,

      237,  237,  237,  247,  122,  122,  122,  122,  122,  123,
      123,  123,  123,  123,  123,  123,  123,  288,  288,  288,
      252,  252,  123,  123,  250,  250,  250,  250,  250,  250,
      252,  123,  123,  123,  123,  123,  124, 1750,  124,  124,
      124,  124,  124,  124,  124,  124,  125,  125,  125,  125,
      125,  125,  125,  125,  138, 1746,  138,  138,  138,  138,
      138,  138,  138,  138,  144,  144,  144,  144,  144,  144,
      144,  144,  144,  144,  258,  258,  267,  267, 1745,  144,
      144, 1744,  258,  258,  318,  318,  267, 1737,  144,  144,
      144,  144,  144,  145,  145,  145,  145,  145,  145,  145,

      145,  145,  145,  145,  326,  326,  268,  268,  145,  145,
      265,  265,  265,  265,  265,  265,  268,  145,  145,  145,
      145,  145,  146,  146,  146,  146,  146,  146,  146,  146,
      295,  295,  295,  273,  273,  146,  146,  271,  271,  271,
      271,  271,  271,  273,  146,  146,  146,  146,  146,  147,
     1735,  147,  147,  147,  147,  147,  147,  147,  147,  148,
      148,  148,  148,  148,  148,  148,  148,  157, 1734,  157,
      157,  157,  157,  157,  157,  157,  157,  161,  161,  161,
      161,  161,  161,  161,  161,  161,  161,  161,  274,  274,
      275,  275,  161,  161,  300,  300,  300, 1725,  274, 1715,

      275,  161,  161,  161,  161,  161,  162,  162,  162,  162,
      162,  162,  162,  162,  164,  354,  164,  164,  164,  164,
      164,  164,  164,  164,  175,  354,  175,  175,  175,  175,
      175,  175,  180,  180,  180,  180,  180,  180,  180,  180,
      180,  180,  180,  333,  333,  280,  280,  180,  180,  278,
      278,  278,  278,  278,  278,  280,  180,  180,  180,  180,
      180,  181,  181,  181,  181,  181,  181,  181,  181,  183,
     1714,  183,  183,  183,  183,  183,  183,  183,  183,  186,
      186,  186,  186,  186,  186,  186,  186,  186,  186,  186,
      340,  340,  305,  305,  186,  186,  286,  286,  286,  286,

      286,  286,  305,  186,  186,  186,  186,  186,  187,  187,
      187,  187,  187,  187,  187,  187,  189, 1713,  189,  189,
      189,  189,  189,  189,  189,  189,  193,  193,  193,  193,
      193,  193,  193,  193,  314,  314,  314,  328,  328,  193,
      193,  316,  316,  316,  335,  335, 1698,  328,  193,  193,
      193,  193,  193,  198,  335,  198,  198,  198,  198,  198,
      198,  201, 1693,  201,  201,  201,  201,  201,  201,  201,
      201,  202,  202,  202,  202,  202,  202,  202,  202,  202,
      202,  202,  355,  360,  361,  361,  202,  202,  363,  363,
      437,  437,  355,  360, 1690,  202,  202,  202,  202,  202,

      203,  203,  203,  203,  203,  203,  203,  203,  424,  424,
      424,  372,  372,  203,  203,  358,  358,  358,  358,  358,
      358,  372,  203,  203,  203,  203,  203,  204, 1687,  204,
      204,  204,  204,  204,  204,  204,  204,  205,  205,  205,
      205,  205,  205,  205,  205,  213,  213,  213,  213,  213,
      213,  213,  213,  213,  213,  218,  218,  218,  218,  218,
      218,  218,  218,  218,  218,  373,  373,  378,  378, 1686,
      218,  218,  430,  430,  430,  373, 1685,  378, 1671,  218,
      218,  218,  218,  218,  219,  219,  219,  219,  219,  219,
      219,  219,  219,  219,  219,  438,  438,  389,  389,  219,

      219,  376,  376,  376,  376,  376,  376,  389,  219,  219,
      219,  219,  219,  220,  220,  220,  220,  220,  220,  220,
      220,  440,  440, 1668,  390,  390,  220,  220,  387,  387,
      387,  387,  387,  387,  390,  220,  220,  220,  220,  220,
      221, 1656,  221,  221,  221,  221,  221,  221,  221,  221,
      222,  222,  222,  222,  222,  222,  222,  222,  226,  226,
      226,  226,  226,  226,  226,  226,  226,  226,  226,  457,
      457,  395,  395,  226,  226,  393,  393,  393,  393,  393,
      393,  395,  226,  226,  226,  226,  226,  227,  227,  227,
      227,  227,  227,  227,  227,  396,  396,  397,  397, 1655,

      227,  227,  441,  441,  441,  396, 1654,  397, 1637,  227,
      227,  227,  227,  227,  228, 1636,  228,  228,  228,  228,
      228,  228,  228,  228,  229,  229,  229,  229,  229,  229,
      229,  229,  234,  234,  234,  234,  234,  234,  234,  234,
      446,  446,  446,  402,  402,  234,  234,  400,  400,  400,
      400,  400,  400,  402,  234,  234,  234,  234,  234,  235,
     1632,  235,  235,  235,  235,  235,  235,  235,  235,  235,
      403,  403,  404,  404,  235,  235,  459,  459,  459, 1629,
      403, 1625,  404,  235,  235,  235,  235,  235,  236,  236,
      236,  236,  236,  236,  236,  236,  240,  417,  240,  240,

      240,  240,  240,  240,  240,  240,  244,  417,  244,  244,
      244,  244,  244,  244,  244,  244,  248,  248,  248,  248,
      248,  248,  248,  248,  248,  248,  248,  471,  471,  409,
      409,  248,  248,  407,  407,  407,  407,  407,  407,  409,
      248,  248,  248,  248,  248,  249,  249,  249,  249,  249,
      249,  249,  249,  251, 1622,  251,  251,  251,  251,  251,
      251,  251,  251,  255,  255,  255,  255,  255,  255,  255,
      255,  263,  263,  263,  263,  263,  263,  263,  263,  263,
      263,  263,  478,  478,  418, 1619,  263,  263,  415,  415,
      415,  415,  415,  415,  418,  263,  263,  263,  263,  263,

      264,  264,  264,  264,  264,  264,  264,  264,  266, 1618,
      266,  266,  266,  266,  266,  266,  266,  266,  269,  269,
      269,  269,  269,  269,  269,  269,  269,  269,  269,  485,
      485,  423, 1617,  269,  269,  421,  421,  421,  421,  421,
      421,  423,  269,  269,  269,  269,  269,  270,  270,  270,
      270,  270,  270,  270,  270,  272, 1597,  272,  272,  272,
      272,  272,  272,  272,  272,  276,  276,  276,  276,  276,
      276,  276,  276,  276,  276,  276,  436,  451,  451, 1596,
      276,  276,  492,  492,  524,  524,  436,  451, 1595,  276,
      276,  276,  276,  276,  277,  277,  277,  277,  277,  277,

      277,  277,  279,  502,  279,  279,  279,  279,  279,  279,
      279,  279,  284,  502,  284,  284,  284,  284,  284,  284,
      284,  284,  284,  439,  439,  473,  473,  284,  284,  525,
      525,  439,  439,  527,  527,  473,  284,  284,  284,  284,
      284,  285,  285,  285,  285,  285,  285,  285,  285,  289,
     1594,  289,  289,  289,  289,  289,  289,  289,  289,  289,
      480,  480,  487,  487,  289,  289,  603,  603,  603, 1579,
      480, 1578,  487,  289,  289,  289,  289,  289,  290,  290,
      290,  290,  290,  290,  290,  290,  509,  517,  518,  523,
     1577,  290,  290,  608,  608,  608,  509,  517,  518,  523,

      290,  290,  290,  290,  290,  292,  292,  292,  292,  292,
      292,  292,  292,  293, 1558,  293,  293,  293,  293,  293,
      293,  589,  298,  293,  298,  298,  298,  298,  298,  298,
      303,  589,  303,  303,  303,  303,  303,  303,  306, 1554,
      306,  306,  306,  306,  306,  306,  306,  306,  307,  307,
      307,  307,  307,  307,  307,  307,  307,  307,  307,  621,
      621,  536,  536,  307,  307,  521,  521,  521,  521,  521,
      521,  536,  307,  307,  307,  307,  307,  308,  308,  308,
      308,  308,  308,  308,  308,  537,  537,  542,  542, 1551,
      308,  308,  614,  614,  614,  537, 1547,  542, 1544,  308,

      308,  308,  308,  308,  309, 1541,  309,  309,  309,  309,
      309,  309,  309,  309,  310,  310,  310,  310,  310,  310,
      310,  310,  321,  321,  321,  321,  321,  321,  321,  321,
      321,  321,  622,  622, 1540,  554,  554,  321,  321,  540,
      540,  540,  540,  540,  540,  554,  321,  321,  321,  321,
      321,  322,  322,  322,  322,  322,  322,  322,  322,  322,
      322,  322,  624,  624,  555,  555,  322,  322,  552,  552,
      552,  552,  552,  552,  555,  322,  322,  322,  322,  322,
      323,  323,  323,  323,  323,  323,  323,  323,  625,  625,
      625,  560,  560,  323,  323,  558,  558,  558,  558,  558,

      558,  560,  323,  323,  323,  323,  323,  324, 1539,  324,
      324,  324,  324,  324,  324,  324,  324,  325,  325,  325,
      325,  325,  325,  325,  325,  329,  329,  329,  329,  329,
      329,  329,  329,  329,  329,  329,  561,  561,  562,  562,
      329,  329,  630,  630,  630, 1516,  561, 1500,  562,  329,
      329,  329,  329,  329,  330,  330,  330,  330,  330,  330,
      330,  330,  641,  641, 1499,  567,  567,  330,  330,  565,
      565,  565,  565,  565,  565,  567,  330,  330,  330,  330,
      330,  331, 1498,  331,  331,  331,  331,  331,  331,  331,
      331,  332,  332,  332,  332,  332,  332,  332,  332,  336,

      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      568,  568,  569,  569,  336,  336,  643,  643,  643, 1482,
      568, 1479,  569,  336,  336,  336,  336,  336,  337,  337,
      337,  337,  337,  337,  337,  337,  652,  652, 1476,  574,
      574,  337,  337,  572,  572,  572,  572,  572,  572,  574,
      337,  337,  337,  337,  337,  338, 1472,  338,  338,  338,
      338,  338,  338,  338,  338,  339,  339,  339,  339,  339,
      339,  339,  339,  344,  344,  344,  344,  344,  344,  344,
      344,  575,  575,  576,  576, 1469,  344,  344,  658,  658,
     1466,  575, 1430,  576, 1427,  344,  344,  344,  344,  344,

      345,  590,  345,  345,  345,  345,  345,  345,  345,  345,
      345,  590, 1424,  581,  581,  345,  345,  579,  579,  579,
      579,  579,  579,  581,  345,  345,  345,  345,  345,  346,
      346,  346,  346,  346,  346,  346,  346,  665,  665, 1420,
      595, 1417,  346,  346,  587,  587,  587,  587,  587,  587,
      595,  346,  346,  346,  346,  346,  348,  348,  348,  348,
      348,  348,  348,  348,  349, 1388,  349,  349,  349,  349,
      349,  349,  672,  672,  349,  352,  596,  352,  352,  352,
      352,  352,  352,  352,  352,  356,  596,  356,  356,  356,
      356,  356,  356,  356,  356,  356,  679,  679,  597, 1387,

      356,  356,  593,  593,  593,  593,  593,  593,  597,  356,
      356,  356,  356,  356,  357,  357,  357,  357,  357,  357,
      357,  357,  362,  362,  362,  362,  362,  362,  362,  362,
      362,  362,  366,  602,  366,  366,  366,  366,  366,  366,
      366,  366,  370,  602,  370,  370,  370,  370,  370,  370,
      370,  370,  374,  374,  374,  374,  374,  374,  374,  374,
      374,  374,  374,  686,  686,  620, 1383,  374,  374,  600,
      600,  600,  600,  600,  600,  620,  374,  374,  374,  374,
      374,  375,  375,  375,  375,  375,  375,  375,  375,  377,
      696,  377,  377,  377,  377,  377,  377,  377,  377,  380,

      696,  380,  380,  380,  380,  380,  380,  380,  380,  385,
      385,  385,  385,  385,  385,  385,  385,  385,  385,  385,
      623,  623,  635,  635,  385,  385,  729,  729,  623,  623,
      730,  730,  635,  385,  385,  385,  385,  385,  386,  386,
      386,  386,  386,  386,  386,  386,  388, 1380,  388,  388,
      388,  388,  388,  388,  388,  388,  391,  391,  391,  391,
      391,  391,  391,  391,  391,  391,  391,  732,  732,  660,
      660,  391,  391,  651,  651,  651,  651,  651,  651,  660,
      391,  391,  391,  391,  391,  392,  392,  392,  392,  392,
      392,  392,  392,  394, 1378,  394,  394,  394,  394,  394,

      394,  394,  394,  398,  398,  398,  398,  398,  398,  398,
      398,  398,  398,  398,  667,  667,  674,  674,  398,  398,
      712,  712,  712, 1356,  667, 1349,  674,  398,  398,  398,
      398,  398,  399,  399,  399,  399,  399,  399,  399,  399,
      401, 1345,  401,  401,  401,  401,  401,  401,  401,  401,
      405,  405,  405,  405,  405,  405,  405,  405,  405,  405,
      405,  681,  681,  703, 1339,  405,  405,  753,  753,  753,
     1333,  681, 1332,  703,  405,  405,  405,  405,  405,  406,
      406,  406,  406,  406,  406,  406,  406,  408,  710,  408,
      408,  408,  408,  408,  408,  408,  408,  413,  710,  413,

      413,  413,  413,  413,  413,  413,  413,  413,  722,  723,
      728, 1327,  413,  413,  760,  760,  763,  763,  722,  723,
      728,  413,  413,  413,  413,  413,  414,  414,  414,  414,
      414,  414,  414,  414,  419,  759,  419,  419,  419,  419,
      419,  419,  419,  419,  419,  759, 1323,  741,  741,  419,
      419,  726,  726,  726,  726,  726,  726,  741,  419,  419,
      419,  419,  419,  420,  420,  420,  420,  420,  420,  420,
      420,  427, 1310,  427,  427,  427,  427,  427,  427,  431,
     1305,  431,  431,  431,  431,  431,  431,  431,  431,  431,
      742,  742,  747,  747,  431,  431,  767,  767,  771,  771,

      742, 1300,  747,  431,  431,  431,  431,  431,  432,  432,
      432,  432,  432,  432,  432,  432,  775,  775, 1298,  761,
      761,  432,  432,  745,  745,  745,  745,  745,  745,  761,
      432,  432,  432,  432,  432,  434,  434,  434,  434,  434,
      434,  434,  434,  435, 1297,  435,  435,  435,  435,  435,
      435,  788,  444,  435,  444,  444,  444,  444,  444,  444,
      449,  788,  449,  449,  449,  449,  449,  449,  452, 1291,
      452,  452,  452,  452,  452,  452,  452,  452,  453,  453,
      453,  453,  453,  453,  453,  453,  453,  453,  453,  762,
      762,  764,  764,  453,  453,  779,  779,  831,  831,  762,

     1289,  764,  453,  453,  453,  453,  453,  454,  454,  454,
      454,  454,  454,  454,  454,  765,  765,  766,  766, 1288,
      454,  454,  813,  813,  813,  765, 1284,  766, 1283,  454,
      454,  454,  454,  454,  455, 1281,  455,  455,  455,  455,
      455,  455,  455,  455,  456,  456,  456,  456,  456,  456,
      456,  456,  462, 1280,  462,  462,  462,  462,  462,  462,
      466,  466,  466,  466,  466,  466,  466,  466,  466,  466,
      768,  768,  769,  769, 1268,  466,  466,  818,  818,  818,
      768, 1267,  769, 1265,  466,  466,  466,  466,  466,  467,
      467,  467,  467,  467,  467,  467,  467,  467,  467,  467,

      770,  770,  772,  772,  467,  467,  824,  824,  824, 1258,
      770, 1257,  772,  467,  467,  467,  467,  467,  468,  468,
      468,  468,  468,  468,  468,  468,  773,  773,  774,  774,
     1255,  468,  468,  832,  832, 1254,  773, 1252,  774, 1250,
      468,  468,  468,  468,  468,  469, 1249,  469,  469,  469,
      469,  469,  469,  469,  469,  470,  470,  470,  470,  470,
      470,  470,  470,  474,  474,  474,  474,  474,  474,  474,
      474,  474,  474,  474,  776,  776,  777,  777,  474,  474,
      834,  834,  851,  851,  776, 1236,  777,  474,  474,  474,
      474,  474,  475,  475,  475,  475,  475,  475,  475,  475,

      778,  778,  780,  780, 1235,  475,  475,  835,  835,  835,
      778, 1233,  780, 1232,  475,  475,  475,  475,  475,  476,
     1226,  476,  476,  476,  476,  476,  476,  476,  476,  477,
      477,  477,  477,  477,  477,  477,  477,  481,  481,  481,
      481,  481,  481,  481,  481,  481,  481,  481,  863,  863,
      789, 1217,  481,  481,  786,  786,  786,  786,  786,  786,
      789,  481,  481,  481,  481,  481,  482,  482,  482,  482,
      482,  482,  482,  482,  840,  840,  840,  794, 1215,  482,
      482,  792,  792,  792,  792,  792,  792,  794,  482,  482,
      482,  482,  482,  483, 1214,  483,  483,  483,  483,  483,

      483,  483,  483,  484,  484,  484,  484,  484,  484,  484,
      484,  488,  488,  488,  488,  488,  488,  488,  488,  488,
      488,  488,  795,  796,  801, 1213,  488,  488,  853,  853,
      853, 1211,  795,  796,  801,  488,  488,  488,  488,  488,
      489,  489,  489,  489,  489,  489,  489,  489,  864,  864,
     1210,  802, 1204,  489,  489,  799,  799,  799,  799,  799,
      799,  802,  489,  489,  489,  489,  489,  490, 1202,  490,
      490,  490,  490,  490,  490,  490,  490,  491,  491,  491,
      491,  491,  491,  491,  491,  496,  496,  496,  496,  496,
      496,  496,  496,  803,  808,  830,  845,  845,  496,  496,

      866,  866, 1200,  803,  808,  830,  845,  496,  496,  496,
      496,  496,  497,  861,  497,  497,  497,  497,  497,  497,
      497,  497,  497,  861, 1198,  862, 1196,  497,  497,  806,
      806,  806,  806,  806,  806,  862,  497,  497,  497,  497,
      497,  498,  498,  498,  498,  498,  498,  498,  498,  868,
      868, 1189,  865, 1187,  498,  498,  811,  811,  811,  811,
      811,  811,  865,  498,  498,  498,  498,  498,  500,  500,
      500,  500,  500,  500,  500,  500,  501, 1186,  501,  501,
      501,  501,  501,  501,  870,  870,  501,  504, 1181,  504,
      504,  504,  504,  504,  504,  504,  504,  504,  833,  833,

      867,  867,  504,  504,  872,  872,  833,  833,  874,  874,
      867,  504,  504,  504,  504,  504,  505,  505,  505,  505,
      505,  505,  505,  505,  869,  869,  871,  871, 1179,  505,
      505,  876,  876, 1178,  869, 1169,  871, 1165,  505,  505,
      505,  505,  505,  507,  507,  507,  507,  507,  507,  507,
      507,  508, 1164,  508,  508,  508,  508,  508,  508,  926,
      926,  508,  511,  885,  511,  511,  511,  511,  511,  511,
      511,  511,  515,  885,  515,  515,  515,  515,  515,  515,
      515,  515,  519, 1162,  519,  519,  519,  519,  519,  519,
      519,  519,  519,  873,  873,  875,  875,  519,  519,  909,

      909,  909, 1161,  873, 1159,  875,  519,  519,  519,  519,
      519,  520,  520,  520,  520,  520,  520,  520,  520,  526,
      526,  526,  526,  526,  526,  526,  526,  526,  526,  530,
      892,  530,  530,  530,  530,  530,  530,  530,  530,  534,
      892,  534,  534,  534,  534,  534,  534,  534,  534,  538,
      538,  538,  538,  538,  538,  538,  538,  538,  538,  538,
      899,  906,  919, 1157,  538,  538,  927,  927,  929,  929,
      899,  906,  919,  538,  538,  538,  538,  538,  539,  539,
      539,  539,  539,  539,  539,  539,  541,  920,  541,  541,
      541,  541,  541,  541,  541,  541,  544,  920,  544,  544,

      544,  544,  544,  544,  544,  544,  549,  549,  549,  549,
      549,  549,  549,  549,  549,  940,  940,  925, 1156,  549,
      549,  923,  923,  923,  923,  923,  923,  925,  549,  549,
      549,  549,  549,  550,  550,  550,  550,  550,  550,  550,
      550,  550,  550,  550,  938,  938,  939,  939,  550,  550,
      943,  943,  943, 1126,  938, 1125,  939,  550,  550,  550,
      550,  550,  551,  551,  551,  551,  551,  551,  551,  551,
      553, 1122,  553,  553,  553,  553,  553,  553,  553,  553,
      556,  556,  556,  556,  556,  556,  556,  556,  556,  556,
      556,  941,  941,  952,  952,  556,  556,  946,  946,  946,

     1121,  941,  953,  953,  556,  556,  556,  556,  556,  557,
      557,  557,  557,  557,  557,  557,  557,  559, 1119,  559,
      559,  559,  559,  559,  559,  559,  559,  563,  563,  563,
      563,  563,  563,  563,  563,  563,  563,  563,  954,  954,
      955,  955,  563,  563,  956,  956,  957,  957,  958,  958,
     1118,  563,  563,  563,  563,  563,  564,  564,  564,  564,
      564,  564,  564,  564,  566, 1114,  566,  566,  566,  566,
      566,  566,  566,  566,  570,  570,  570,  570,  570,  570,
      570,  570,  570,  570,  570, 1016, 1016,  966, 1113,  570,
      570,  964,  964,  964,  964,  964,  964,  966,  570,  570,

      570,  570,  570,  571,  571,  571,  571,  571,  571,  571,
      571,  573, 1111,  573,  573,  573,  573,  573,  573,  573,
      573,  577,  577,  577,  577,  577,  577,  577,  577,  577,
      577,  577,  967,  972,  973, 1110,  577,  577,  998,  998,
      998, 1104,  967,  972,  973,  577,  577,  577,  577,  577,
      578,  578,  578,  578,  578,  578,  578,  578,  580,  974,
      580,  580,  580,  580,  580,  580,  580,  580,  585,  974,
      585,  585,  585,  585,  585,  585,  585,  585,  585, 1017,
     1017,  979, 1098,  585,  585,  970,  970,  970,  970,  970,
      970,  979,  585,  585,  585,  585,  585,  586,  586,  586,

      586,  586,  586,  586,  586,  591,  980,  591,  591,  591,
      591,  591,  591,  591,  591,  591,  980, 1096,  981, 1095,
      591,  591,  977,  977,  977,  977,  977,  977,  981,  591,
      591,  591,  591,  591,  592,  592,  592,  592,  592,  592,
      592,  592,  598,  986,  598,  598,  598,  598,  598,  598,
      598,  598,  598,  986, 1094,  987, 1092,  598,  598,  984,
      984,  984,  984,  984,  984,  987,  598,  598,  598,  598,
      598,  599,  599,  599,  599,  599,  599,  599,  599,  606,
     1091,  606,  606,  606,  606,  606,  606,  611, 1083,  611,
      611,  611,  611,  611,  611,  615,  988,  615,  615,  615,

      615,  615,  615,  615,  615,  615,  988, 1080,  993, 1076,
      615,  615,  991,  991,  991,  991,  991,  991,  993,  615,
      615,  615,  615,  615,  616,  616,  616,  616,  616,  616,
      616,  616, 1003, 1003, 1003, 1015, 1073,  616,  616,  996,
      996,  996,  996,  996,  996, 1015,  616,  616,  616,  616,
      616,  618,  618,  618,  618,  618,  618,  618,  618,  619,
     1069,  619,  619,  619,  619,  619,  619, 1058,  628,  619,
      628,  628,  628,  628,  628,  628,  633, 1058,  633,  633,
      633,  633,  633,  633,  636, 1066,  636,  636,  636,  636,
      636,  636,  636,  636,  637,  637,  637,  637,  637,  637,

      637,  637,  637,  637,  637, 1009, 1009, 1009, 1062,  637,
      637, 1019, 1019, 1020, 1020, 1020, 1031, 1031,  637,  637,
      637,  637,  637,  638,  638,  638,  638,  638,  638,  638,
      638, 1018, 1018, 1025, 1025, 1025,  638,  638, 1059, 1018,
     1018, 1030, 1030, 1040, 1040,  638,  638,  638,  638,  638,
      639, 1030,  639,  639,  639,  639,  639,  639,  639,  639,
      640,  640,  640,  640,  640,  640,  640,  640,  646, 1055,
      646,  646,  646,  646,  646,  646,  649, 1052,  649,  649,
      649,  649,  649,  649,  649,  649,  649, 1041, 1041, 1042,
     1042,  649,  649, 1034, 1034, 1034, 1034, 1034, 1034, 1047,

      649,  649,  649,  649,  649,  650,  650,  650,  650,  650,
      650,  650,  650,  654,  654,  654,  654,  654,  654,  654,
      654,  654,  654,  654, 1043, 1043, 1044, 1044,  654,  654,
     1045, 1045, 1046, 1046, 1089, 1089, 1089,  654,  654,  654,
      654,  654,  656, 1039,  656,  656,  656,  656,  656,  656,
      656,  656,  657,  657,  657,  657,  657,  657,  657,  657,
      661,  661,  661,  661,  661,  661,  661,  661,  661,  661,
      661, 1106, 1106, 1065, 1038,  661,  661, 1050, 1050, 1050,
     1050, 1050, 1050, 1065,  661,  661,  661,  661,  661,  663,
     1036,  663,  663,  663,  663,  663,  663,  663,  663,  664,

      664,  664,  664,  664,  664,  664,  664,  668,  668,  668,
      668,  668,  668,  668,  668,  668,  668,  668, 1072, 1079,
     1086, 1029,  668,  668, 1107, 1107, 1027, 1099, 1072, 1079,
     1086,  668,  668,  668,  668,  668,  670, 1099,  670,  670,
      670,  670,  670,  670,  670,  670,  671,  671,  671,  671,
      671,  671,  671,  671,  675,  675,  675,  675,  675,  675,
      675,  675,  675,  675,  675, 1100, 1105, 1109, 1109,  675,
      675, 1115, 1115, 1026, 1129, 1100, 1105, 1024,  675,  675,
      675,  675,  675,  677, 1129,  677,  677,  677,  677,  677,
      677,  677,  677,  678,  678,  678,  678,  678,  678,  678,

      678,  682,  682,  682,  682,  682,  682,  682,  682,  682,
      682,  682, 1117, 1117, 1117, 1022,  682,  682, 1103, 1103,
     1103, 1103, 1103, 1103, 1021,  682,  682,  682,  682,  682,
      684, 1012,  684,  684,  684,  684,  684,  684,  684,  684,
      685,  685,  685,  685,  685,  685,  685,  685,  690,  690,
      690,  690,  690,  690,  690,  690, 1123, 1123, 1123, 1131,
     1008,  690,  690, 1155, 1155, 1155, 1132, 1173, 1173, 1131,
      690,  690,  690,  690,  690,  691, 1132,  691,  691,  691,
      691,  691,  691,  691,  691,  691, 1134, 1135, 1136, 1007,
      691,  691, 1160, 1160, 1160, 1005, 1134, 1135, 1136,  691,

      691,  691,  691,  691,  692,  692,  692,  692,  692,  692,
      692,  692, 1138, 1139, 1140, 1142, 1004,  692,  692, 1166,
     1166, 1166, 1138, 1139, 1140, 1142,  692,  692,  692,  692,
      692,  694,  694,  694,  694,  694,  694,  694,  694,  695,
     1002,  695,  695,  695,  695,  695,  695, 1174, 1174,  695,
      698, 1143,  698,  698,  698,  698,  698,  698,  698,  698,
      698, 1143, 1144, 1146, 1000,  698,  698, 1176, 1176, 1177,
     1177, 1177, 1144, 1146,  698,  698,  698,  698,  698,  699,
      699,  699,  699,  699,  699,  699,  699, 1147, 1148, 1150,
     1172,  999,  699,  699, 1182, 1182,  992, 1147, 1148, 1150,

     1172,  699,  699,  699,  699,  699,  701,  701,  701,  701,
      701,  701,  701,  701,  702,  985,  702,  702,  702,  702,
      702,  702, 1183, 1183,  702,  705,  978,  705,  705,  705,
      705,  705,  705,  705,  705,  705, 1185, 1185, 1190,  971,
      705,  705, 1153, 1153, 1153, 1153, 1153, 1153, 1190,  705,
      705,  705,  705,  705,  706,  706,  706,  706,  706,  706,
      706,  706, 1175, 1175, 1191, 1194,  965,  706,  706,  960,
     1175, 1175, 1222, 1222, 1191, 1194,  706,  706,  706,  706,
      706,  708,  708,  708,  708,  708,  708,  708,  708,  709,
      959,  709,  709,  709,  709,  709,  709, 1223, 1223,  709,

      716, 1218,  716,  716,  716,  716,  716,  716,  716,  716,
      720, 1218,  720,  720,  720,  720,  720,  720,  720,  720,
      724,  951,  724,  724,  724,  724,  724,  724,  724,  724,
      724, 1208, 1208, 1208,  950,  724,  724, 1225, 1225, 1227,
     1227, 1228, 1228,  948,  724,  724,  724,  724,  724,  725,
      725,  725,  725,  725,  725,  725,  725,  731,  731,  731,
      731,  731,  731,  731,  731,  731,  731,  735, 1219,  735,
      735,  735,  735,  735,  735,  735,  735,  739, 1219,  739,
      739,  739,  739,  739,  739,  739,  739,  743,  743,  743,
      743,  743,  743,  743,  743,  743,  743,  743, 1221, 1230,

     1230,  947,  743,  743, 1231, 1231, 1231,  945, 1221, 1260,
     1260,  743,  743,  743,  743,  743,  744,  744,  744,  744,
      744,  744,  744,  744,  746,  937,  746,  746,  746,  746,
      746,  746,  746,  746,  749,  935,  749,  749,  749,  749,
      749,  749,  749,  749,  754,  934,  754,  754,  754,  754,
      754,  754,  754,  754,  754, 1229, 1229, 1261, 1261,  754,
      754, 1263, 1263, 1229, 1229, 1248, 1248, 1248,  754,  754,
      754,  754,  754,  757,  757,  757,  757,  757,  757,  757,
      757,  758,  933,  758,  758,  758,  758,  758,  758, 1264,
     1264,  758,  784,  931,  784,  784,  784,  784,  784,  784,

      784,  784,  784, 1253, 1253, 1253,  930,  784,  784, 1246,
     1246, 1246, 1246, 1246, 1246,  924,  784,  784,  784,  784,
      784,  785,  785,  785,  785,  785,  785,  785,  785,  790,
      918,  790,  790,  790,  790,  790,  790,  790,  790,  790,
     1262, 1262, 1286, 1286,  790,  790,  916,  915, 1262, 1262,
     1278, 1278, 1278,  790,  790,  790,  790,  790,  791,  791,
      791,  791,  791,  791,  791,  791,  797,  914,  797,  797,
      797,  797,  797,  797,  797,  797,  797, 1287, 1287, 1287,
      912,  797,  797, 1294, 1294, 1294, 1294, 1294, 1294,  911,
      797,  797,  797,  797,  797,  798,  798,  798,  798,  798,

      798,  798,  798,  804,  903,  804,  804,  804,  804,  804,
      804,  804,  804,  804, 1296, 1296, 1296,  900,  804,  804,
     1303, 1303, 1303, 1308, 1308, 1308,  896,  804,  804,  804,
      804,  804,  805,  805,  805,  805,  805,  805,  805,  805,
      816,  893,  816,  816,  816,  816,  816,  816,  821,  889,
      821,  821,  821,  821,  821,  821,  825,  886,  825,  825,
      825,  825,  825,  825,  825,  825,  825,  882,  878,  877,
      860,  825,  825, 1313, 1313, 1313, 1313, 1313, 1313,  858,
      825,  825,  825,  825,  825,  826,  826,  826,  826,  826,
      826,  826,  826,  857,  855,  854,  852,  844,  826,  826,

     1317, 1317, 1317, 1317, 1317, 1317,  842,  826,  826,  826,
      826,  826,  828,  828,  828,  828,  828,  828,  828,  828,
      829,  841,  829,  829,  829,  829,  829,  829,  839,  838,
      829,  838,  838,  838,  838,  838,  838,  843,  837,  843,
      843,  843,  843,  843,  843,  846,  836,  846,  846,  846,
      846,  846,  846,  846,  846,  847,  847,  847,  847,  847,
      847,  847,  847,  847,  847,  847,  827,  823,  822,  820,
      847,  847,  819,  817,  815,  814,  807,  800,  793,  847,
      847,  847,  847,  847,  849,  787,  849,  849,  849,  849,
      849,  849,  849,  849,  850,  850,  850,  850,  850,  850,

      850,  850,  856,  783,  856,  856,  856,  856,  856,  856,
      859,  782,  859,  859,  859,  859,  859,  859,  859,  859,
      879,  879,  879,  879,  879,  879,  879,  879,  781,  756,
      755,  752,  751,  879,  879,  750,  748,  740,  738,  737,
      736,  734,  879,  879,  879,  879,  879,  880,  733,  880,
      880,  880,  880,  880,  880,  880,  880,  880,  727,  721,
      719,  718,  880,  880,  717,  715,  714,  707,  704,  700,
      697,  880,  880,  880,  880,  880,  881,  881,  881,  881,
      881,  881,  881,  881,  693,  689,  688,  687,  680,  881,
      881,  673,  666,  659,  653,  648,  647,  645,  881,  881,

      881,  881,  881,  883,  883,  883,  883,  883,  883,  883,
      883,  884,  644,  884,  884,  884,  884,  884,  884,  642,
      634,  884,  887,  632,  887,  887,  887,  887,  887,  887,
      887,  887,  887,  631,  629,  627,  626,  887,  887,  617,
      613,  612,  610,  609,  607,  605,  887,  887,  887,  887,
      887,  888,  888,  888,  888,  888,  888,  888,  888,  604,
      601,  594,  588,  584,  888,  888,  583,  582,  548,  547,
      546,  545,  543,  888,  888,  888,  888,  888,  890,  890,
      890,  890,  890,  890,  890,  890,  891,  535,  891,  891,
      891,  891,  891,  891,  533,  532,  891,  894,  531,  894,

      894,  894,  894,  894,  894,  894,  894,  894,  529,  528,
      522,  516,  894,  894,  514,  513,  512,  510,  506,  503,
      499,  894,  894,  894,  894,  894,  895,  895,  895,  895,
      895,  895,  895,  895,  495,  494,  493,  486,  479,  895,
      895,  472,  465,  464,  463,  461,  460,  458,  895,  895,
      895,  895,  895,  897,  897,  897,  897,  897,  897,  897,
      897,  898,  450,  898,  898,  898,  898,  898,  898,  448,
      447,  898,  901,  445,  901,  901,  901,  901,  901,  901,
      901,  901,  901,  443,  442,  433,  429,  901,  901,  428,
      426,  425,  422,  416,  412,  411,  901,  901,  901,  901,

      901,  902,  902,  902,  902,  902,  902,  902,  902,  410,
      384,  383,  382,  381,  902,  902,  379,  371,  369,  368,
      367,  365,  364,  902,  902,  902,  902,  902,  904,  904,
      904,  904,  904,  904,  904,  904,  905,  359,  905,  905,
      905,  905,  905,  905,  353,  351,  905,  913,  347,  913,
      913,  913,  913,  913,  913,  913,  913,  917,  343,  917,
      917,  917,  917,  917,  917,  917,  917,  921,  342,  921,
      921,  921,  921,  921,  921,  921,  921,  921,  341,  334,
      327,  320,  921,  921,  319,  312,  304,  302,  301,  299,
      297,  921,  921,  921,  921,  921,  922,  922,  922,  922,

      922,  922,  922,  922,  928,  928,  928,  928,  928,  928,
      928,  928,  928,  928,  932,  296,  932,  932,  932,  932,
      932,  932,  932,  932,  936,  291,  936,  936,  936,  936,
      936,  936,  936,  936,  949,  287,  949,  949,  949,  949,
      949,  949,  961,  961,  961,  961,  961,  961,  961,  961,
      961,  283,  282,  281,  262,  961,  961,  261,  260,  254,
      253,  245,  243,  242,  961,  961,  961,  961,  961,  962,
      241,  962,  962,  962,  962,  962,  962,  962,  962,  962,
      239,  238,  233,  232,  962,  962,  231,  224,  217,  216,
      215,  210,  207,  962,  962,  962,  962,  962,  963,  963,

      963,  963,  963,  963,  963,  963,  968,  199,  968,  968,
      968,  968,  968,  968,  968,  968,  968,  197,  196,  192,
      191,  968,  968,  179,  178,  177,  176,  174,  173,  171,
      968,  968,  968,  968,  968,  969,  969,  969,  969,  969,
      969,  969,  969,  975,  170,  975,  975,  975,  975,  975,
      975,  975,  975,  975,  169,  167,  158,  156,  975,  975,
      152,  151,  150,  143,  142,  140,  139,  975,  975,  975,
      975,  975,  976,  976,  976,  976,  976,  976,  976,  976,
      982,  137,  982,  982,  982,  982,  982,  982,  982,  982,
      982,  135,  134,  133,  131,  982,  982,  129,  128,  127,

      118,  117,  112,  111,  982,  982,  982,  982,  982,  983,
      983,  983,  983,  983,  983,  983,  983,  989,  110,  989,
      989,  989,  989,  989,  989,  989,  989,  989,  108,  106,
      105,  101,  989,  989,  100,   99,   97,   96,   95,   91,
       89,  989,  989,  989,  989,  989,  990,  990,  990,  990,
      990,  990,  990,  990, 1001,   83, 1001, 1001, 1001, 1001,
     1001, 1001, 1006,   82, 1006, 1006, 1006, 1006, 1006, 1006,
     1010,   81, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010,
     1010,   78,   77,   75,   73, 1010, 1010,   70,   69,   68,
       67,   65,   64,   63, 1010, 1010, 1010, 1010, 1010, 1011,

     1011, 1011, 1011, 1011, 1011, 1011, 1011,   62,   61,   60,
       59,   58, 1011, 1011,   57,   56,   46,   45,   40,   37,
       36, 1011, 1011, 1011, 1011, 1011, 1013, 1013, 1013, 1013,
     1013, 1013, 1013, 1013, 1014,   35, 1014, 1014, 1014, 1014,
     1014, 1014,   34, 1023, 1014, 1023, 1023, 1023, 1023, 1023,
     1023, 1028,   33, 1028, 1028, 1028, 1028, 1028, 1028, 1037,
       31, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1037, 1048,
       30, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
       29,   27,   26,   23, 1048, 1048,   22,   21,   19,    9,
        7,    5,    0, 1048, 1048, 1048, 1048, 1048, 1049, 1049,

     1049, 1049, 1049, 1049, 1049, 1049, 1053,    0, 1053, 1053,
     1053, 1053, 1053, 1053, 1053, 1053, 1053,    0,    0,    0,
        0, 1053, 1053,    0,    0,    0,    0,    0,    0,    0,
     1053, 1053, 1053, 1053, 1053, 1056, 1056, 1056, 1056, 1056,
     1056, 1056, 1056, 1057,    0, 1057, 1057, 1057, 1057, 1057,
     1057,    0,    0, 1057, 1060,    0, 1060, 1060, 1060, 1060,
     1060, 1060, 1060, 1060, 1060,    0,    0,    0,    0, 1060,
     1060,    0,    0,    0,    0,    0,    0,    0, 1060, 1060,
     1060, 1060, 1060, 1063, 1063, 1063, 1063, 1063, 1063, 1063,
     1063, 1064,    0, 1064, 1064, 1064, 1064, 1064, 1064,    0,

        0, 1064, 1067,    0, 1067, 1067, 1067, 1067, 1067, 1067,
     1067, 1067, 1067,    0,    0,    0,    0, 1067, 1067,    0,
        0,    0,    0,    0,    0,    0, 1067, 1067, 1067, 1067,
     1067, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1070, 1071,
        0, 1071, 1071, 1071, 1071, 1071, 1071,    0,    0, 1071,
     1074,    0, 1074, 1074, 1074, 1074, 1074, 1074, 1074, 1074,
     1074,    0,    0,    0,    0, 1074, 1074,    0,    0,    0,
        0,    0,    0,    0, 1074, 1074, 1074, 1074, 1074, 1077,
     1077, 1077, 1077, 1077, 1077, 1077, 1077, 1078,    0, 1078,
     1078, 1078, 1078, 1078, 1078,    0,    0, 1078, 1081,    0,

     1081, 1081, 1081, 1081, 1081, 1081, 1081, 1081, 1081,    0,
        0,    0,    0, 1081, 1081,    0,    0,    0,    0,    0,
        0,    0, 1081, 1081, 1081, 1081, 1081, 1084, 1084, 1084,
     1084, 1084, 1084, 1084, 1084, 1085,    0, 1085, 1085, 1085,
     1085, 1085, 1085,    0,    0, 1085, 1093,    0, 1093, 1093,
     1093, 1093, 1093, 1093, 1093, 1093, 1097,    0, 1097, 1097,
     1097, 1097, 1097, 1097, 1097, 1097, 1101,    0, 1101, 1101,
     1101, 1101, 1101, 1101, 1101, 1101, 1101,    0,    0,    0,
        0, 1101, 1101,    0,    0,    0,    0,    0,    0,    0,
     1101, 1101, 1101, 1101, 1101, 1102, 1102, 1102, 1102, 1102,

     1102, 1102, 1102, 1108, 1108, 1108, 1108, 1108, 1108, 1108,
     1108, 1108, 1108, 1112,    0, 1112, 1112, 1112, 1112, 1112,
     1112, 1112, 1112, 1120,    0, 1120, 1120, 1120, 1120, 1120,
     1120, 1124,    0, 1124, 1124, 1124, 1124, 1124, 1124, 1124,
     1124, 1124,    0,    0,    0,    0, 1124, 1124,    0,    0,
        0,    0,    0,    0,    0, 1124, 1124, 1124, 1124, 1124,
     1127, 1127, 1127, 1127, 1127, 1127, 1127, 1127, 1128,    0,
     1128, 1128, 1128, 1128, 1128, 1128,    0, 1158, 1128, 1158,
     1158, 1158, 1158, 1158, 1158, 1163,    0, 1163, 1163, 1163,
     1163, 1163, 1163, 1167,    0, 1167, 1167, 1167, 1167, 1167,

     1167, 1167, 1167, 1167,    0,    0,    0,    0, 1167, 1167,
        0,    0,    0,    0,    0,    0,    0, 1167, 1167, 1167,
     1167, 1167, 1170, 1170, 1170, 1170, 1170, 1170, 1170, 1170,
     1171,    0, 1171, 1171, 1171, 1171, 1171, 1171,    0, 1180,
     1171, 1180, 1180, 1180, 1180, 1180, 1180, 1184, 1184, 1184,
     1184, 1184, 1184, 1184, 1184, 1184, 1184, 1188,    0, 1188,
     1188, 1188, 1188, 1188, 1188, 1188, 1188, 1212,    0, 1212,
     1212, 1212, 1212, 1212, 1212, 1212, 1212, 1216,    0, 1216,
     1216, 1216, 1216, 1216, 1216, 1216, 1216, 1224, 1224, 1224,
     1224, 1224, 1224, 1224, 1224, 1224, 1224, 1234,    0, 1234,

     1234, 1234, 1234, 1234, 1234, 1251,    0, 1251, 1251, 1251,
     1251, 1251, 1251, 1256,    0, 1256, 1256, 1256, 1256, 1256,
     1256, 1266,    0, 1266, 1266, 1266, 1266, 1266, 1266, 1266,
     1266, 1282,    0, 1282, 1282, 1282, 1282, 1282, 1282, 1282,
     1282, 1290,    0, 1290, 1290, 1290, 1290, 1290, 1290, 1299,
        0, 1299, 1299, 1299, 1299, 1299, 1299, 1322, 1322, 1322,
     1322, 1322, 1322, 1322, 1322, 1324,    0, 1324, 1324, 1324,
     1324, 1324, 1324, 1325, 1325, 1325, 1326, 1326, 1326, 1328,
        0, 1328, 1329,    0, 1329, 1330, 1330, 1330, 1331, 1331,
     1331, 1334,    0, 1334, 1335,    0, 1335, 1335, 1336, 1336,

     1336, 1337, 1337, 1337, 1338, 1338, 1338, 1340,    0, 1340,
     1341,    0, 1341, 1342, 1342, 1342, 1343, 1343, 1343, 1344,
     1344, 1344, 1346,    0, 1346, 1347,    0, 1347, 1348, 1348,
     1348, 1348, 1348, 1350,    0, 1350, 1351, 1351, 1351, 1352,
     1352, 1352, 1353, 1353, 1353, 1353, 1353, 1354, 1354, 1354,
     1355, 1355, 1355, 1357,    0, 1357, 1358, 1358, 1358, 1359,
     1359, 1359, 1360, 1360, 1360, 1361, 1361, 1361, 1362, 1362,
     1362, 1363, 1363, 1363, 1364, 1364, 1364, 1365,    0, 1365,
     1366,    0, 1366, 1367,    0, 1367, 1368,    0, 1368, 1369,
     1369, 1369, 1369, 1369, 1370, 1370, 1370, 1371, 1371, 1371,

     1372, 1372, 1372, 1373, 1373, 1373, 1373, 1373, 1374, 1374,
     1374, 1374, 1374, 1375, 1375, 1375, 1376, 1376, 1376, 1377,
     1377, 1377, 1379, 1379, 1379, 1381,    0, 1381, 1382,    0,
     1382, 1384,    0, 1384, 1385,    0, 1385, 1386,    0,    0,
     1386,    0, 1386, 1389, 1389, 1389, 1390, 1390, 1390, 1391,
     1391, 1391, 1392, 1392, 1392, 1393, 1393, 1393, 1394,    0,
     1394, 1395,    0, 1395, 1396,    0, 1396, 1396, 1396, 1397,
     1397, 1397, 1398, 1398, 1398, 1399, 1399, 1399, 1400,    0,
     1400, 1401,    0, 1401, 1402,    0, 1402, 1403,    0, 1403,
     1404, 1404, 1404, 1404, 1404, 1405,    0, 1405, 1406,    0,

     1406, 1407, 1407, 1407, 1408, 1408, 1408, 1409, 1409, 1409,
     1409, 1409, 1410, 1410, 1410, 1410, 1410, 1411, 1411, 1411,
     1411, 1411, 1412, 1412, 1412, 1413, 1413, 1413, 1414, 1414,
     1414, 1415,    0, 1415, 1415, 1415, 1416, 1416, 1416, 1418,
        0, 1418, 1419,    0, 1419, 1421, 1421, 1421, 1422, 1422,
     1422, 1423, 1423, 1423, 1425,    0, 1425, 1426,    0, 1426,
     1428,    0, 1428, 1429,    0, 1429, 1431,    0, 1431, 1432,
        0, 1432, 1433, 1433, 1433, 1434, 1434, 1434, 1435, 1435,
     1435, 1436, 1436, 1436, 1437, 1437, 1437, 1438, 1438, 1438,
     1439,    0, 1439, 1440,    0, 1440, 1441,    0, 1441, 1442,

        0, 1442, 1443,    0, 1443, 1443, 1443, 1444, 1444, 1444,
     1445, 1445, 1445, 1446, 1446, 1446, 1447,    0, 1447, 1448,
        0, 1448, 1449,    0, 1449, 1450,    0, 1450, 1451, 1451,
     1451, 1451, 1451, 1452,    0, 1452, 1453,    0, 1453, 1454,
     1454, 1454, 1455, 1455, 1455, 1455, 1455, 1456, 1456, 1456,
     1456, 1456, 1457, 1457, 1457, 1457, 1457, 1458, 1458, 1458,
     1458, 1458, 1459, 1459, 1459, 1460, 1460, 1460, 1461, 1461,
     1461, 1462,    0, 1462, 1462, 1462, 1463, 1463, 1463, 1464,
        0, 1464, 1464, 1464, 1465, 1465, 1465, 1467,    0, 1467,
     1468,    0, 1468, 1470,    0, 1470, 1471,    0, 1471, 1473,

     1473, 1473, 1474, 1474, 1474, 1475, 1475, 1475, 1477,    0,
     1477, 1478,    0, 1478, 1480,    0, 1480, 1481,    0, 1481,
     1483,    0, 1483, 1484,    0, 1484, 1485, 1485, 1485, 1486,
     1486, 1486,    0, 1486, 1487, 1487, 1487, 1488,    0, 1488,
     1489,    0, 1489, 1490,    0, 1490, 1491,    0, 1491, 1492,
        0, 1492, 1493, 1493, 1493, 1494, 1494, 1494, 1495, 1495,
     1495, 1496, 1496, 1496, 1497, 1497, 1497, 1501,    0, 1501,
     1502,    0, 1502, 1503,    0, 1503, 1504,    0, 1504, 1505,
        0, 1505, 1505, 1505, 1506, 1506, 1506, 1507, 1507, 1507,
     1508, 1508, 1508, 1509,    0, 1509, 1510,    0, 1510, 1511,

        0, 1511, 1512,    0, 1512, 1513, 1513, 1513, 1513, 1513,
     1514,    0, 1514, 1515,    0, 1515, 1517, 1517, 1517, 1518,
     1518, 1518, 1519, 1519, 1519,    0, 1519, 1520, 1520, 1520,
     1520, 1520, 1521, 1521, 1521,    0, 1521, 1522, 1522, 1522,
     1522, 1522, 1523, 1523, 1523,    0, 1523, 1524, 1524, 1524,
     1524, 1524, 1525, 1525, 1525,    0, 1525, 1526, 1526, 1526,
     1526, 1526, 1527, 1527, 1527,    0, 1527, 1528, 1528, 1528,
     1528, 1528, 1529, 1529, 1529,    0, 1529, 1530, 1530, 1530,
     1531, 1531, 1531, 1532, 1532, 1532, 1533,    0, 1533, 1533,
     1533, 1534, 1534, 1534, 1535,    0, 1535, 1535, 1535, 1536,

     1536, 1536, 1537,    0, 1537, 1537, 1537, 1538, 1538, 1538,
     1542,    0, 1542, 1543,    0, 1543, 1545,    0, 1545, 1546,
        0, 1546, 1548, 1548, 1548, 1549, 1549, 1549, 1550, 1550,
     1550, 1552,    0, 1552, 1553,    0, 1553, 1555,    0, 1555,
     1556,    0, 1556, 1557,    0, 1557, 1559,    0, 1559, 1560,
        0, 1560, 1561,    0, 1561, 1562,    0, 1562, 1563,    0,
     1563, 1563, 1563, 1564, 1564, 1564,    0, 1564, 1565, 1565,
     1565,    0, 1565, 1566, 1566, 1566,    0, 1566, 1567, 1567,
     1567,    0, 1567, 1568, 1568, 1568,    0, 1568, 1569, 1569,
     1569,    0, 1569, 1570, 1570, 1570,    0, 1570, 1571, 1571,

     1571, 1572, 1572, 1572, 1573, 1573, 1573, 1574, 1574, 1574,
     1575, 1575, 1575, 1576, 1576, 1576, 1580,    0, 1580, 1581,
        0, 1581, 1582,    0, 1582, 1583,    0, 1583, 1584,    0,
     1584, 1584, 1584, 1585, 1585, 1585, 1586, 1586, 1586, 1587,
     1587, 1587, 1588,    0, 1588, 1589,    0, 1589, 1590,    0,
     1590, 1591,    0, 1591, 1592, 1592, 1592, 1592, 1592, 1593,
     1593, 1593,    0, 1593, 1598,    0, 1598, 1599,    0, 1599,
     1600, 1600, 1600,    0, 1600, 1601, 1601, 1601,    0, 1601,
     1602, 1602, 1602,    0, 1602, 1603, 1603, 1603,    0, 1603,
     1604, 1604, 1604,    0, 1604, 1605, 1605, 1605,    0, 1605,

     1606, 1606, 1606,    0, 1606, 1607, 1607, 1607, 1608, 1608,
     1608, 1609,    0, 1609, 1609, 1609, 1610, 1610, 1610, 1611,
        0, 1611, 1611, 1611, 1612, 1612, 1612, 1613,    0, 1613,
     1613, 1613, 1614, 1614, 1614, 1615,    0, 1615, 1615, 1615,
     1616, 1616, 1616, 1620,    0, 1620, 1621,    0, 1621, 1623,
        0, 1623, 1624,    0, 1624, 1626, 1626, 1626, 1627, 1627,
     1627, 1628, 1628, 1628, 1630,    0, 1630, 1631,    0, 1631,
     1633,    0, 1633, 1634,    0, 1634, 1635, 1635, 1635,    0,
     1635, 1638,    0, 1638, 1639,    0, 1639, 1640, 1640, 1640,
        0, 1640, 1641, 1641, 1641, 1642,    0, 1642, 1643, 1643,

     1643, 1644,    0, 1644, 1645, 1645, 1645, 1646,    0, 1646,
     1647, 1647, 1647, 1648,    0, 1648, 1649, 1649, 1649, 1650,
        0, 1650, 1651, 1651, 1651, 1652,    0, 1652, 1653, 1653,
     1653, 1657,    0, 1657, 1658,    0, 1658, 1659,    0, 1659,
     1660,    0, 1660, 1661,    0, 1661, 1661, 1661, 1662, 1662,
     1662, 1663, 1663, 1663, 1664, 1664, 1664, 1665,    0, 1665,
     1666,    0, 1666, 1667, 1667, 1667,    0, 1667, 1669,    0,
     1669, 1670,    0, 1670, 1672, 1672, 1672, 1673, 1673, 1673,
     1674,    0, 1674, 1675,    0, 1675, 1675, 1675, 1676,    0,
     1676, 1677,    0, 1677, 1677, 1677, 1678,    0, 1678, 1679,

        0, 1679, 1679, 1679, 1680,    0, 1680, 1681,    0, 1681,
     1681, 1681, 1682,    0, 1682, 1683,    0, 1683, 1683, 1683,
     1684,    0, 1684, 1688,    0, 1688, 1689,    0, 1689, 1691,
        0, 1691, 1692,    0, 1692, 1694,    0, 1694, 1695, 1695,
     1695, 1696, 1696, 1696, 1697, 1697, 1697, 1699,    0, 1699,
     1700,    0, 1700, 1701, 1701, 1701, 1702, 1702, 1702, 1703,
        0, 1703, 1704,    0, 1704, 1705,    0, 1705, 1705, 1705,
     1706,    0, 1706, 1707,    0, 1707, 1708,    0, 1708, 1709,
        0, 1709, 1710,    0, 1710, 1711,    0, 1711, 1712,    0,
     1712, 1716,    0, 1716, 1717,    0, 1717, 1718,    0, 1718,

     1719,    0, 1719, 1720,    0, 1720, 1720, 1720, 1721,    0,
     1721, 1722, 1722, 1722, 1723, 1723, 1723, 1724, 1724, 1724,
     1726,    0, 1726, 1727,    0, 1727, 1728,    0, 1728, 1729,
        0, 1729, 1730,    0, 1730, 1731,    0, 1731, 1732,    0,
     1732, 1733,    0, 1733, 1736,    0, 1736, 1738,    0, 1738,
     1739,    0, 1739, 1740, 1740, 1740, 1741,    0, 1741, 1742,
        0, 1742, 1743,    0, 1743, 1747,    0, 1747, 1748,    0,
     1748, 1749,    0, 1749, 1751,    0, 1751, 1754,    0, 1754,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,

     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321, 1321,
     1321, 1321, 1321
    } ;

static yy_state_type yy_last_accepting_state;
static char *yy_last_accepting_cpos;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
char *yytext;
#line 1 "policy.l"
#define INITIAL 0
#line 2 "policy.l"

#include "policy_module.h"
#include "libxorp/xorp.h"

#include "policy/common/policy_utils.hh"
#include <vector>
#include <string>
#include <sstream>
#include "policy_parser.hh"
#include "yacc.yy_policy_parser.cc.h"

#define yylval yy_policy_parserlval
#define yyerror yy_policy_parsererror
#define yyparse yy_policy_parserparse

void yyerror(const char *m);
extern int yyparse(void);

using namespace policy_parser;

// instantiate the globals here.
vector<Node*>* policy_parser::_parser_nodes;
unsigned policy_parser::_parser_lineno;

// try not to pollute
namespace {
	string _last_error;
	Term::BLOCKS _block;
}

#define YY_NO_UNPUT 1
#define YY_NEVER_INTERACTIVE 1
#define STR 1

#line 2590 "lex.yy_policy_parser.cc"

/* Macros after this point can all be overridden by user definitions in
 * section 1.
 */

#ifndef YY_SKIP_YYWRAP
#ifdef __cplusplus
extern "C" int yywrap YY_PROTO(( void ));
#else
extern int yywrap YY_PROTO(( void ));
#endif
#endif

#ifndef YY_NO_UNPUT
static void yyunput YY_PROTO(( int c, char *buf_ptr ));
#endif

#ifndef yytext_ptr
static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen YY_PROTO(( yyconst char * ));
#endif

#ifndef YY_NO_INPUT
#ifdef __cplusplus
static int yyinput YY_PROTO(( void ));
#else
static int input YY_PROTO(( void ));
#endif
#endif

#if YY_STACK_USED
static int yy_start_stack_ptr = 0;
static int yy_start_stack_depth = 0;
static int *yy_start_stack = 0;
#ifndef YY_NO_PUSH_STATE
static void yy_push_state YY_PROTO(( int new_state ));
#endif
#ifndef YY_NO_POP_STATE
static void yy_pop_state YY_PROTO(( void ));
#endif
#ifndef YY_NO_TOP_STATE
static int yy_top_state YY_PROTO(( void ));
#endif

#else
#define YY_NO_PUSH_STATE 1
#define YY_NO_POP_STATE 1
#define YY_NO_TOP_STATE 1
#endif

#ifdef YY_MALLOC_DECL
YY_MALLOC_DECL
#else
#if __STDC__
#ifndef __cplusplus
#include <stdlib.h>
#endif
#else
/* Just try to get by without declaring the routines.  This will fail
 * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
 * or sizeof(void*) != sizeof(int).
 */
#endif
#endif

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#define YY_READ_BUF_SIZE 8192
#endif

/* Copy whatever the last rule matched to the standard output. */

#ifndef ECHO
/* This used to be an fputs(), but since the string might contain NUL's,
 * we now use fwrite().
 */
#define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
	if ( yy_current_buffer->yy_is_interactive ) \
		{ \
		int c = '*', n; \
		for ( n = 0; n < max_size && \
			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
			buf[n] = (char) c; \
		if ( c == '\n' ) \
			buf[n++] = (char) c; \
		if ( c == EOF && ferror( yyin ) ) \
			YY_FATAL_ERROR( "input in flex scanner failed" ); \
		result = n; \
		} \
	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
		  && ferror( yyin ) ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
#define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
#endif

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL int yylex YY_PROTO(( void ))
#endif

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK break;
#endif

#define YY_RULE_SETUP \
	YY_USER_ACTION

YY_DECL
	{
	register yy_state_type yy_current_state;
	register char *yy_cp, *yy_bp;
	register int yy_act;

#line 62 "policy.l"


#line 2744 "lex.yy_policy_parser.cc"

	if ( yy_init )
		{
		yy_init = 0;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! yy_start )
			yy_start = 1;	/* first start state */

		if ( ! yyin )
			yyin = stdin;

		if ( ! yyout )
			yyout = stdout;

		if ( ! yy_current_buffer )
			yy_current_buffer =
				yy_create_buffer( yyin, YY_BUF_SIZE );

		yy_load_buffer_state();
		}

	while ( 1 )		/* loops until end-of-file is reached */
		{
		yy_cp = yy_c_buf_p;

		/* Support of yytext. */
		*yy_cp = yy_hold_char;

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

		yy_current_state = yy_start;
yy_match:
		do
			{
			register YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
			if ( yy_accept[yy_current_state] )
				{
				yy_last_accepting_state = yy_current_state;
				yy_last_accepting_cpos = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1322 )
					yy_c = yy_meta[(unsigned int) yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
			++yy_cp;
			}
		while ( yy_base[yy_current_state] != 7381 );

yy_find_action:
		yy_act = yy_accept[yy_current_state];
		if ( yy_act == 0 )
			{ /* have to back up */
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			yy_act = yy_accept[yy_current_state];
			}

		YY_DO_BEFORE_ACTION;


do_action:	/* This label is used only to access EOF actions. */


		switch ( yy_act )
	{ /* beginning of action switch */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = yy_hold_char;
			yy_cp = yy_last_accepting_cpos;
			yy_current_state = yy_last_accepting_state;
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 64 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINTRANGE;
		}  
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 68 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_UINT;
		}  
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 72 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_INT;
		}  
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 76 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 80 "policy.l"
{ yylval.c_str = strdup(yytext);
		  return YY_BOOL;
		}  
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 84 "policy.l"
BEGIN(STR);
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 86 "policy.l"
BEGIN(INITIAL);
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 88 "policy.l"
{ yylval.c_str = strdup(yytext); 
		  _parser_lineno += policy_utils::count_nl(yytext);
		  /* XXX: a string can be started with " but terminated with '
		   * and vice versa...
		   */ 
		  return YY_STR;
		}
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 96 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4RANGE;
		}
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 101 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4;
		}
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 106 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV4NET;
		}
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 112 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6RANGE;
		}
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 117 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6;
		}
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 122 "policy.l"
{
		  yylval.c_str = strdup(yytext);
		  return YY_IPV6NET;
		}
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 127 "policy.l"
{
		  // the colon is an alias for asignment in action and equality
		  // in the source / dest blocks.
		  if (_block == Term::ACTION)
		  	return YY_ASSIGN;
		  else
		  	return YY_EQ;
		}
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 136 "policy.l"
return YY_LPAR;
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 137 "policy.l"
return YY_RPAR;
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 139 "policy.l"
return YY_EQ; 
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 140 "policy.l"
return YY_NE;
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 141 "policy.l"
return YY_LE;
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 142 "policy.l"
return YY_GE;
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 143 "policy.l"
return YY_LT;
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 144 "policy.l"
return YY_GT;
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 146 "policy.l"
return YY_AND;
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 147 "policy.l"
return YY_OR;
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 148 "policy.l"
return YY_XOR;
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 149 "policy.l"
return YY_NOT;
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 151 "policy.l"
return YY_ADD;
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 152 "policy.l"
return YY_ADD;
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 153 "policy.l"
return YY_SUB;
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 154 "policy.l"
return YY_MUL;
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 155 "policy.l"
return YY_ASSIGN;
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 157 "policy.l"
return YY_HEAD;
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 158 "policy.l"
return YY_CTR;
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 159 "policy.l"
return YY_NE_INT;
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 161 "policy.l"
return YY_ACCEPT;
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 162 "policy.l"
return YY_REJECT;
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 164 "policy.l"
return YY_SET;
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 165 "policy.l"
return YY_REGEX;
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 167 "policy.l"
return YY_PROTOCOL;
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 169 "policy.l"
{ yylval.c_str = strdup(yytext);
					  return YY_ID;
					}  
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 173 "policy.l"
return YY_SEMICOLON;
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 175 "policy.l"
/* eat blanks */
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 177 "policy.l"
_parser_lineno++;
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 179 "policy.l"
{ yyerror("Unknown character"); }
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 181 "policy.l"
ECHO;
	YY_BREAK
#line 3100 "lex.yy_policy_parser.cc"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(STR):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = yy_hold_char;
		YY_RESTORE_YY_MORE_OFFSET

		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between yy_current_buffer and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			yy_n_chars = yy_current_buffer->yy_n_chars;
			yy_current_buffer->yy_input_file = yyin;
			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state();

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = yytext_ptr + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++yy_c_buf_p;
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
				yy_cp = yy_c_buf_p;
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer() )
			{
			case EOB_ACT_END_OF_FILE:
				{
				yy_did_buffer_switch_on_eof = 0;

				if ( yywrap() )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				yy_c_buf_p =
					yytext_ptr + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				yy_c_buf_p =
				&yy_current_buffer->yy_ch_buf[yy_n_chars];

				yy_current_state = yy_get_previous_state();

				yy_cp = yy_c_buf_p;
				yy_bp = yytext_ptr + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of yylex */


/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */

static int yy_get_next_buffer()
	{
	register char *dest = yy_current_buffer->yy_ch_buf;
	register char *source = yytext_ptr;
	register int number_to_move, i;
	int ret_val;

	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( yy_current_buffer->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		yy_current_buffer->yy_n_chars = yy_n_chars = 0;

	else
		{
		int num_to_read =
			yy_current_buffer->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */
#ifdef YY_USES_REJECT
			YY_FATAL_ERROR(
"input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
#else

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = yy_current_buffer;

			int yy_c_buf_p_offset =
				(int) (yy_c_buf_p - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yy_flex_realloc( (void *) b->yy_ch_buf,
							 b->yy_buf_size + 2 );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = 0;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = yy_current_buffer->yy_buf_size -
						number_to_move - 1;
#endif
			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
			yy_n_chars, num_to_read );

		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	if ( yy_n_chars == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			yy_current_buffer->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	yy_n_chars += number_to_move;
	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;

	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];

	return ret_val;
	}


/* yy_get_previous_state - get the state just before the EOB char was reached */

static yy_state_type yy_get_previous_state()
	{
	register yy_state_type yy_current_state;
	register char *yy_cp;

	yy_current_state = yy_start;

	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
		{
		register YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			yy_last_accepting_state = yy_current_state;
			yy_last_accepting_cpos = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1322 )
				yy_c = yy_meta[(unsigned int) yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
		}

	return yy_current_state;
	}


/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */

#ifdef YY_USE_PROTOS
static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
#else
static yy_state_type yy_try_NUL_trans( yy_current_state )
yy_state_type yy_current_state;
#endif
	{
	register int yy_is_jam;
	register char *yy_cp = yy_c_buf_p;

	register YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		yy_last_accepting_state = yy_current_state;
		yy_last_accepting_cpos = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1322 )
			yy_c = yy_meta[(unsigned int) yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
	yy_is_jam = (yy_current_state == 1321);

	return yy_is_jam ? 0 : yy_current_state;
	}


#ifndef YY_NO_UNPUT
#ifdef YY_USE_PROTOS
static void yyunput( int c, register char *yy_bp )
#else
static void yyunput( c, yy_bp )
int c;
register char *yy_bp;
#endif
	{
	register char *yy_cp = yy_c_buf_p;

	/* undo effects of setting up yytext */
	*yy_cp = yy_hold_char;

	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		register int number_to_move = yy_n_chars + 2;
		register char *dest = &yy_current_buffer->yy_ch_buf[
					yy_current_buffer->yy_buf_size + 2];
		register char *source =
				&yy_current_buffer->yy_ch_buf[number_to_move];

		while ( source > yy_current_buffer->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		yy_current_buffer->yy_n_chars =
			yy_n_chars = yy_current_buffer->yy_buf_size;

		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;


	yytext_ptr = yy_bp;
	yy_hold_char = *yy_cp;
	yy_c_buf_p = yy_cp;
	}
#endif	/* ifndef YY_NO_UNPUT */


#ifdef __cplusplus
static int yyinput()
#else
static int input()
#endif
	{
	int c;

	*yy_c_buf_p = yy_hold_char;

	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
			/* This was really a NUL. */
			*yy_c_buf_p = '\0';

		else
			{ /* need more input */
			int offset = yy_c_buf_p - yytext_ptr;
			++yy_c_buf_p;

			switch ( yy_get_next_buffer() )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/* fall through */

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap() )
						return EOF;

					if ( ! yy_did_buffer_switch_on_eof )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					yy_c_buf_p = yytext_ptr + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
	*yy_c_buf_p = '\0';	/* preserve yytext */
	yy_hold_char = *++yy_c_buf_p;


	return c;
	}


#ifdef YY_USE_PROTOS
void yyrestart( FILE *input_file )
#else
void yyrestart( input_file )
FILE *input_file;
#endif
	{
	if ( ! yy_current_buffer )
		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );

	yy_init_buffer( yy_current_buffer, input_file );
	yy_load_buffer_state();
	}


#ifdef YY_USE_PROTOS
void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
#else
void yy_switch_to_buffer( new_buffer )
YY_BUFFER_STATE new_buffer;
#endif
	{
	if ( yy_current_buffer == new_buffer )
		return;

	if ( yy_current_buffer )
		{
		/* Flush out information for old buffer. */
		*yy_c_buf_p = yy_hold_char;
		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
		yy_current_buffer->yy_n_chars = yy_n_chars;
		}

	yy_current_buffer = new_buffer;
	yy_load_buffer_state();

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	yy_did_buffer_switch_on_eof = 1;
	}


#ifdef YY_USE_PROTOS
void yy_load_buffer_state( void )
#else
void yy_load_buffer_state()
#endif
	{
	yy_n_chars = yy_current_buffer->yy_n_chars;
	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
	yyin = yy_current_buffer->yy_input_file;
	yy_hold_char = *yy_c_buf_p;
	}


#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
#else
YY_BUFFER_STATE yy_create_buffer( file, size )
FILE *file;
int size;
#endif
	{
	YY_BUFFER_STATE b;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
	}


#ifdef YY_USE_PROTOS
void yy_delete_buffer( YY_BUFFER_STATE b )
#else
void yy_delete_buffer( b )
YY_BUFFER_STATE b;
#endif
	{
	if ( ! b )
		return;

	if ( b == yy_current_buffer )
		yy_current_buffer = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yy_flex_free( (void *) b->yy_ch_buf );

	yy_flex_free( (void *) b );
	}


#ifndef YY_ALWAYS_INTERACTIVE
#ifndef YY_NEVER_INTERACTIVE
extern int isatty YY_PROTO(( int ));
#endif
#endif

#ifdef YY_USE_PROTOS
void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
#else
void yy_init_buffer( b, file )
YY_BUFFER_STATE b;
FILE *file;
#endif


	{
	yy_flush_buffer( b );

	b->yy_input_file = file;
	b->yy_fill_buffer = 1;

#if YY_ALWAYS_INTERACTIVE
	b->yy_is_interactive = 1;
#else
#if YY_NEVER_INTERACTIVE
	b->yy_is_interactive = 0;
#else
	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
#endif
#endif
	}


#ifdef YY_USE_PROTOS
void yy_flush_buffer( YY_BUFFER_STATE b )
#else
void yy_flush_buffer( b )
YY_BUFFER_STATE b;
#endif

	{
	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == yy_current_buffer )
		yy_load_buffer_state();
	}


#ifndef YY_NO_SCAN_BUFFER
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
#else
YY_BUFFER_STATE yy_scan_buffer( base, size )
char *base;
yy_size_t size;
#endif
	{
	YY_BUFFER_STATE b;

	if ( size < 2 ||
	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
	     base[size-1] != YY_END_OF_BUFFER_CHAR )
		/* They forgot to leave room for the EOB's. */
		return 0;

	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );

	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
	b->yy_buf_pos = b->yy_ch_buf = base;
	b->yy_is_our_buffer = 0;
	b->yy_input_file = 0;
	b->yy_n_chars = b->yy_buf_size;
	b->yy_is_interactive = 0;
	b->yy_at_bol = 1;
	b->yy_fill_buffer = 0;
	b->yy_buffer_status = YY_BUFFER_NEW;

	yy_switch_to_buffer( b );

	return b;
	}
#endif


#ifndef YY_NO_SCAN_STRING
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
#else
YY_BUFFER_STATE yy_scan_string( yy_str )
yyconst char *yy_str;
#endif
	{
	int len;
	for ( len = 0; yy_str[len]; ++len )
		;

	return yy_scan_bytes( yy_str, len );
	}
#endif


#ifndef YY_NO_SCAN_BYTES
#ifdef YY_USE_PROTOS
YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
#else
YY_BUFFER_STATE yy_scan_bytes( bytes, len )
yyconst char *bytes;
int len;
#endif
	{
	YY_BUFFER_STATE b;
	char *buf;
	yy_size_t n;
	int i;

	/* Get memory for full buffer, including space for trailing EOB's. */
	n = len + 2;
	buf = (char *) yy_flex_alloc( n );
	if ( ! buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );

	for ( i = 0; i < len; ++i )
		buf[i] = bytes[i];

	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;

	b = yy_scan_buffer( buf, n );
	if ( ! b )
		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );

	/* It's okay to grow etc. this buffer, and we should throw it
	 * away when we're done.
	 */
	b->yy_is_our_buffer = 1;

	return b;
	}
#endif


#ifndef YY_NO_PUSH_STATE
#ifdef YY_USE_PROTOS
static void yy_push_state( int new_state )
#else
static void yy_push_state( new_state )
int new_state;
#endif
	{
	if ( yy_start_stack_ptr >= yy_start_stack_depth )
		{
		yy_size_t new_size;

		yy_start_stack_depth += YY_START_STACK_INCR;
		new_size = yy_start_stack_depth * sizeof( int );

		if ( ! yy_start_stack )
			yy_start_stack = (int *) yy_flex_alloc( new_size );

		else
			yy_start_stack = (int *) yy_flex_realloc(
					(void *) yy_start_stack, new_size );

		if ( ! yy_start_stack )
			YY_FATAL_ERROR(
			"out of memory expanding start-condition stack" );
		}

	yy_start_stack[yy_start_stack_ptr++] = YY_START;

	BEGIN(new_state);
	}
#endif


#ifndef YY_NO_POP_STATE
static void yy_pop_state()
	{
	if ( --yy_start_stack_ptr < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN(yy_start_stack[yy_start_stack_ptr]);
	}
#endif


#ifndef YY_NO_TOP_STATE
static int yy_top_state()
	{
	return yy_start_stack[yy_start_stack_ptr - 1];
	}
#endif

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

#ifdef YY_USE_PROTOS
static void yy_fatal_error( yyconst char msg[] )
#else
static void yy_fatal_error( msg )
char msg[];
#endif
	{
	(void) fprintf( stderr, "%s\n", msg );
	exit( YY_EXIT_FAILURE );
	}



/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
		yytext[yyleng] = yy_hold_char; \
		yy_c_buf_p = yytext + n; \
		yy_hold_char = *yy_c_buf_p; \
		*yy_c_buf_p = '\0'; \
		yyleng = n; \
		} \
	while ( 0 )


/* Internal utility routines. */

#ifndef yytext_ptr
#ifdef YY_USE_PROTOS
static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
#else
static void yy_flex_strncpy( s1, s2, n )
char *s1;
yyconst char *s2;
int n;
#endif
	{
	register int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
	}
#endif

#ifdef YY_NEED_STRLEN
#ifdef YY_USE_PROTOS
static int yy_flex_strlen( yyconst char *s )
#else
static int yy_flex_strlen( s )
yyconst char *s;
#endif
	{
	register int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
	}
#endif


#ifdef YY_USE_PROTOS
static void *yy_flex_alloc( yy_size_t size )
#else
static void *yy_flex_alloc( size )
yy_size_t size;
#endif
	{
	return (void *) malloc( size );
	}

#ifdef YY_USE_PROTOS
static void *yy_flex_realloc( void *ptr, yy_size_t size )
#else
static void *yy_flex_realloc( ptr, size )
void *ptr;
yy_size_t size;
#endif
	{
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return (void *) realloc( (char *) ptr, size );
	}

#ifdef YY_USE_PROTOS
static void yy_flex_free( void *ptr )
#else
static void yy_flex_free( ptr )
void *ptr;
#endif
	{
	free( ptr );
	}

#if YY_MAIN
int main()
	{
	yylex();
	return 0;
	}
#endif
#line 181 "policy.l"


void yyerror(const char *m)
{
        ostringstream oss;
        oss << "Error on line " <<  _parser_lineno << " near (";

	for(int i = 0; i < yyleng; i++)
		oss << yytext[i];
	oss << "): " << m;

        _last_error = oss.str();
}

// Everything is put in the lexer because of YY_BUFFER_STATE...
int 
policy_parser::policy_parse(vector<Node*>& outnodes, const Term::BLOCKS& block, 
			    const string& conf, string& outerr)
{

        YY_BUFFER_STATE yybuffstate = yy_scan_string(conf.c_str());

        _last_error = "No error";
        _parser_nodes = &outnodes;
        _parser_lineno = 1;
	_block = block;

        int res = yyparse();
        
        yy_delete_buffer(yybuffstate);
        outerr = _last_error;
        
        return res;
}
