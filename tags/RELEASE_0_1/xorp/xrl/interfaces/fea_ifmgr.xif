/* $XORP: xorp/xrl/interfaces/fea_ifmgr.xif,v 1.1 2002/11/15 00:09:04 hodson Exp $ */

/*
 * Forwarding Engine Abstraction Interface Management XRL interface.
 */

interface ifmgr/0.1 {
	get_all_interface_names -> ifnames:list

	get_configured_interface_names -> ifnames:list

	get_all_vif_names ? ifname:txt -> vifs:list

	get_configured_vif_names ? ifname:txt -> vifs:list

	get_vif_flags4 ? ifname:txt					      \
		       & vif:txt					      \
		       & address:ipv4					      \
		      -> enabled:bool					      \
		       & broadcast:bool					      \
		       & loopback:bool					      \
		       & point_to_point:bool				      \
		       & multicast:bool 				      

	get_vif_flags6 ? ifname:txt					      \
		       & vif:txt 					      \
		       & address:ipv6					      \
		      -> enabled:bool 					      \
		       & loopback:bool					      \
		       & point_to_point:bool				      \
		       & multicast:bool

	get_all_vif_addresses4 ? ifname:txt 				      \
			       & vif:txt				      \
			       -> addresses:list

	get_configured_vif_addresses4 ? ifname:txt			      \
				      & vif:txt				      \
				      -> addresses:list

	get_all_vif_addresses6 ? ifname:txt				      \
			       & vif:txt				      \
			       -> addresses:list

	get_configured_vif_addresses6 ? ifname:txt 			      \
				      & vif:txt				      \
				      -> addresses:list

	get_interface_enabled ? ifname:txt -> enabled:bool

	get_mac ? ifname:txt -> mac:mac

	get_mtu ? ifname:txt -> mtu:u32

	get_vif_enabled ? ifname:txt & vif:txt -> enabled:bool

	get_prefix4 ? ifname:txt & vif:txt & address:ipv4 -> prefix:u32

	get_broadcast4 ? ifname:txt & vif:txt & address:ipv4 -> broadcast:ipv4

	get_endpoint4 ? ifname:txt & vif:txt & address:ipv4 -> endpoint:ipv4

	get_prefix6 ? ifname:txt & vif:txt & address:ipv6 -> prefix:u32

	get_endpoint6 ? ifname:txt & vif:txt & address:ipv6 -> endpoint:ipv6

	start_transaction -> tid:u32

	commit_transaction ? tid:u32

	abort_transaction ? tid:u32

	create_interface ? tid:u32 & ifname:txt

	delete_interface ? tid:u32 & ifname:txt

	set_interface_enabled ? tid:u32 & ifname:txt & enabled:bool

	set_mac ? tid:u32 & ifname:txt & mac:mac

	set_mtu ? tid:u32 & ifname:txt & mtu:u32

	/**
	 * Create a vif
	 *
	 * @param ifname the name of the physical interface associated with
	 *               the new vif.
	 * @param vif name for new vif, must be unique across all the
	 *               vifs in the system.
	 */
	create_vif ? tid:u32 & ifname:txt & vif:txt
	delete_vif ? tid:u32 & ifname:txt & vif:txt

	set_vif_enabled ? tid:u32 & ifname:txt & vif:txt & enabled:bool

	create_address4 ? tid:u32 & ifname:txt & vif:txt & address:ipv4

	delete_address4 ? tid:u32 & ifname:txt & vif:txt & address:ipv4

	set_prefix4 ? tid:u32 						      \
		    & ifname:txt					      \
		    & vif:txt						      \
		    & address:ipv4					      \
		    & prefix:u32

	set_broadcast4 ? tid:u32					      \
		       & ifname:txt					      \
		       & vif:txt					      \
		       & address:ipv4					      \
		       & broadcast:ipv4

	set_endpoint4 ? tid:u32						      \
		      & ifname:txt					      \
		      & vif:txt						      \
		      & address:ipv4					      \
		      & endpoint:ipv4

	create_address6 ? tid:u32 					      \
			& ifname:txt					      \
			& vif:txt					      \
			& address:ipv6

	delete_address6 ? tid:u32					      \
			& ifname:txt					      \
			& vif:txt					      \
			& address:ipv6

	set_prefix6 ? tid:u32						      \
		    & ifname:txt					      \
		    & vif:txt						      \
		    & address:ipv6					      \
		    & prefix:u32

	set_endpoint6 ? tid:u32						      \
		      & ifname:txt					      \
		      & vif:txt						      \
		      & address:ipv6					      \
		      & endpoint:ipv6
	/**
	 * Register network interface observer 
	 *  @param clientname name of xrl entity supporting 
	 * fea_ifmgr_client.xif methods.
	 */
	register_client ? clientname:txt

	/**
	 * Unregister network interface observer.  This method is not
	 * strictly necessary, the fea will remove the interface observer from
	 * it's list of known observers if interface update XRLs fail.
	 */
	unregister_client ? clientname:txt
}









