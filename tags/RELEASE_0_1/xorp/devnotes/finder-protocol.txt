			Finder Protocol (v0.0)

$Id$

The finder is a centralized service location application.  It allows
XORP modules to determine how to talk to the different hardware and
software services that are available on a XORP router.  XORP modules
may be distributed across multiple hardware platforms and as
user-space and kernel modules.  Therefore a number of IPC mechanisms
exist to reflect the differing contact requirements.  The Finder
Server is the process responsible for maintaining contact information.

All XORP entities register themselves with the Finder Server and it
relays this information when queried.  Clients of the server may cache
query results to obviate the need to talk to the Finder Server.  The
IPC mechanisms used by the clients to communicate with each other are
expected to detect inconsistencies that arise from a process crashing
or losing state.

The Finder Server and it's clients communicate using the Finder
Protocol.  For the initial implementation, the finder protocol is
implemented on over TCP.  Every message is ACK'ed, which is overkill
at present, but makes it easy to add a UDP module at a later stage.

Section 1: Basic Message Encoding
---------------------------------

Messages are ASCII strings that consist of three components: a header,
a command and a message digest.  The header includes the protocol
version, a sequence number, and an optional ack field that contains
the sequence number of the message that generated this response.
There are a small number of commands, that provide a simple
registration and lookup service. The message digest allows permits
authentication between client and server - authorized clients will be
configured with the same authentication key as the server, commands
with the incorrect message digest are ignored.

Every command is acknowledged by an ACK packet of the same type.

Components within a message are separated by CRLF, and fields within a
component are tab delimited.  Sequence numbers and ack number are
16-bit unsigned integers.

General packet format (should be ebnf):

	Finder/<proto version> <seqno> [<ackno>]
	<command> <arg0> <arg1> ...
	HMAC/<hmac_algorithm> <digest>

For the initial implementation the <proto version> is 1.0 and the
<hmac_algorithm> is MD5.

Section 2: Commands
-------------------

2.1 HELLO and BYE

HELLO messages announce the presence of a process and can be used to
test application liveness.  The format of a HELLO message is:

	HELLO <application string> <process id>

The <application string> should be the name of the sending
application.  The <process id> is a unique identifier associated with
a process that can be used to test for application restarts.  If the
server or client detects a process id change then they may safely
assume the process sending the HELLO has restarted.  The server when
detecting a client restart should flush all existing state associated
with the client.  A client detecting a server restart should
re-register it's entries.

The BYE message announces the graceful termination of a process.  The
format of the BYE message is just:

	BYE		

Upon receipt of a BYE message all state associated with the
originating entity should be flushed.

2.2 REGISTER, LOCATE, NOTIFY

	REGISTER <service name> <protocol family instantiation string>

Advertise availability of a particular service.  Only sent by clients.

	LOCATE <service name>

Request location of a particular service.  Only sent by clients.

	NOTIFY <service name> <protocol family instantiation string>

Advise client of service location, normal response to a LOCATE
request.  Only sent by servers.

2.3 ERROR

ERROR <seqno> <msg>

<seqno> = sequence number of message that triggered error.
<msg>   = error message.

2.4 Example Transactions

From finder to client:
    FINDER/1.0 10
    HELLO Finder 17001
    HMAC/MD5 0x01234567012345670123456701234567

From client to finder:
    FINDER/1.0 2000
    HELLO ForwardingElement 17054
    HMAC/MD5 0x01234567012345670123456701234567


From client A to finder:
    FINDER/1.0 3003
    REGISTER interface:de0 sysV:queue-17054
    HMAC/MD5 0x01234567012345670123456701234567

From client B to finder:
    FINDER/1.0 1111
    LOCATE  interface:de0
    HMAC/MD5 0x01234567012345670123456701234567

then finder to client B
    FINDER/1.0 100 1111
    NOTIFY interface:de0 sysV:queue-17054
    HMAC/MD5 0x01234567012345670123456701234567
