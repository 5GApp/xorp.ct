/* $XORP$ */

/*
** XRL interface to: IP datagram access control list functionality.
*/
interface packet_acl/0.1 {
	/**
	 * Get the name of the ACL backend currently in use.
	 */
	get_backend -> name:txt

	/**
	 * Set the underlying packet ACL backend type in use.
	 *
	 * NOTE: If XORP rules currently exist, this operation will
	 * perform an implicit flush and reload when switching to
	 * the new provider.
	 *
	 * @param provider Name of an ACL backend to use on
	 * systems which have a choice of more than one backend.
	 */
	set_backend ? name:txt

	/**
	 *  Get the underlying packet ACL provider version in use.
	 */
	get_version -> version:txt

	/**
	 * Start ACL transaction.
	 *
	 * @param tid the transaction ID returned by this operation.
	 */
	start_transaction -> tid:u32

	/**
	 * Commit ACL transaction.
	 *
	 * @param tid the transaction ID for this operation.
	 */
	commit_transaction ? tid:u32

	/**
	 * Abort ACL transaction.
	 *
	 * @param tid the transaction ID for this operation.
	 */
	abort_transaction ? tid:u32

	/**
	 * Add an IPv4 family ACL entry.
	 *
	 * @param tid the transaction ID for this operation.
	 * @param ifname Name of the interface where this filter is
	 * to be applied.
	 * @param vifname Name of the vif where this filter is
	 * to be applied.
	 * @param src Source IPv4 address with network prefix.
	 * @param dst Destination IPv4 address with network prefix.
	 * @param proto IP protocol number for match (0-255, 255 is wildcard).
	 * @param sport Source TCP/UDP port (0-65535, 0 is wildcard).
	 * @param dport Destination TCP/UDP port (0-65535, 0 is wildcard).
	 * @param action Action taken when this filter is matched.
	 */
	add_entry4 ? \
		tid:u32 & \
		ifname:txt & \
		vifname:txt & \
		src:ipv4net & \
		dst:ipv4net & \
		proto:u32 & \
		sport:u32 & \
		dport:u32 & \
		action:txt

	/**
	 * Delete an IPv4 family ACL entry.
	 *
	 * @param tid the transaction ID for this operation.
	 * @param ifname Name of the interface where this filter is
	 * to be deleted.
	 * @param vifname Name of the vif where this filter is
	 * to be deleted.
	 * @param src Source IPv4 address with network prefix.
	 * @param dst Destination IPv4 address with network prefix.
	 * @param proto IP protocol number for match (0-255, 255 is wildcard).
	 * @param sport Source TCP/UDP port (0-65535, 0 is wildcard).
	 * @param dport Destination TCP/UDP port (0-65535, 0 is wildcard).
	 */
	delete_entry4 ? \
		tid:u32 & \
		ifname:txt & \
		vifname:txt & \
		src:ipv4net & \
		dst:ipv4net & \
		proto:u32 & \
		sport:u32 & \
		dport:u32

	/**
	 * Delete all IPv4 family ACL entries.
	 *
	 * @param tid the transaction ID for this operation.
	 */
	delete_all_entries4 ? tid:u32

	/**
	 * Add an IPv6 family ACL entry.
	 *
	 * @param tid the transaction ID for this operation.
	 * @param ifname Name of the interface where this filter is
	 * to be applied.
	 * @param vifname Name of the vif where this filter is
	 * to be applied.
	 * @param src Source IPv6 address with network prefix.
	 * @param dst Destination IPv6 address with network prefix.
	 * @param proto IP protocol number for match (0-255, 255 is wildcard).
	 * @param sport Source TCP/UDP port (0-65535, 0 is wildcard).
	 * @param dport Destination TCP/UDP port (0-65535, 0 is wildcard).
	 * @param action Action taken when this filter is matched.
	 */
	add_entry6 ? \
		tid:u32 & \
		ifname:txt & \
		vifname:txt & \
		src:ipv6net & \
		dst:ipv6net & \
		proto:u32 & \
		sport:u32 & \
		dport:u32 & \
		action:txt

	/**
	 * Delete an IPv6 family ACL entry.
	 *
	 * @param tid the transaction ID for this operation.
	 * @param ifname Name of the interface where this filter is
	 * to be deleted.
	 * @param vifname Name of the vif where this filter is
	 * to be deleted.
	 * @param src Source IPv6 address with network prefix.
	 * @param dst Destination IPv6 address with network prefix.
	 * @param proto IP protocol number for match (0-255, 255 is wildcard).
	 * @param sport Source TCP/UDP port (0-65535, 0 is wildcard).
	 * @param dport Destination TCP/UDP port (0-65535, 0 is wildcard).
	 */
	delete_entry6 ? \
		tid:u32 & \
		ifname:txt & \
		vifname:txt & \
		src:ipv6net & \
		dst:ipv6net & \
		proto:u32 & \
		sport:u32 & \
		dport:u32

	/**
	 * Delete all IPv6 family ACL entries.
	 *
	 * @param tid the transaction ID for this operation.
	 */
	delete_all_entries6 ? tid:u32

	/*
	 * Get a token for a list of IPv4 ACL entries.
	 *
	 * @param token to be provided when calling get_entry_list_next4.
	 * @param more true if the list is not empty.
	 */
	get_entry_list_start4 -> \
		token:u32 & \
		more:bool

	/*
	 * Get the next item in a list of IPv4 ACL entries.
	 *
	 * @param token returned by a previous call to get_entry_list_start4.
	 * @param ifname Name of the interface where this filter exists.
	 * @param vifname Name of the vif where this filter exists.
	 * @param src Source IPv6 address with network prefix.
	 * @param dst Destination IPv6 address with network prefix.
	 * @param proto IP protocol number for match (0-255, 255 is wildcard).
	 * @param sport Source TCP/UDP port (0-65535, 0 is wildcard).
	 * @param dport Destination TCP/UDP port (0-65535, 0 is wildcard).
	 * @param action Action taken when this filter is matched.
	 * @param more true if the list has more items remaining.
	 */
	get_entry_list_next4 ? \
		token:u32 \
		-> \
		ifname:txt & \
		vifname:txt & \
		src:ipv4net & \
		dst:ipv4net & \
		proto:u32 & \
		sport:u32 & \
		dport:u32 & \
		action:txt & \
		more:bool
}
